{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/cssfilter/lib/index.js","webpack:///./node_modules/xss/lib/util.js","webpack:///./node_modules/xss/lib/default.js","webpack:///./node_modules/cssfilter/lib/default.js","webpack:///./node_modules/cssfilter/lib/util.js","webpack:///./node_modules/xss/lib/parser.js","webpack:///./node_modules/showdown/dist/showdown.js","webpack:///./node_modules/xss/lib/index.js","webpack:///./doc/index.js","webpack:///./node_modules/cssfilter/lib/css.js","webpack:///./node_modules/cssfilter/lib/parser.js","webpack:///./node_modules/xss/lib/xss.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","DEFAULT","FilterCSS","html","options","process","window","filterCSS","indexOf","arr","item","j","Array","length","forEach","fn","scope","trim","str","String","replace","spaceIndex","match","exec","index","getDefaultCSSWhiteList","getDefaultWhiteList","_","a","abbr","address","area","article","aside","audio","b","bdi","bdo","big","blockquote","br","caption","center","cite","code","col","colgroup","dd","del","details","div","dl","dt","em","font","footer","h1","h2","h3","h4","h5","h6","header","hr","img","ins","li","mark","nav","ol","pre","section","small","span","sub","sup","strong","table","tbody","td","tfoot","th","thead","tr","tt","u","ul","video","defaultCSSFilter","escapeHtml","REGEXP_LT","REGEXP_GT","REGEXP_QUOTE","REGEXP_QUOTE_2","REGEXP_ATTR_VALUE_1","REGEXP_ATTR_VALUE_COLON","REGEXP_ATTR_VALUE_NEWLINE","REGEXP_DEFAULT_ON_TAG_ATTR_4","REGEXP_DEFAULT_ON_TAG_ATTR_7","REGEXP_DEFAULT_ON_TAG_ATTR_8","escapeQuote","unescapeQuote","escapeHtmlEntities","fromCharCode","parseInt","substr","escapeDangerHtml5Entities","clearNonPrintableCharacter","str2","len","charCodeAt","charAt","friendlyAttrValue","escapeAttrValue","STRIP_COMMENT_TAG_REGEXP","whiteList","onTag","tag","onIgnoreTag","onTagAttr","onIgnoreTagAttr","safeAttrValue","cssFilter","lastIndex","test","onIgnoreTagStripAll","StripTagBody","tags","next","isRemoveAllTag","isArray","removeList","posStart","isRemoveTag","isClosing","ret","end","position","push","remove","rethtml","lastPos","pos","slice","stripCommentTag","stripBlankChar","chars","split","filter","char","join","align-content","align-items","align-self","alignment-adjust","alignment-baseline","all","anchor-point","animation","animation-delay","animation-direction","animation-duration","animation-fill-mode","animation-iteration-count","animation-name","animation-play-state","animation-timing-function","azimuth","backface-visibility","background","background-attachment","background-clip","background-color","background-image","background-origin","background-position","background-repeat","background-size","baseline-shift","binding","bleed","bookmark-label","bookmark-level","bookmark-state","border","border-bottom","border-bottom-color","border-bottom-left-radius","border-bottom-right-radius","border-bottom-style","border-bottom-width","border-collapse","border-color","border-image","border-image-outset","border-image-repeat","border-image-slice","border-image-source","border-image-width","border-left","border-left-color","border-left-style","border-left-width","border-radius","border-right","border-right-color","border-right-style","border-right-width","border-spacing","border-style","border-top","border-top-color","border-top-left-radius","border-top-right-radius","border-top-style","border-top-width","border-width","bottom","box-decoration-break","box-shadow","box-sizing","box-snap","box-suppress","break-after","break-before","break-inside","caption-side","chains","clear","clip","clip-path","clip-rule","color","color-interpolation-filters","column-count","column-fill","column-gap","column-rule","column-rule-color","column-rule-style","column-rule-width","column-span","column-width","columns","contain","content","counter-increment","counter-reset","counter-set","crop","cue","cue-after","cue-before","cursor","direction","display","display-inside","display-list","display-outside","dominant-baseline","elevation","empty-cells","flex","flex-basis","flex-direction","flex-flow","flex-grow","flex-shrink","flex-wrap","float","float-offset","flood-color","flood-opacity","flow-from","flow-into","font-family","font-feature-settings","font-kerning","font-language-override","font-size","font-size-adjust","font-stretch","font-style","font-synthesis","font-variant","font-variant-alternates","font-variant-caps","font-variant-east-asian","font-variant-ligatures","font-variant-numeric","font-variant-position","font-weight","grid","grid-area","grid-auto-columns","grid-auto-flow","grid-auto-rows","grid-column","grid-column-end","grid-column-start","grid-row","grid-row-end","grid-row-start","grid-template","grid-template-areas","grid-template-columns","grid-template-rows","hanging-punctuation","height","hyphens","icon","image-orientation","image-resolution","ime-mode","initial-letters","inline-box-align","justify-content","justify-items","justify-self","left","letter-spacing","lighting-color","line-box-contain","line-break","line-grid","line-height","line-snap","line-stacking","line-stacking-ruby","line-stacking-shift","line-stacking-strategy","list-style","list-style-image","list-style-position","list-style-type","margin","margin-bottom","margin-left","margin-right","margin-top","marker-offset","marker-side","marks","mask","mask-box","mask-box-outset","mask-box-repeat","mask-box-slice","mask-box-source","mask-box-width","mask-clip","mask-image","mask-origin","mask-position","mask-repeat","mask-size","mask-source-type","mask-type","max-height","max-lines","max-width","min-height","min-width","move-to","nav-down","nav-index","nav-left","nav-right","nav-up","object-fit","object-position","opacity","order","orphans","outline","outline-color","outline-offset","outline-style","outline-width","overflow","overflow-wrap","overflow-x","overflow-y","padding","padding-bottom","padding-left","padding-right","padding-top","page","page-break-after","page-break-before","page-break-inside","page-policy","pause","pause-after","pause-before","perspective","perspective-origin","pitch","pitch-range","play-during","presentation-level","quotes","region-fragment","resize","rest","rest-after","rest-before","richness","right","rotation","rotation-point","ruby-align","ruby-merge","ruby-position","shape-image-threshold","shape-outside","shape-margin","size","speak","speak-as","speak-header","speak-numeral","speak-punctuation","speech-rate","stress","string-set","tab-size","table-layout","text-align","text-align-last","text-combine-upright","text-decoration","text-decoration-color","text-decoration-line","text-decoration-skip","text-decoration-style","text-emphasis","text-emphasis-color","text-emphasis-position","text-emphasis-style","text-height","text-indent","text-justify","text-orientation","text-overflow","text-shadow","text-space-collapse","text-transform","text-underline-position","text-wrap","top","transform","transform-origin","transform-style","transition","transition-delay","transition-duration","transition-property","transition-timing-function","unicode-bidi","vertical-align","visibility","voice-balance","voice-duration","voice-family","voice-pitch","voice-range","voice-rate","voice-stress","voice-volume","volume","white-space","widows","width","will-change","word-break","word-spacing","word-wrap","wrap-flow","wrap-through","writing-mode","z-index","REGEXP_URL_JAVASCRIPT","onAttr","onIgnoreAttr","trimRight","getTagName","tagName","toLowerCase","REGEXP_ILLEGAL_ATTR_NAME","findNextEqual","findBeforeEqual","stripQuoteWrap","text","isQuoteWrapString","parseTag","tagStart","quoteStart","currentPos","currentTagName","currentHtml","parseAttr","retAttrs","tmpName","addAttr","__WEBPACK_AMD_DEFINE_RESULT__","getDefaultOpts","simple","defaultOptions","omitExtraWLInCodeBlocks","defaultValue","describe","type","noHeaderId","prefixHeaderId","rawPrefixHeaderId","ghCompatibleHeaderId","rawHeaderId","headerLevelStart","parseImgDimensions","simplifiedAutoLink","excludeTrailingPunctuationFromURLs","literalMidWordUnderscores","literalMidWordAsterisks","strikethrough","tables","tablesHeaderId","ghCodeBlocks","tasklists","smoothLivePreview","smartIndentationFix","description","disableForced4SpacesIndentedSublists","simpleLineBreaks","requireSpaceBeforeHeadingText","ghMentions","ghMentionsLink","encodeEmails","openLinksInNewWindow","backslashEscapesHTMLTags","emoji","underline","completeHTMLDocument","metadata","splitAdjacentBlockquotes","JSON","parse","stringify","opt","showdown","parsers","extensions","globalOptions","setFlavor","flavor","github","original","ghost","vanilla","allOn","allOptionsOn","validate","extension","errMsg","valid","error","helper","baseMsg","ext","isString","isUndefined","listeners","regex","ln","RegExp","escapeCharactersCallback","wholeMatch","m1","setOption","this","getOption","getOptions","resetOptions","Error","preset","option","getFlavor","getFlavorOptions","getDefaultOptions","subParser","func","stdExtName","validExtension","getAllExtensions","removeExtension","resetExtensions","validateExtension","console","warn","isFunction","toString","obj","callback","prop","escapeCharacters","charsToEscape","afterBackslash","regexString","unescapeHTMLEntities","txt","rgxFindMatchPos","flags","start","f","g","x","matchRecursiveRegExp","matchPos","results","replaceRecursiveRegExp","replacement","repStr","finalStr","lng","bits","regexIndexOf","fromIndex","substring","search","splitAtIndex","encodeEmailAddress","mail","encode","ch","Math","floor","random","padEnd","targetLength","padString","repeat","msg","alert","log","regexes","asteriskDashAndColon","emojis","+1","-1","100","1234","1st_place_medal","2nd_place_medal","3rd_place_medal","8ball","ab","abc","abcd","accept","aerial_tramway","airplane","alarm_clock","alembic","alien","ambulance","amphora","anchor","angel","anger","angry","anguished","ant","apple","aquarius","aries","arrow_backward","arrow_double_down","arrow_double_up","arrow_down","arrow_down_small","arrow_forward","arrow_heading_down","arrow_heading_up","arrow_left","arrow_lower_left","arrow_lower_right","arrow_right","arrow_right_hook","arrow_up","arrow_up_down","arrow_up_small","arrow_upper_left","arrow_upper_right","arrows_clockwise","arrows_counterclockwise","art","articulated_lorry","artificial_satellite","astonished","athletic_shoe","atm","atom_symbol","avocado","baby","baby_bottle","baby_chick","baby_symbol","back","bacon","badminton","baggage_claim","baguette_bread","balance_scale","balloon","ballot_box","ballot_box_with_check","bamboo","banana","bangbang","bank","bar_chart","barber","baseball","basketball","basketball_man","basketball_woman","bat","bath","bathtub","battery","beach_umbrella","bear","bed","bee","beer","beers","beetle","beginner","bell","bellhop_bell","bento","biking_man","bike","biking_woman","bikini","biohazard","bird","birthday","black_circle","black_flag","black_heart","black_joker","black_large_square","black_medium_small_square","black_medium_square","black_nib","black_small_square","black_square_button","blonde_man","blonde_woman","blossom","blowfish","blue_book","blue_car","blue_heart","blush","boar","boat","bomb","book","bookmark","bookmark_tabs","books","boom","boot","bouquet","bowing_man","bow_and_arrow","bowing_woman","bowling","boxing_glove","boy","bread","bride_with_veil","bridge_at_night","briefcase","broken_heart","bug","building_construction","bulb","bullettrain_front","bullettrain_side","burrito","bus","business_suit_levitating","busstop","bust_in_silhouette","busts_in_silhouette","butterfly","cactus","cake","calendar","call_me_hand","calling","camel","camera","camera_flash","camping","cancer","candle","candy","canoe","capital_abcd","capricorn","car","card_file_box","card_index","card_index_dividers","carousel_horse","carrot","cat","cat2","cd","champagne","chart","chart_with_downwards_trend","chart_with_upwards_trend","checkered_flag","cheese","cherries","cherry_blossom","chestnut","chicken","children_crossing","chipmunk","chocolate_bar","christmas_tree","church","cinema","circus_tent","city_sunrise","city_sunset","cityscape","cl","clamp","clap","clapper","classical_building","clinking_glasses","clipboard","clock1","clock10","clock1030","clock11","clock1130","clock12","clock1230","clock130","clock2","clock230","clock3","clock330","clock4","clock430","clock5","clock530","clock6","clock630","clock7","clock730","clock8","clock830","clock9","clock930","closed_book","closed_lock_with_key","closed_umbrella","cloud","cloud_with_lightning","cloud_with_lightning_and_rain","cloud_with_rain","cloud_with_snow","clown_face","clubs","cocktail","coffee","coffin","cold_sweat","comet","computer","computer_mouse","confetti_ball","confounded","confused","congratulations","construction","construction_worker_man","construction_worker_woman","control_knobs","convenience_store","cookie","cool","policeman","copyright","corn","couch_and_lamp","couple","couple_with_heart_woman_man","couple_with_heart_man_man","couple_with_heart_woman_woman","couplekiss_man_man","couplekiss_man_woman","couplekiss_woman_woman","cow","cow2","cowboy_hat_face","crab","crayon","credit_card","crescent_moon","cricket","crocodile","croissant","crossed_fingers","crossed_flags","crossed_swords","crown","cry","crying_cat_face","crystal_ball","cucumber","cupid","curly_loop","currency_exchange","curry","custard","customs","cyclone","dagger","dancer","dancing_women","dancing_men","dango","dark_sunglasses","dart","dash","date","deciduous_tree","deer","department_store","derelict_house","desert","desert_island","desktop_computer","male_detective","diamond_shape_with_a_dot_inside","diamonds","disappointed","disappointed_relieved","dizzy","dizzy_face","do_not_litter","dog","dog2","dollar","dolls","dolphin","door","doughnut","dove","dragon","dragon_face","dress","dromedary_camel","drooling_face","droplet","drum","duck","dvd","e-mail","eagle","ear","ear_of_rice","earth_africa","earth_americas","earth_asia","egg","eggplant","eight_pointed_black_star","eight_spoked_asterisk","electric_plug","elephant","email","envelope_with_arrow","euro","european_castle","european_post_office","evergreen_tree","exclamation","expressionless","eye","eye_speech_bubble","eyeglasses","eyes","face_with_head_bandage","face_with_thermometer","fist_oncoming","factory","fallen_leaf","family_man_woman_boy","family_man_boy","family_man_boy_boy","family_man_girl","family_man_girl_boy","family_man_girl_girl","family_man_man_boy","family_man_man_boy_boy","family_man_man_girl","family_man_man_girl_boy","family_man_man_girl_girl","family_man_woman_boy_boy","family_man_woman_girl","family_man_woman_girl_boy","family_man_woman_girl_girl","family_woman_boy","family_woman_boy_boy","family_woman_girl","family_woman_girl_boy","family_woman_girl_girl","family_woman_woman_boy","family_woman_woman_boy_boy","family_woman_woman_girl","family_woman_woman_girl_boy","family_woman_woman_girl_girl","fast_forward","fax","fearful","feet","female_detective","ferris_wheel","ferry","field_hockey","file_cabinet","file_folder","film_projector","film_strip","fire","fire_engine","fireworks","first_quarter_moon","first_quarter_moon_with_face","fish","fish_cake","fishing_pole_and_fish","fist_raised","fist_left","fist_right","flashlight","fleur_de_lis","flight_arrival","flight_departure","floppy_disk","flower_playing_cards","flushed","fog","foggy","football","footprints","fork_and_knife","fountain","fountain_pen","four_leaf_clover","fox_face","framed_picture","free","fried_egg","fried_shrimp","fries","frog","frowning","frowning_face","frowning_man","frowning_woman","middle_finger","fuelpump","full_moon","full_moon_with_face","funeral_urn","game_die","gear","gem","gemini","gift","gift_heart","girl","globe_with_meridians","goal_net","goat","golf","golfing_man","golfing_woman","gorilla","grapes","green_apple","green_book","green_heart","green_salad","grey_exclamation","grey_question","grimacing","grin","grinning","guardsman","guardswoman","guitar","gun","haircut_woman","haircut_man","hamburger","hammer","hammer_and_pick","hammer_and_wrench","hamster","hand","handbag","handshake","hankey","hatched_chick","hatching_chick","headphones","hear_no_evil","heart","heart_decoration","heart_eyes","heart_eyes_cat","heartbeat","heartpulse","hearts","heavy_check_mark","heavy_division_sign","heavy_dollar_sign","heavy_heart_exclamation","heavy_minus_sign","heavy_multiplication_x","heavy_plus_sign","helicopter","herb","hibiscus","high_brightness","high_heel","hocho","hole","honey_pot","horse","horse_racing","hospital","hot_pepper","hotdog","hotel","hotsprings","hourglass","hourglass_flowing_sand","house","house_with_garden","houses","hugs","hushed","ice_cream","ice_hockey","ice_skate","icecream","id","ideograph_advantage","imp","inbox_tray","incoming_envelope","tipping_hand_woman","information_source","innocent","interrobang","iphone","izakaya_lantern","jack_o_lantern","japan","japanese_castle","japanese_goblin","japanese_ogre","jeans","joy","joy_cat","joystick","kaaba","keyboard","keycap_ten","kick_scooter","kimono","kiss","kissing","kissing_cat","kissing_closed_eyes","kissing_heart","kissing_smiling_eyes","kiwi_fruit","koala","koko","label","large_blue_circle","large_blue_diamond","large_orange_diamond","last_quarter_moon","last_quarter_moon_with_face","latin_cross","laughing","leaves","ledger","left_luggage","left_right_arrow","leftwards_arrow_with_hook","lemon","leo","leopard","level_slider","libra","light_rail","link","lion","lips","lipstick","lizard","lock","lock_with_ink_pen","lollipop","loop","loud_sound","loudspeaker","love_hotel","love_letter","low_brightness","lying_face","mag","mag_right","mahjong","mailbox","mailbox_closed","mailbox_with_mail","mailbox_with_no_mail","man","man_artist","man_astronaut","man_cartwheeling","man_cook","man_dancing","man_facepalming","man_factory_worker","man_farmer","man_firefighter","man_health_worker","man_in_tuxedo","man_judge","man_juggling","man_mechanic","man_office_worker","man_pilot","man_playing_handball","man_playing_water_polo","man_scientist","man_shrugging","man_singer","man_student","man_teacher","man_technologist","man_with_gua_pi_mao","man_with_turban","tangerine","mans_shoe","mantelpiece_clock","maple_leaf","martial_arts_uniform","massage_woman","massage_man","meat_on_bone","medal_military","medal_sports","mega","melon","memo","men_wrestling","menorah","mens","metal","metro","microphone","microscope","milk_glass","milky_way","minibus","minidisc","mobile_phone_off","money_mouth_face","money_with_wings","moneybag","monkey","monkey_face","monorail","moon","mortar_board","mosque","motor_boat","motor_scooter","motorcycle","motorway","mount_fuji","mountain","mountain_biking_man","mountain_biking_woman","mountain_cableway","mountain_railway","mountain_snow","mouse","mouse2","movie_camera","moyai","mrs_claus","muscle","mushroom","musical_keyboard","musical_note","musical_score","mute","nail_care","name_badge","national_park","nauseated_face","necktie","negative_squared_cross_mark","nerd_face","neutral_face","new","new_moon","new_moon_with_face","newspaper","newspaper_roll","next_track_button","ng","no_good_man","no_good_woman","night_with_stars","no_bell","no_bicycles","no_entry","no_entry_sign","no_mobile_phones","no_mouth","no_pedestrians","no_smoking","non-potable_water","nose","notebook","notebook_with_decorative_cover","notes","nut_and_bolt","o2","ocean","octopus","oden","office","oil_drum","ok","ok_hand","ok_man","ok_woman","old_key","older_man","older_woman","om","on","oncoming_automobile","oncoming_bus","oncoming_police_car","oncoming_taxi","open_file_folder","open_hands","open_mouth","open_umbrella","ophiuchus","orange_book","orthodox_cross","outbox_tray","owl","ox","package","page_facing_up","page_with_curl","pager","paintbrush","palm_tree","pancakes","panda_face","paperclip","paperclips","parasol_on_ground","parking","part_alternation_mark","partly_sunny","passenger_ship","passport_control","pause_button","peace_symbol","peach","peanuts","pear","pen","pencil2","penguin","pensive","performing_arts","persevere","person_fencing","pouting_woman","phone","pick","pig","pig2","pig_nose","pill","pineapple","ping_pong","pisces","pizza","place_of_worship","plate_with_cutlery","play_or_pause_button","point_down","point_left","point_right","point_up","point_up_2","police_car","policewoman","poodle","popcorn","post_office","postal_horn","postbox","potable_water","potato","pouch","poultry_leg","pound","rage","pouting_cat","pouting_man","pray","prayer_beads","pregnant_woman","previous_track_button","prince","princess","printer","purple_heart","purse","pushpin","put_litter_in_its_place","question","rabbit","rabbit2","racehorse","racing_car","radio","radio_button","radioactive","railway_car","railway_track","rainbow","rainbow_flag","raised_back_of_hand","raised_hand_with_fingers_splayed","raised_hands","raising_hand_woman","raising_hand_man","ram","ramen","rat","record_button","recycle","red_circle","registered","relaxed","relieved","reminder_ribbon","repeat_one","rescue_worker_helmet","restroom","revolving_hearts","rewind","rhinoceros","ribbon","rice","rice_ball","rice_cracker","rice_scene","right_anger_bubble","ring","robot","rocket","rofl","roll_eyes","roller_coaster","rooster","rose","rosette","rotating_light","round_pushpin","rowing_man","rowing_woman","rugby_football","running_man","running_shirt_with_sash","running_woman","sa","sagittarius","sake","sandal","santa","satellite","saxophone","school","school_satchel","scissors","scorpion","scorpius","scream","scream_cat","scroll","seat","secret","see_no_evil","seedling","selfie","shallow_pan_of_food","shamrock","shark","shaved_ice","sheep","shell","shield","shinto_shrine","ship","shirt","shopping","shopping_cart","shower","shrimp","signal_strength","six_pointed_star","ski","skier","skull","skull_and_crossbones","sleeping","sleeping_bed","sleepy","slightly_frowning_face","slightly_smiling_face","slot_machine","small_airplane","small_blue_diamond","small_orange_diamond","small_red_triangle","small_red_triangle_down","smile","smile_cat","smiley","smiley_cat","smiling_imp","smirk","smirk_cat","smoking","snail","snake","sneezing_face","snowboarder","snowflake","snowman","snowman_with_snow","sob","soccer","soon","sos","sound","space_invader","spades","spaghetti","sparkle","sparkler","sparkles","sparkling_heart","speak_no_evil","speaker","speaking_head","speech_balloon","speedboat","spider","spider_web","spiral_calendar","spiral_notepad","spoon","squid","stadium","star","star2","star_and_crescent","star_of_david","stars","station","statue_of_liberty","steam_locomotive","stew","stop_button","stop_sign","stopwatch","straight_ruler","strawberry","stuck_out_tongue","stuck_out_tongue_closed_eyes","stuck_out_tongue_winking_eye","studio_microphone","stuffed_flatbread","sun_behind_large_cloud","sun_behind_rain_cloud","sun_behind_small_cloud","sun_with_face","sunflower","sunglasses","sunny","sunrise","sunrise_over_mountains","surfing_man","surfing_woman","sushi","suspension_railway","sweat","sweat_drops","sweat_smile","sweet_potato","swimming_man","swimming_woman","symbols","synagogue","syringe","taco","tada","tanabata_tree","taurus","taxi","tea","telephone_receiver","telescope","tennis","tent","thermometer","thinking","thought_balloon","ticket","tickets","tiger","tiger2","timer_clock","tipping_hand_man","tired_face","tm","toilet","tokyo_tower","tomato","tongue","tophat","tornado","trackball","tractor","traffic_light","train","train2","tram","triangular_flag_on_post","triangular_ruler","trident","triumph","trolleybus","trophy","tropical_drink","tropical_fish","truck","trumpet","tulip","tumbler_glass","turkey","turtle","tv","twisted_rightwards_arrows","two_hearts","two_men_holding_hands","two_women_holding_hands","u5272","u5408","u55b6","u6307","u6708","u6709","u6e80","u7121","u7533","u7981","u7a7a","umbrella","unamused","underage","unicorn","unlock","up","upside_down_face","v","vertical_traffic_light","vhs","vibration_mode","video_camera","video_game","violin","virgo","volcano","volleyball","vs","vulcan_salute","walking_man","walking_woman","waning_crescent_moon","waning_gibbous_moon","warning","wastebasket","watch","water_buffalo","watermelon","wave","wavy_dash","waxing_crescent_moon","wc","weary","wedding","weight_lifting_man","weight_lifting_woman","whale","whale2","wheel_of_dharma","wheelchair","white_check_mark","white_circle","white_flag","white_flower","white_large_square","white_medium_small_square","white_medium_square","white_small_square","white_square_button","wilted_flower","wind_chime","wind_face","wine_glass","wink","wolf","woman","woman_artist","woman_astronaut","woman_cartwheeling","woman_cook","woman_facepalming","woman_factory_worker","woman_farmer","woman_firefighter","woman_health_worker","woman_judge","woman_juggling","woman_mechanic","woman_office_worker","woman_pilot","woman_playing_handball","woman_playing_water_polo","woman_scientist","woman_shrugging","woman_singer","woman_student","woman_teacher","woman_technologist","woman_with_turban","womans_clothes","womans_hat","women_wrestling","womens","world_map","worried","wrench","writing_hand","yellow_heart","yen","yin_yang","yum","zap","zipper_mouth_face","zzz","octocat","Converter","converterOptions","langExtensions","outputModifiers","setConvFlavor","parsed","raw","format","_parseExtension","legacyExtensionLoading","validExt","listen","gOpt","_constructor","_dispatch","evtName","globals","ei","nText","makeHtml","gHtmlBlocks","gHtmlMdBlocks","gHtmlSpans","gUrls","gTitles","gDimensions","gListLevel","hashLinkCounts","converter","rsp","rgx","rTrimInputText","makeMarkdown","makeMd","src","HTMLParser","document","doc","createElement","innerHTML","preList","pres","querySelectorAll","presPH","childElementCount","firstChild","language","getAttribute","classes","className","matches","outerHTML","setAttribute","substitutePreCodeTags","clean","node","childNodes","child","nodeType","nodeValue","removeChild","nodes","mdDoc","addExtension","useExtension","extensionName","splice","output","getMetadata","getMetadataFormat","_setMetadataPair","_setMetadataFormat","_setMetadataRaw","writeAnchorTag","linkText","linkId","url","m5","m6","title","result","wm","st","escape","mentions","username","lnk","target","simpleURLRegex","simpleURLRegex2","delimUrlRegex","simpleMailRegex","delimMailRegex","replaceLink","leadingMagicChars","m2","m3","trailingPunctuation","trailingMagicChars","lnkTxt","append","lmc","tmc","replaceMail","href","bq","codeblock","nextChar","doctype","doctypeParsed","charset","lang","meta","leadingText","numSpaces","emojiCode","delim","blockText","blockTags","repFunc","inside","opTagPos","rgx1","patLeft","patRight","subTexts","newSubText1","concat","hashHTMLSpan","repText","limit","num","$1","isNaN","setextRegexH1","setextRegexH2","spanGamut","hID","headerId","hashBlock","matchFound","hLevel","atxStyle","prefix","customizedHeaderId","hText","writeImageTag","altText","gDims","parseInside","lead","processListItems","listStr","trimTrailing","isParagraphed","m4","taskbtn","checked","bulletStyle","otp","wm2","styleStartNumber","list","listType","res","parseConsecutiveLists","olRgx","ulRgx","counterRxg","parseCL","style","parseMetadataContents","wholematch","grafs","grafsOut","grafsOutIt","codeFlag","$2","re","replaceFunc","blankLines","parseCells","cell","parseTable","rawTable","tableLines","sLine","rawHeaders","map","rawStyles","rawCells","headers","styles","cells","shift","tableHeaderId","row","ii","tb","tblLgn","buildTable","charCodeToReplace","hasChildNodes","children","childrenLength","innerTxt","headerLevel","headerMark","hasAttribute","listItems","listItemsLenght","listNum","listItemTxt","childrenLenght","spansOnly","data","tableArray","headings","rows","headContent","allign","cols","getElementsByTagName","cellContent","cellSpacesCount","strLen","undefined","parser","FilterXSS","filterXSS","self","DedicatedWorkerGlobalScope","__webpack_exports__","showdown__WEBPACK_IMPORTED_MODULE_0__","showdown__WEBPACK_IMPORTED_MODULE_0___default","xss__WEBPACK_IMPORTED_MODULE_1__","xss__WEBPACK_IMPORTED_MODULE_1___default","markdownCN","markdownEN","app","getElementById","languageSelectEl","languageSelectChangeHandler","event","onchange","parseStyle","isNull","shallowCopyObject","css","sourcePosition","source","check","isWhite","opts","cssLength","isParenthesisOpen","retCSS","addNewAttr","stripIgnoreTag","allowCommentTag","stripIgnoreTagBody","retHtml","info","attrs","closing","getAttrs","whiteAttrList","attrsHtml","isWhiteAttr"],"mappings":"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","file":"index.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","/**\n * cssfilter\n *\n * @author 老雷<leizongmin@gmail.com>\n */\n\nvar DEFAULT = require('./default');\nvar FilterCSS = require('./css');\n\n\n/**\n * XSS过滤\n *\n * @param {String} css 要过滤的CSS代码\n * @param {Object} options 选项：whiteList, onAttr, onIgnoreAttr\n * @return {String}\n */\nfunction filterCSS (html, options) {\n  var xss = new FilterCSS(options);\n  return xss.process(html);\n}\n\n\n// 输出\nexports = module.exports = filterCSS;\nexports.FilterCSS = FilterCSS;\nfor (var i in DEFAULT) exports[i] = DEFAULT[i];\n\n// 在浏览器端使用\nif (typeof window !== 'undefined') {\n  window.filterCSS = module.exports;\n}\n","module.exports = {\n  indexOf: function(arr, item) {\n    var i, j;\n    if (Array.prototype.indexOf) {\n      return arr.indexOf(item);\n    }\n    for (i = 0, j = arr.length; i < j; i++) {\n      if (arr[i] === item) {\n        return i;\n      }\n    }\n    return -1;\n  },\n  forEach: function(arr, fn, scope) {\n    var i, j;\n    if (Array.prototype.forEach) {\n      return arr.forEach(fn, scope);\n    }\n    for (i = 0, j = arr.length; i < j; i++) {\n      fn.call(scope, arr[i], i, arr);\n    }\n  },\n  trim: function(str) {\n    if (String.prototype.trim) {\n      return str.trim();\n    }\n    return str.replace(/(^\\s*)|(\\s*$)/g, \"\");\n  },\n  spaceIndex: function(str) {\n    var reg = /\\s|\\n|\\t/;\n    var match = reg.exec(str);\n    return match ? match.index : -1;\n  }\n};\n","/**\n * default settings\n *\n * @author Zongmin Lei<leizongmin@gmail.com>\n */\n\nvar FilterCSS = require(\"cssfilter\").FilterCSS;\nvar getDefaultCSSWhiteList = require(\"cssfilter\").getDefaultWhiteList;\nvar _ = require(\"./util\");\n\nfunction getDefaultWhiteList() {\n  return {\n    a: [\"target\", \"href\", \"title\"],\n    abbr: [\"title\"],\n    address: [],\n    area: [\"shape\", \"coords\", \"href\", \"alt\"],\n    article: [],\n    aside: [],\n    audio: [\"autoplay\", \"controls\", \"loop\", \"preload\", \"src\"],\n    b: [],\n    bdi: [\"dir\"],\n    bdo: [\"dir\"],\n    big: [],\n    blockquote: [\"cite\"],\n    br: [],\n    caption: [],\n    center: [],\n    cite: [],\n    code: [],\n    col: [\"align\", \"valign\", \"span\", \"width\"],\n    colgroup: [\"align\", \"valign\", \"span\", \"width\"],\n    dd: [],\n    del: [\"datetime\"],\n    details: [\"open\"],\n    div: [],\n    dl: [],\n    dt: [],\n    em: [],\n    font: [\"color\", \"size\", \"face\"],\n    footer: [],\n    h1: [],\n    h2: [],\n    h3: [],\n    h4: [],\n    h5: [],\n    h6: [],\n    header: [],\n    hr: [],\n    i: [],\n    img: [\"src\", \"alt\", \"title\", \"width\", \"height\"],\n    ins: [\"datetime\"],\n    li: [],\n    mark: [],\n    nav: [],\n    ol: [],\n    p: [],\n    pre: [],\n    s: [],\n    section: [],\n    small: [],\n    span: [],\n    sub: [],\n    sup: [],\n    strong: [],\n    table: [\"width\", \"border\", \"align\", \"valign\"],\n    tbody: [\"align\", \"valign\"],\n    td: [\"width\", \"rowspan\", \"colspan\", \"align\", \"valign\"],\n    tfoot: [\"align\", \"valign\"],\n    th: [\"width\", \"rowspan\", \"colspan\", \"align\", \"valign\"],\n    thead: [\"align\", \"valign\"],\n    tr: [\"rowspan\", \"align\", \"valign\"],\n    tt: [],\n    u: [],\n    ul: [],\n    video: [\"autoplay\", \"controls\", \"loop\", \"preload\", \"src\", \"height\", \"width\"]\n  };\n}\n\nvar defaultCSSFilter = new FilterCSS();\n\n/**\n * default onTag function\n *\n * @param {String} tag\n * @param {String} html\n * @param {Object} options\n * @return {String}\n */\nfunction onTag(tag, html, options) {\n  // do nothing\n}\n\n/**\n * default onIgnoreTag function\n *\n * @param {String} tag\n * @param {String} html\n * @param {Object} options\n * @return {String}\n */\nfunction onIgnoreTag(tag, html, options) {\n  // do nothing\n}\n\n/**\n * default onTagAttr function\n *\n * @param {String} tag\n * @param {String} name\n * @param {String} value\n * @return {String}\n */\nfunction onTagAttr(tag, name, value) {\n  // do nothing\n}\n\n/**\n * default onIgnoreTagAttr function\n *\n * @param {String} tag\n * @param {String} name\n * @param {String} value\n * @return {String}\n */\nfunction onIgnoreTagAttr(tag, name, value) {\n  // do nothing\n}\n\n/**\n * default escapeHtml function\n *\n * @param {String} html\n */\nfunction escapeHtml(html) {\n  return html.replace(REGEXP_LT, \"&lt;\").replace(REGEXP_GT, \"&gt;\");\n}\n\n/**\n * default safeAttrValue function\n *\n * @param {String} tag\n * @param {String} name\n * @param {String} value\n * @param {Object} cssFilter\n * @return {String}\n */\nfunction safeAttrValue(tag, name, value, cssFilter) {\n  // unescape attribute value firstly\n  value = friendlyAttrValue(value);\n\n  if (name === \"href\" || name === \"src\") {\n    // filter `href` and `src` attribute\n    // only allow the value that starts with `http://` | `https://` | `mailto:` | `/` | `#`\n    value = _.trim(value);\n    if (value === \"#\") return \"#\";\n    if (\n      !(\n        value.substr(0, 7) === \"http://\" ||\n        value.substr(0, 8) === \"https://\" ||\n        value.substr(0, 7) === \"mailto:\" ||\n        value.substr(0, 4) === \"tel:\" ||\n        value[0] === \"#\" ||\n        value[0] === \"/\"\n      )\n    ) {\n      return \"\";\n    }\n  } else if (name === \"background\") {\n    // filter `background` attribute (maybe no use)\n    // `javascript:`\n    REGEXP_DEFAULT_ON_TAG_ATTR_4.lastIndex = 0;\n    if (REGEXP_DEFAULT_ON_TAG_ATTR_4.test(value)) {\n      return \"\";\n    }\n  } else if (name === \"style\") {\n    // `expression()`\n    REGEXP_DEFAULT_ON_TAG_ATTR_7.lastIndex = 0;\n    if (REGEXP_DEFAULT_ON_TAG_ATTR_7.test(value)) {\n      return \"\";\n    }\n    // `url()`\n    REGEXP_DEFAULT_ON_TAG_ATTR_8.lastIndex = 0;\n    if (REGEXP_DEFAULT_ON_TAG_ATTR_8.test(value)) {\n      REGEXP_DEFAULT_ON_TAG_ATTR_4.lastIndex = 0;\n      if (REGEXP_DEFAULT_ON_TAG_ATTR_4.test(value)) {\n        return \"\";\n      }\n    }\n    if (cssFilter !== false) {\n      cssFilter = cssFilter || defaultCSSFilter;\n      value = cssFilter.process(value);\n    }\n  }\n\n  // escape `<>\"` before returns\n  value = escapeAttrValue(value);\n  return value;\n}\n\n// RegExp list\nvar REGEXP_LT = /</g;\nvar REGEXP_GT = />/g;\nvar REGEXP_QUOTE = /\"/g;\nvar REGEXP_QUOTE_2 = /&quot;/g;\nvar REGEXP_ATTR_VALUE_1 = /&#([a-zA-Z0-9]*);?/gim;\nvar REGEXP_ATTR_VALUE_COLON = /&colon;?/gim;\nvar REGEXP_ATTR_VALUE_NEWLINE = /&newline;?/gim;\nvar REGEXP_DEFAULT_ON_TAG_ATTR_3 = /\\/\\*|\\*\\//gm;\nvar REGEXP_DEFAULT_ON_TAG_ATTR_4 = /((j\\s*a\\s*v\\s*a|v\\s*b|l\\s*i\\s*v\\s*e)\\s*s\\s*c\\s*r\\s*i\\s*p\\s*t\\s*|m\\s*o\\s*c\\s*h\\s*a)\\:/gi;\nvar REGEXP_DEFAULT_ON_TAG_ATTR_5 = /^[\\s\"'`]*(d\\s*a\\s*t\\s*a\\s*)\\:/gi;\nvar REGEXP_DEFAULT_ON_TAG_ATTR_6 = /^[\\s\"'`]*(d\\s*a\\s*t\\s*a\\s*)\\:\\s*image\\//gi;\nvar REGEXP_DEFAULT_ON_TAG_ATTR_7 = /e\\s*x\\s*p\\s*r\\s*e\\s*s\\s*s\\s*i\\s*o\\s*n\\s*\\(.*/gi;\nvar REGEXP_DEFAULT_ON_TAG_ATTR_8 = /u\\s*r\\s*l\\s*\\(.*/gi;\n\n/**\n * escape doube quote\n *\n * @param {String} str\n * @return {String} str\n */\nfunction escapeQuote(str) {\n  return str.replace(REGEXP_QUOTE, \"&quot;\");\n}\n\n/**\n * unescape double quote\n *\n * @param {String} str\n * @return {String} str\n */\nfunction unescapeQuote(str) {\n  return str.replace(REGEXP_QUOTE_2, '\"');\n}\n\n/**\n * escape html entities\n *\n * @param {String} str\n * @return {String}\n */\nfunction escapeHtmlEntities(str) {\n  return str.replace(REGEXP_ATTR_VALUE_1, function replaceUnicode(str, code) {\n    return code[0] === \"x\" || code[0] === \"X\"\n      ? String.fromCharCode(parseInt(code.substr(1), 16))\n      : String.fromCharCode(parseInt(code, 10));\n  });\n}\n\n/**\n * escape html5 new danger entities\n *\n * @param {String} str\n * @return {String}\n */\nfunction escapeDangerHtml5Entities(str) {\n  return str\n    .replace(REGEXP_ATTR_VALUE_COLON, \":\")\n    .replace(REGEXP_ATTR_VALUE_NEWLINE, \" \");\n}\n\n/**\n * clear nonprintable characters\n *\n * @param {String} str\n * @return {String}\n */\nfunction clearNonPrintableCharacter(str) {\n  var str2 = \"\";\n  for (var i = 0, len = str.length; i < len; i++) {\n    str2 += str.charCodeAt(i) < 32 ? \" \" : str.charAt(i);\n  }\n  return _.trim(str2);\n}\n\n/**\n * get friendly attribute value\n *\n * @param {String} str\n * @return {String}\n */\nfunction friendlyAttrValue(str) {\n  str = unescapeQuote(str);\n  str = escapeHtmlEntities(str);\n  str = escapeDangerHtml5Entities(str);\n  str = clearNonPrintableCharacter(str);\n  return str;\n}\n\n/**\n * unescape attribute value\n *\n * @param {String} str\n * @return {String}\n */\nfunction escapeAttrValue(str) {\n  str = escapeQuote(str);\n  str = escapeHtml(str);\n  return str;\n}\n\n/**\n * `onIgnoreTag` function for removing all the tags that are not in whitelist\n */\nfunction onIgnoreTagStripAll() {\n  return \"\";\n}\n\n/**\n * remove tag body\n * specify a `tags` list, if the tag is not in the `tags` list then process by the specify function (optional)\n *\n * @param {array} tags\n * @param {function} next\n */\nfunction StripTagBody(tags, next) {\n  if (typeof next !== \"function\") {\n    next = function() {};\n  }\n\n  var isRemoveAllTag = !Array.isArray(tags);\n  function isRemoveTag(tag) {\n    if (isRemoveAllTag) return true;\n    return _.indexOf(tags, tag) !== -1;\n  }\n\n  var removeList = [];\n  var posStart = false;\n\n  return {\n    onIgnoreTag: function(tag, html, options) {\n      if (isRemoveTag(tag)) {\n        if (options.isClosing) {\n          var ret = \"[/removed]\";\n          var end = options.position + ret.length;\n          removeList.push([\n            posStart !== false ? posStart : options.position,\n            end\n          ]);\n          posStart = false;\n          return ret;\n        } else {\n          if (!posStart) {\n            posStart = options.position;\n          }\n          return \"[removed]\";\n        }\n      } else {\n        return next(tag, html, options);\n      }\n    },\n    remove: function(html) {\n      var rethtml = \"\";\n      var lastPos = 0;\n      _.forEach(removeList, function(pos) {\n        rethtml += html.slice(lastPos, pos[0]);\n        lastPos = pos[1];\n      });\n      rethtml += html.slice(lastPos);\n      return rethtml;\n    }\n  };\n}\n\n/**\n * remove html comments\n *\n * @param {String} html\n * @return {String}\n */\nfunction stripCommentTag(html) {\n  return html.replace(STRIP_COMMENT_TAG_REGEXP, \"\");\n}\nvar STRIP_COMMENT_TAG_REGEXP = /<!--[\\s\\S]*?-->/g;\n\n/**\n * remove invisible characters\n *\n * @param {String} html\n * @return {String}\n */\nfunction stripBlankChar(html) {\n  var chars = html.split(\"\");\n  chars = chars.filter(function(char) {\n    var c = char.charCodeAt(0);\n    if (c === 127) return false;\n    if (c <= 31) {\n      if (c === 10 || c === 13) return true;\n      return false;\n    }\n    return true;\n  });\n  return chars.join(\"\");\n}\n\nexports.whiteList = getDefaultWhiteList();\nexports.getDefaultWhiteList = getDefaultWhiteList;\nexports.onTag = onTag;\nexports.onIgnoreTag = onIgnoreTag;\nexports.onTagAttr = onTagAttr;\nexports.onIgnoreTagAttr = onIgnoreTagAttr;\nexports.safeAttrValue = safeAttrValue;\nexports.escapeHtml = escapeHtml;\nexports.escapeQuote = escapeQuote;\nexports.unescapeQuote = unescapeQuote;\nexports.escapeHtmlEntities = escapeHtmlEntities;\nexports.escapeDangerHtml5Entities = escapeDangerHtml5Entities;\nexports.clearNonPrintableCharacter = clearNonPrintableCharacter;\nexports.friendlyAttrValue = friendlyAttrValue;\nexports.escapeAttrValue = escapeAttrValue;\nexports.onIgnoreTagStripAll = onIgnoreTagStripAll;\nexports.StripTagBody = StripTagBody;\nexports.stripCommentTag = stripCommentTag;\nexports.stripBlankChar = stripBlankChar;\nexports.cssFilter = defaultCSSFilter;\nexports.getDefaultCSSWhiteList = getDefaultCSSWhiteList;\n","/**\n * cssfilter\n *\n * @author 老雷<leizongmin@gmail.com>\n */\n\nfunction getDefaultWhiteList () {\n  // 白名单值说明：\n  // true: 允许该属性\n  // Function: function (val) { } 返回true表示允许该属性，其他值均表示不允许\n  // RegExp: regexp.test(val) 返回true表示允许该属性，其他值均表示不允许\n  // 除上面列出的值外均表示不允许\n  var whiteList = {};\n\n  whiteList['align-content'] = false; // default: auto\n  whiteList['align-items'] = false; // default: auto\n  whiteList['align-self'] = false; // default: auto\n  whiteList['alignment-adjust'] = false; // default: auto\n  whiteList['alignment-baseline'] = false; // default: baseline\n  whiteList['all'] = false; // default: depending on individual properties\n  whiteList['anchor-point'] = false; // default: none\n  whiteList['animation'] = false; // default: depending on individual properties\n  whiteList['animation-delay'] = false; // default: 0\n  whiteList['animation-direction'] = false; // default: normal\n  whiteList['animation-duration'] = false; // default: 0\n  whiteList['animation-fill-mode'] = false; // default: none\n  whiteList['animation-iteration-count'] = false; // default: 1\n  whiteList['animation-name'] = false; // default: none\n  whiteList['animation-play-state'] = false; // default: running\n  whiteList['animation-timing-function'] = false; // default: ease\n  whiteList['azimuth'] = false; // default: center\n  whiteList['backface-visibility'] = false; // default: visible\n  whiteList['background'] = true; // default: depending on individual properties\n  whiteList['background-attachment'] = true; // default: scroll\n  whiteList['background-clip'] = true; // default: border-box\n  whiteList['background-color'] = true; // default: transparent\n  whiteList['background-image'] = true; // default: none\n  whiteList['background-origin'] = true; // default: padding-box\n  whiteList['background-position'] = true; // default: 0% 0%\n  whiteList['background-repeat'] = true; // default: repeat\n  whiteList['background-size'] = true; // default: auto\n  whiteList['baseline-shift'] = false; // default: baseline\n  whiteList['binding'] = false; // default: none\n  whiteList['bleed'] = false; // default: 6pt\n  whiteList['bookmark-label'] = false; // default: content()\n  whiteList['bookmark-level'] = false; // default: none\n  whiteList['bookmark-state'] = false; // default: open\n  whiteList['border'] = true; // default: depending on individual properties\n  whiteList['border-bottom'] = true; // default: depending on individual properties\n  whiteList['border-bottom-color'] = true; // default: current color\n  whiteList['border-bottom-left-radius'] = true; // default: 0\n  whiteList['border-bottom-right-radius'] = true; // default: 0\n  whiteList['border-bottom-style'] = true; // default: none\n  whiteList['border-bottom-width'] = true; // default: medium\n  whiteList['border-collapse'] = true; // default: separate\n  whiteList['border-color'] = true; // default: depending on individual properties\n  whiteList['border-image'] = true; // default: none\n  whiteList['border-image-outset'] = true; // default: 0\n  whiteList['border-image-repeat'] = true; // default: stretch\n  whiteList['border-image-slice'] = true; // default: 100%\n  whiteList['border-image-source'] = true; // default: none\n  whiteList['border-image-width'] = true; // default: 1\n  whiteList['border-left'] = true; // default: depending on individual properties\n  whiteList['border-left-color'] = true; // default: current color\n  whiteList['border-left-style'] = true; // default: none\n  whiteList['border-left-width'] = true; // default: medium\n  whiteList['border-radius'] = true; // default: 0\n  whiteList['border-right'] = true; // default: depending on individual properties\n  whiteList['border-right-color'] = true; // default: current color\n  whiteList['border-right-style'] = true; // default: none\n  whiteList['border-right-width'] = true; // default: medium\n  whiteList['border-spacing'] = true; // default: 0\n  whiteList['border-style'] = true; // default: depending on individual properties\n  whiteList['border-top'] = true; // default: depending on individual properties\n  whiteList['border-top-color'] = true; // default: current color\n  whiteList['border-top-left-radius'] = true; // default: 0\n  whiteList['border-top-right-radius'] = true; // default: 0\n  whiteList['border-top-style'] = true; // default: none\n  whiteList['border-top-width'] = true; // default: medium\n  whiteList['border-width'] = true; // default: depending on individual properties\n  whiteList['bottom'] = false; // default: auto\n  whiteList['box-decoration-break'] = true; // default: slice\n  whiteList['box-shadow'] = true; // default: none\n  whiteList['box-sizing'] = true; // default: content-box\n  whiteList['box-snap'] = true; // default: none\n  whiteList['box-suppress'] = true; // default: show\n  whiteList['break-after'] = true; // default: auto\n  whiteList['break-before'] = true; // default: auto\n  whiteList['break-inside'] = true; // default: auto\n  whiteList['caption-side'] = false; // default: top\n  whiteList['chains'] = false; // default: none\n  whiteList['clear'] = true; // default: none\n  whiteList['clip'] = false; // default: auto\n  whiteList['clip-path'] = false; // default: none\n  whiteList['clip-rule'] = false; // default: nonzero\n  whiteList['color'] = true; // default: implementation dependent\n  whiteList['color-interpolation-filters'] = true; // default: auto\n  whiteList['column-count'] = false; // default: auto\n  whiteList['column-fill'] = false; // default: balance\n  whiteList['column-gap'] = false; // default: normal\n  whiteList['column-rule'] = false; // default: depending on individual properties\n  whiteList['column-rule-color'] = false; // default: current color\n  whiteList['column-rule-style'] = false; // default: medium\n  whiteList['column-rule-width'] = false; // default: medium\n  whiteList['column-span'] = false; // default: none\n  whiteList['column-width'] = false; // default: auto\n  whiteList['columns'] = false; // default: depending on individual properties\n  whiteList['contain'] = false; // default: none\n  whiteList['content'] = false; // default: normal\n  whiteList['counter-increment'] = false; // default: none\n  whiteList['counter-reset'] = false; // default: none\n  whiteList['counter-set'] = false; // default: none\n  whiteList['crop'] = false; // default: auto\n  whiteList['cue'] = false; // default: depending on individual properties\n  whiteList['cue-after'] = false; // default: none\n  whiteList['cue-before'] = false; // default: none\n  whiteList['cursor'] = false; // default: auto\n  whiteList['direction'] = false; // default: ltr\n  whiteList['display'] = true; // default: depending on individual properties\n  whiteList['display-inside'] = true; // default: auto\n  whiteList['display-list'] = true; // default: none\n  whiteList['display-outside'] = true; // default: inline-level\n  whiteList['dominant-baseline'] = false; // default: auto\n  whiteList['elevation'] = false; // default: level\n  whiteList['empty-cells'] = false; // default: show\n  whiteList['filter'] = false; // default: none\n  whiteList['flex'] = false; // default: depending on individual properties\n  whiteList['flex-basis'] = false; // default: auto\n  whiteList['flex-direction'] = false; // default: row\n  whiteList['flex-flow'] = false; // default: depending on individual properties\n  whiteList['flex-grow'] = false; // default: 0\n  whiteList['flex-shrink'] = false; // default: 1\n  whiteList['flex-wrap'] = false; // default: nowrap\n  whiteList['float'] = false; // default: none\n  whiteList['float-offset'] = false; // default: 0 0\n  whiteList['flood-color'] = false; // default: black\n  whiteList['flood-opacity'] = false; // default: 1\n  whiteList['flow-from'] = false; // default: none\n  whiteList['flow-into'] = false; // default: none\n  whiteList['font'] = true; // default: depending on individual properties\n  whiteList['font-family'] = true; // default: implementation dependent\n  whiteList['font-feature-settings'] = true; // default: normal\n  whiteList['font-kerning'] = true; // default: auto\n  whiteList['font-language-override'] = true; // default: normal\n  whiteList['font-size'] = true; // default: medium\n  whiteList['font-size-adjust'] = true; // default: none\n  whiteList['font-stretch'] = true; // default: normal\n  whiteList['font-style'] = true; // default: normal\n  whiteList['font-synthesis'] = true; // default: weight style\n  whiteList['font-variant'] = true; // default: normal\n  whiteList['font-variant-alternates'] = true; // default: normal\n  whiteList['font-variant-caps'] = true; // default: normal\n  whiteList['font-variant-east-asian'] = true; // default: normal\n  whiteList['font-variant-ligatures'] = true; // default: normal\n  whiteList['font-variant-numeric'] = true; // default: normal\n  whiteList['font-variant-position'] = true; // default: normal\n  whiteList['font-weight'] = true; // default: normal\n  whiteList['grid'] = false; // default: depending on individual properties\n  whiteList['grid-area'] = false; // default: depending on individual properties\n  whiteList['grid-auto-columns'] = false; // default: auto\n  whiteList['grid-auto-flow'] = false; // default: none\n  whiteList['grid-auto-rows'] = false; // default: auto\n  whiteList['grid-column'] = false; // default: depending on individual properties\n  whiteList['grid-column-end'] = false; // default: auto\n  whiteList['grid-column-start'] = false; // default: auto\n  whiteList['grid-row'] = false; // default: depending on individual properties\n  whiteList['grid-row-end'] = false; // default: auto\n  whiteList['grid-row-start'] = false; // default: auto\n  whiteList['grid-template'] = false; // default: depending on individual properties\n  whiteList['grid-template-areas'] = false; // default: none\n  whiteList['grid-template-columns'] = false; // default: none\n  whiteList['grid-template-rows'] = false; // default: none\n  whiteList['hanging-punctuation'] = false; // default: none\n  whiteList['height'] = true; // default: auto\n  whiteList['hyphens'] = false; // default: manual\n  whiteList['icon'] = false; // default: auto\n  whiteList['image-orientation'] = false; // default: auto\n  whiteList['image-resolution'] = false; // default: normal\n  whiteList['ime-mode'] = false; // default: auto\n  whiteList['initial-letters'] = false; // default: normal\n  whiteList['inline-box-align'] = false; // default: last\n  whiteList['justify-content'] = false; // default: auto\n  whiteList['justify-items'] = false; // default: auto\n  whiteList['justify-self'] = false; // default: auto\n  whiteList['left'] = false; // default: auto\n  whiteList['letter-spacing'] = true; // default: normal\n  whiteList['lighting-color'] = true; // default: white\n  whiteList['line-box-contain'] = false; // default: block inline replaced\n  whiteList['line-break'] = false; // default: auto\n  whiteList['line-grid'] = false; // default: match-parent\n  whiteList['line-height'] = false; // default: normal\n  whiteList['line-snap'] = false; // default: none\n  whiteList['line-stacking'] = false; // default: depending on individual properties\n  whiteList['line-stacking-ruby'] = false; // default: exclude-ruby\n  whiteList['line-stacking-shift'] = false; // default: consider-shifts\n  whiteList['line-stacking-strategy'] = false; // default: inline-line-height\n  whiteList['list-style'] = true; // default: depending on individual properties\n  whiteList['list-style-image'] = true; // default: none\n  whiteList['list-style-position'] = true; // default: outside\n  whiteList['list-style-type'] = true; // default: disc\n  whiteList['margin'] = true; // default: depending on individual properties\n  whiteList['margin-bottom'] = true; // default: 0\n  whiteList['margin-left'] = true; // default: 0\n  whiteList['margin-right'] = true; // default: 0\n  whiteList['margin-top'] = true; // default: 0\n  whiteList['marker-offset'] = false; // default: auto\n  whiteList['marker-side'] = false; // default: list-item\n  whiteList['marks'] = false; // default: none\n  whiteList['mask'] = false; // default: border-box\n  whiteList['mask-box'] = false; // default: see individual properties\n  whiteList['mask-box-outset'] = false; // default: 0\n  whiteList['mask-box-repeat'] = false; // default: stretch\n  whiteList['mask-box-slice'] = false; // default: 0 fill\n  whiteList['mask-box-source'] = false; // default: none\n  whiteList['mask-box-width'] = false; // default: auto\n  whiteList['mask-clip'] = false; // default: border-box\n  whiteList['mask-image'] = false; // default: none\n  whiteList['mask-origin'] = false; // default: border-box\n  whiteList['mask-position'] = false; // default: center\n  whiteList['mask-repeat'] = false; // default: no-repeat\n  whiteList['mask-size'] = false; // default: border-box\n  whiteList['mask-source-type'] = false; // default: auto\n  whiteList['mask-type'] = false; // default: luminance\n  whiteList['max-height'] = true; // default: none\n  whiteList['max-lines'] = false; // default: none\n  whiteList['max-width'] = true; // default: none\n  whiteList['min-height'] = true; // default: 0\n  whiteList['min-width'] = true; // default: 0\n  whiteList['move-to'] = false; // default: normal\n  whiteList['nav-down'] = false; // default: auto\n  whiteList['nav-index'] = false; // default: auto\n  whiteList['nav-left'] = false; // default: auto\n  whiteList['nav-right'] = false; // default: auto\n  whiteList['nav-up'] = false; // default: auto\n  whiteList['object-fit'] = false; // default: fill\n  whiteList['object-position'] = false; // default: 50% 50%\n  whiteList['opacity'] = false; // default: 1\n  whiteList['order'] = false; // default: 0\n  whiteList['orphans'] = false; // default: 2\n  whiteList['outline'] = false; // default: depending on individual properties\n  whiteList['outline-color'] = false; // default: invert\n  whiteList['outline-offset'] = false; // default: 0\n  whiteList['outline-style'] = false; // default: none\n  whiteList['outline-width'] = false; // default: medium\n  whiteList['overflow'] = false; // default: depending on individual properties\n  whiteList['overflow-wrap'] = false; // default: normal\n  whiteList['overflow-x'] = false; // default: visible\n  whiteList['overflow-y'] = false; // default: visible\n  whiteList['padding'] = true; // default: depending on individual properties\n  whiteList['padding-bottom'] = true; // default: 0\n  whiteList['padding-left'] = true; // default: 0\n  whiteList['padding-right'] = true; // default: 0\n  whiteList['padding-top'] = true; // default: 0\n  whiteList['page'] = false; // default: auto\n  whiteList['page-break-after'] = false; // default: auto\n  whiteList['page-break-before'] = false; // default: auto\n  whiteList['page-break-inside'] = false; // default: auto\n  whiteList['page-policy'] = false; // default: start\n  whiteList['pause'] = false; // default: implementation dependent\n  whiteList['pause-after'] = false; // default: implementation dependent\n  whiteList['pause-before'] = false; // default: implementation dependent\n  whiteList['perspective'] = false; // default: none\n  whiteList['perspective-origin'] = false; // default: 50% 50%\n  whiteList['pitch'] = false; // default: medium\n  whiteList['pitch-range'] = false; // default: 50\n  whiteList['play-during'] = false; // default: auto\n  whiteList['position'] = false; // default: static\n  whiteList['presentation-level'] = false; // default: 0\n  whiteList['quotes'] = false; // default: text\n  whiteList['region-fragment'] = false; // default: auto\n  whiteList['resize'] = false; // default: none\n  whiteList['rest'] = false; // default: depending on individual properties\n  whiteList['rest-after'] = false; // default: none\n  whiteList['rest-before'] = false; // default: none\n  whiteList['richness'] = false; // default: 50\n  whiteList['right'] = false; // default: auto\n  whiteList['rotation'] = false; // default: 0\n  whiteList['rotation-point'] = false; // default: 50% 50%\n  whiteList['ruby-align'] = false; // default: auto\n  whiteList['ruby-merge'] = false; // default: separate\n  whiteList['ruby-position'] = false; // default: before\n  whiteList['shape-image-threshold'] = false; // default: 0.0\n  whiteList['shape-outside'] = false; // default: none\n  whiteList['shape-margin'] = false; // default: 0\n  whiteList['size'] = false; // default: auto\n  whiteList['speak'] = false; // default: auto\n  whiteList['speak-as'] = false; // default: normal\n  whiteList['speak-header'] = false; // default: once\n  whiteList['speak-numeral'] = false; // default: continuous\n  whiteList['speak-punctuation'] = false; // default: none\n  whiteList['speech-rate'] = false; // default: medium\n  whiteList['stress'] = false; // default: 50\n  whiteList['string-set'] = false; // default: none\n  whiteList['tab-size'] = false; // default: 8\n  whiteList['table-layout'] = false; // default: auto\n  whiteList['text-align'] = true; // default: start\n  whiteList['text-align-last'] = true; // default: auto\n  whiteList['text-combine-upright'] = true; // default: none\n  whiteList['text-decoration'] = true; // default: none\n  whiteList['text-decoration-color'] = true; // default: currentColor\n  whiteList['text-decoration-line'] = true; // default: none\n  whiteList['text-decoration-skip'] = true; // default: objects\n  whiteList['text-decoration-style'] = true; // default: solid\n  whiteList['text-emphasis'] = true; // default: depending on individual properties\n  whiteList['text-emphasis-color'] = true; // default: currentColor\n  whiteList['text-emphasis-position'] = true; // default: over right\n  whiteList['text-emphasis-style'] = true; // default: none\n  whiteList['text-height'] = true; // default: auto\n  whiteList['text-indent'] = true; // default: 0\n  whiteList['text-justify'] = true; // default: auto\n  whiteList['text-orientation'] = true; // default: mixed\n  whiteList['text-overflow'] = true; // default: clip\n  whiteList['text-shadow'] = true; // default: none\n  whiteList['text-space-collapse'] = true; // default: collapse\n  whiteList['text-transform'] = true; // default: none\n  whiteList['text-underline-position'] = true; // default: auto\n  whiteList['text-wrap'] = true; // default: normal\n  whiteList['top'] = false; // default: auto\n  whiteList['transform'] = false; // default: none\n  whiteList['transform-origin'] = false; // default: 50% 50% 0\n  whiteList['transform-style'] = false; // default: flat\n  whiteList['transition'] = false; // default: depending on individual properties\n  whiteList['transition-delay'] = false; // default: 0s\n  whiteList['transition-duration'] = false; // default: 0s\n  whiteList['transition-property'] = false; // default: all\n  whiteList['transition-timing-function'] = false; // default: ease\n  whiteList['unicode-bidi'] = false; // default: normal\n  whiteList['vertical-align'] = false; // default: baseline\n  whiteList['visibility'] = false; // default: visible\n  whiteList['voice-balance'] = false; // default: center\n  whiteList['voice-duration'] = false; // default: auto\n  whiteList['voice-family'] = false; // default: implementation dependent\n  whiteList['voice-pitch'] = false; // default: medium\n  whiteList['voice-range'] = false; // default: medium\n  whiteList['voice-rate'] = false; // default: normal\n  whiteList['voice-stress'] = false; // default: normal\n  whiteList['voice-volume'] = false; // default: medium\n  whiteList['volume'] = false; // default: medium\n  whiteList['white-space'] = false; // default: normal\n  whiteList['widows'] = false; // default: 2\n  whiteList['width'] = true; // default: auto\n  whiteList['will-change'] = false; // default: auto\n  whiteList['word-break'] = true; // default: normal\n  whiteList['word-spacing'] = true; // default: normal\n  whiteList['word-wrap'] = true; // default: normal\n  whiteList['wrap-flow'] = false; // default: auto\n  whiteList['wrap-through'] = false; // default: wrap\n  whiteList['writing-mode'] = false; // default: horizontal-tb\n  whiteList['z-index'] = false; // default: auto\n\n  return whiteList;\n}\n\n\n/**\n * 匹配到白名单上的一个属性时\n *\n * @param {String} name\n * @param {String} value\n * @param {Object} options\n * @return {String}\n */\nfunction onAttr (name, value, options) {\n  // do nothing\n}\n\n/**\n * 匹配到不在白名单上的一个属性时\n *\n * @param {String} name\n * @param {String} value\n * @param {Object} options\n * @return {String}\n */\nfunction onIgnoreAttr (name, value, options) {\n  // do nothing\n}\n\nvar REGEXP_URL_JAVASCRIPT = /javascript\\s*\\:/img;\n\n/**\n * 过滤属性值\n *\n * @param {String} name\n * @param {String} value\n * @return {String}\n */\nfunction safeAttrValue(name, value) {\n  if (REGEXP_URL_JAVASCRIPT.test(value)) return '';\n  return value;\n}\n\n\nexports.whiteList = getDefaultWhiteList();\nexports.getDefaultWhiteList = getDefaultWhiteList;\nexports.onAttr = onAttr;\nexports.onIgnoreAttr = onIgnoreAttr;\nexports.safeAttrValue = safeAttrValue;\n","module.exports = {\n  indexOf: function (arr, item) {\n    var i, j;\n    if (Array.prototype.indexOf) {\n      return arr.indexOf(item);\n    }\n    for (i = 0, j = arr.length; i < j; i++) {\n      if (arr[i] === item) {\n        return i;\n      }\n    }\n    return -1;\n  },\n  forEach: function (arr, fn, scope) {\n    var i, j;\n    if (Array.prototype.forEach) {\n      return arr.forEach(fn, scope);\n    }\n    for (i = 0, j = arr.length; i < j; i++) {\n      fn.call(scope, arr[i], i, arr);\n    }\n  },\n  trim: function (str) {\n    if (String.prototype.trim) {\n      return str.trim();\n    }\n    return str.replace(/(^\\s*)|(\\s*$)/g, '');\n  },\n  trimRight: function (str) {\n    if (String.prototype.trimRight) {\n      return str.trimRight();\n    }\n    return str.replace(/(\\s*$)/g, '');\n  }\n};\n","/**\n * Simple HTML Parser\n *\n * @author Zongmin Lei<leizongmin@gmail.com>\n */\n\nvar _ = require(\"./util\");\n\n/**\n * get tag name\n *\n * @param {String} html e.g. '<a hef=\"#\">'\n * @return {String}\n */\nfunction getTagName(html) {\n  var i = _.spaceIndex(html);\n  if (i === -1) {\n    var tagName = html.slice(1, -1);\n  } else {\n    var tagName = html.slice(1, i + 1);\n  }\n  tagName = _.trim(tagName).toLowerCase();\n  if (tagName.slice(0, 1) === \"/\") tagName = tagName.slice(1);\n  if (tagName.slice(-1) === \"/\") tagName = tagName.slice(0, -1);\n  return tagName;\n}\n\n/**\n * is close tag?\n *\n * @param {String} html 如：'<a hef=\"#\">'\n * @return {Boolean}\n */\nfunction isClosing(html) {\n  return html.slice(0, 2) === \"</\";\n}\n\n/**\n * parse input html and returns processed html\n *\n * @param {String} html\n * @param {Function} onTag e.g. function (sourcePosition, position, tag, html, isClosing)\n * @param {Function} escapeHtml\n * @return {String}\n */\nfunction parseTag(html, onTag, escapeHtml) {\n  \"user strict\";\n\n  var rethtml = \"\";\n  var lastPos = 0;\n  var tagStart = false;\n  var quoteStart = false;\n  var currentPos = 0;\n  var len = html.length;\n  var currentTagName = \"\";\n  var currentHtml = \"\";\n\n  for (currentPos = 0; currentPos < len; currentPos++) {\n    var c = html.charAt(currentPos);\n    if (tagStart === false) {\n      if (c === \"<\") {\n        tagStart = currentPos;\n        continue;\n      }\n    } else {\n      if (quoteStart === false) {\n        if (c === \"<\") {\n          rethtml += escapeHtml(html.slice(lastPos, currentPos));\n          tagStart = currentPos;\n          lastPos = currentPos;\n          continue;\n        }\n        if (c === \">\") {\n          rethtml += escapeHtml(html.slice(lastPos, tagStart));\n          currentHtml = html.slice(tagStart, currentPos + 1);\n          currentTagName = getTagName(currentHtml);\n          rethtml += onTag(\n            tagStart,\n            rethtml.length,\n            currentTagName,\n            currentHtml,\n            isClosing(currentHtml)\n          );\n          lastPos = currentPos + 1;\n          tagStart = false;\n          continue;\n        }\n        if ((c === '\"' || c === \"'\") && html.charAt(currentPos - 1) === \"=\") {\n          quoteStart = c;\n          continue;\n        }\n      } else {\n        if (c === quoteStart) {\n          quoteStart = false;\n          continue;\n        }\n      }\n    }\n  }\n  if (lastPos < html.length) {\n    rethtml += escapeHtml(html.substr(lastPos));\n  }\n\n  return rethtml;\n}\n\nvar REGEXP_ILLEGAL_ATTR_NAME = /[^a-zA-Z0-9_:\\.\\-]/gim;\n\n/**\n * parse input attributes and returns processed attributes\n *\n * @param {String} html e.g. `href=\"#\" target=\"_blank\"`\n * @param {Function} onAttr e.g. `function (name, value)`\n * @return {String}\n */\nfunction parseAttr(html, onAttr) {\n  \"user strict\";\n\n  var lastPos = 0;\n  var retAttrs = [];\n  var tmpName = false;\n  var len = html.length;\n\n  function addAttr(name, value) {\n    name = _.trim(name);\n    name = name.replace(REGEXP_ILLEGAL_ATTR_NAME, \"\").toLowerCase();\n    if (name.length < 1) return;\n    var ret = onAttr(name, value || \"\");\n    if (ret) retAttrs.push(ret);\n  }\n\n  // 逐个分析字符\n  for (var i = 0; i < len; i++) {\n    var c = html.charAt(i);\n    var v, j;\n    if (tmpName === false && c === \"=\") {\n      tmpName = html.slice(lastPos, i);\n      lastPos = i + 1;\n      continue;\n    }\n    if (tmpName !== false) {\n      if (\n        i === lastPos &&\n        (c === '\"' || c === \"'\") &&\n        html.charAt(i - 1) === \"=\"\n      ) {\n        j = html.indexOf(c, i + 1);\n        if (j === -1) {\n          break;\n        } else {\n          v = _.trim(html.slice(lastPos + 1, j));\n          addAttr(tmpName, v);\n          tmpName = false;\n          i = j;\n          lastPos = i + 1;\n          continue;\n        }\n      }\n    }\n    if (/\\s|\\n|\\t/.test(c)) {\n      html = html.replace(/\\s|\\n|\\t/g, \" \");\n      if (tmpName === false) {\n        j = findNextEqual(html, i);\n        if (j === -1) {\n          v = _.trim(html.slice(lastPos, i));\n          addAttr(v);\n          tmpName = false;\n          lastPos = i + 1;\n          continue;\n        } else {\n          i = j - 1;\n          continue;\n        }\n      } else {\n        j = findBeforeEqual(html, i - 1);\n        if (j === -1) {\n          v = _.trim(html.slice(lastPos, i));\n          v = stripQuoteWrap(v);\n          addAttr(tmpName, v);\n          tmpName = false;\n          lastPos = i + 1;\n          continue;\n        } else {\n          continue;\n        }\n      }\n    }\n  }\n\n  if (lastPos < html.length) {\n    if (tmpName === false) {\n      addAttr(html.slice(lastPos));\n    } else {\n      addAttr(tmpName, stripQuoteWrap(_.trim(html.slice(lastPos))));\n    }\n  }\n\n  return _.trim(retAttrs.join(\" \"));\n}\n\nfunction findNextEqual(str, i) {\n  for (; i < str.length; i++) {\n    var c = str[i];\n    if (c === \" \") continue;\n    if (c === \"=\") return i;\n    return -1;\n  }\n}\n\nfunction findBeforeEqual(str, i) {\n  for (; i > 0; i--) {\n    var c = str[i];\n    if (c === \" \") continue;\n    if (c === \"=\") return i;\n    return -1;\n  }\n}\n\nfunction isQuoteWrapString(text) {\n  if (\n    (text[0] === '\"' && text[text.length - 1] === '\"') ||\n    (text[0] === \"'\" && text[text.length - 1] === \"'\")\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction stripQuoteWrap(text) {\n  if (isQuoteWrapString(text)) {\n    return text.substr(1, text.length - 2);\n  } else {\n    return text;\n  }\n}\n\nexports.parseTag = parseTag;\nexports.parseAttr = parseAttr;\n",";/*! showdown v 1.9.0 - 10-11-2018 */\r\n(function(){\r\n/**\n * Created by Tivie on 13-07-2015.\n */\n\nfunction getDefaultOpts (simple) {\n  'use strict';\n\n  var defaultOptions = {\n    omitExtraWLInCodeBlocks: {\n      defaultValue: false,\n      describe: 'Omit the default extra whiteline added to code blocks',\n      type: 'boolean'\n    },\n    noHeaderId: {\n      defaultValue: false,\n      describe: 'Turn on/off generated header id',\n      type: 'boolean'\n    },\n    prefixHeaderId: {\n      defaultValue: false,\n      describe: 'Add a prefix to the generated header ids. Passing a string will prefix that string to the header id. Setting to true will add a generic \\'section-\\' prefix',\n      type: 'string'\n    },\n    rawPrefixHeaderId: {\n      defaultValue: false,\n      describe: 'Setting this option to true will prevent showdown from modifying the prefix. This might result in malformed IDs (if, for instance, the \" char is used in the prefix)',\n      type: 'boolean'\n    },\n    ghCompatibleHeaderId: {\n      defaultValue: false,\n      describe: 'Generate header ids compatible with github style (spaces are replaced with dashes, a bunch of non alphanumeric chars are removed)',\n      type: 'boolean'\n    },\n    rawHeaderId: {\n      defaultValue: false,\n      describe: 'Remove only spaces, \\' and \" from generated header ids (including prefixes), replacing them with dashes (-). WARNING: This might result in malformed ids',\n      type: 'boolean'\n    },\n    headerLevelStart: {\n      defaultValue: false,\n      describe: 'The header blocks level start',\n      type: 'integer'\n    },\n    parseImgDimensions: {\n      defaultValue: false,\n      describe: 'Turn on/off image dimension parsing',\n      type: 'boolean'\n    },\n    simplifiedAutoLink: {\n      defaultValue: false,\n      describe: 'Turn on/off GFM autolink style',\n      type: 'boolean'\n    },\n    excludeTrailingPunctuationFromURLs: {\n      defaultValue: false,\n      describe: 'Excludes trailing punctuation from links generated with autoLinking',\n      type: 'boolean'\n    },\n    literalMidWordUnderscores: {\n      defaultValue: false,\n      describe: 'Parse midword underscores as literal underscores',\n      type: 'boolean'\n    },\n    literalMidWordAsterisks: {\n      defaultValue: false,\n      describe: 'Parse midword asterisks as literal asterisks',\n      type: 'boolean'\n    },\n    strikethrough: {\n      defaultValue: false,\n      describe: 'Turn on/off strikethrough support',\n      type: 'boolean'\n    },\n    tables: {\n      defaultValue: false,\n      describe: 'Turn on/off tables support',\n      type: 'boolean'\n    },\n    tablesHeaderId: {\n      defaultValue: false,\n      describe: 'Add an id to table headers',\n      type: 'boolean'\n    },\n    ghCodeBlocks: {\n      defaultValue: true,\n      describe: 'Turn on/off GFM fenced code blocks support',\n      type: 'boolean'\n    },\n    tasklists: {\n      defaultValue: false,\n      describe: 'Turn on/off GFM tasklist support',\n      type: 'boolean'\n    },\n    smoothLivePreview: {\n      defaultValue: false,\n      describe: 'Prevents weird effects in live previews due to incomplete input',\n      type: 'boolean'\n    },\n    smartIndentationFix: {\n      defaultValue: false,\n      description: 'Tries to smartly fix indentation in es6 strings',\n      type: 'boolean'\n    },\n    disableForced4SpacesIndentedSublists: {\n      defaultValue: false,\n      description: 'Disables the requirement of indenting nested sublists by 4 spaces',\n      type: 'boolean'\n    },\n    simpleLineBreaks: {\n      defaultValue: false,\n      description: 'Parses simple line breaks as <br> (GFM Style)',\n      type: 'boolean'\n    },\n    requireSpaceBeforeHeadingText: {\n      defaultValue: false,\n      description: 'Makes adding a space between `#` and the header text mandatory (GFM Style)',\n      type: 'boolean'\n    },\n    ghMentions: {\n      defaultValue: false,\n      description: 'Enables github @mentions',\n      type: 'boolean'\n    },\n    ghMentionsLink: {\n      defaultValue: 'https://github.com/{u}',\n      description: 'Changes the link generated by @mentions. Only applies if ghMentions option is enabled.',\n      type: 'string'\n    },\n    encodeEmails: {\n      defaultValue: true,\n      description: 'Encode e-mail addresses through the use of Character Entities, transforming ASCII e-mail addresses into its equivalent decimal entities',\n      type: 'boolean'\n    },\n    openLinksInNewWindow: {\n      defaultValue: false,\n      description: 'Open all links in new windows',\n      type: 'boolean'\n    },\n    backslashEscapesHTMLTags: {\n      defaultValue: false,\n      description: 'Support for HTML Tag escaping. ex: \\<div>foo\\</div>',\n      type: 'boolean'\n    },\n    emoji: {\n      defaultValue: false,\n      description: 'Enable emoji support. Ex: `this is a :smile: emoji`',\n      type: 'boolean'\n    },\n    underline: {\n      defaultValue: false,\n      description: 'Enable support for underline. Syntax is double or triple underscores: `__underline word__`. With this option enabled, underscores no longer parses into `<em>` and `<strong>`',\n      type: 'boolean'\n    },\n    completeHTMLDocument: {\n      defaultValue: false,\n      description: 'Outputs a complete html document, including `<html>`, `<head>` and `<body>` tags',\n      type: 'boolean'\n    },\n    metadata: {\n      defaultValue: false,\n      description: 'Enable support for document metadata (defined at the top of the document between `«««` and `»»»` or between `---` and `---`).',\n      type: 'boolean'\n    },\n    splitAdjacentBlockquotes: {\n      defaultValue: false,\n      description: 'Split adjacent blockquote blocks',\n      type: 'boolean'\n    }\n  };\n  if (simple === false) {\n    return JSON.parse(JSON.stringify(defaultOptions));\n  }\n  var ret = {};\n  for (var opt in defaultOptions) {\n    if (defaultOptions.hasOwnProperty(opt)) {\n      ret[opt] = defaultOptions[opt].defaultValue;\n    }\n  }\n  return ret;\n}\n\nfunction allOptionsOn () {\n  'use strict';\n  var options = getDefaultOpts(true),\n      ret = {};\n  for (var opt in options) {\n    if (options.hasOwnProperty(opt)) {\n      ret[opt] = true;\n    }\n  }\n  return ret;\n}\n\r\n/**\n * Created by Tivie on 06-01-2015.\n */\n\n// Private properties\nvar showdown = {},\n    parsers = {},\n    extensions = {},\n    globalOptions = getDefaultOpts(true),\n    setFlavor = 'vanilla',\n    flavor = {\n      github: {\n        omitExtraWLInCodeBlocks:              true,\n        simplifiedAutoLink:                   true,\n        excludeTrailingPunctuationFromURLs:   true,\n        literalMidWordUnderscores:            true,\n        strikethrough:                        true,\n        tables:                               true,\n        tablesHeaderId:                       true,\n        ghCodeBlocks:                         true,\n        tasklists:                            true,\n        disableForced4SpacesIndentedSublists: true,\n        simpleLineBreaks:                     true,\n        requireSpaceBeforeHeadingText:        true,\n        ghCompatibleHeaderId:                 true,\n        ghMentions:                           true,\n        backslashEscapesHTMLTags:             true,\n        emoji:                                true,\n        splitAdjacentBlockquotes:             true\n      },\n      original: {\n        noHeaderId:                           true,\n        ghCodeBlocks:                         false\n      },\n      ghost: {\n        omitExtraWLInCodeBlocks:              true,\n        parseImgDimensions:                   true,\n        simplifiedAutoLink:                   true,\n        excludeTrailingPunctuationFromURLs:   true,\n        literalMidWordUnderscores:            true,\n        strikethrough:                        true,\n        tables:                               true,\n        tablesHeaderId:                       true,\n        ghCodeBlocks:                         true,\n        tasklists:                            true,\n        smoothLivePreview:                    true,\n        simpleLineBreaks:                     true,\n        requireSpaceBeforeHeadingText:        true,\n        ghMentions:                           false,\n        encodeEmails:                         true\n      },\n      vanilla: getDefaultOpts(true),\n      allOn: allOptionsOn()\n    };\n\n/**\n * helper namespace\n * @type {{}}\n */\nshowdown.helper = {};\n\n/**\n * TODO LEGACY SUPPORT CODE\n * @type {{}}\n */\nshowdown.extensions = {};\n\n/**\n * Set a global option\n * @static\n * @param {string} key\n * @param {*} value\n * @returns {showdown}\n */\nshowdown.setOption = function (key, value) {\n  'use strict';\n  globalOptions[key] = value;\n  return this;\n};\n\n/**\n * Get a global option\n * @static\n * @param {string} key\n * @returns {*}\n */\nshowdown.getOption = function (key) {\n  'use strict';\n  return globalOptions[key];\n};\n\n/**\n * Get the global options\n * @static\n * @returns {{}}\n */\nshowdown.getOptions = function () {\n  'use strict';\n  return globalOptions;\n};\n\n/**\n * Reset global options to the default values\n * @static\n */\nshowdown.resetOptions = function () {\n  'use strict';\n  globalOptions = getDefaultOpts(true);\n};\n\n/**\n * Set the flavor showdown should use as default\n * @param {string} name\n */\nshowdown.setFlavor = function (name) {\n  'use strict';\n  if (!flavor.hasOwnProperty(name)) {\n    throw Error(name + ' flavor was not found');\n  }\n  showdown.resetOptions();\n  var preset = flavor[name];\n  setFlavor = name;\n  for (var option in preset) {\n    if (preset.hasOwnProperty(option)) {\n      globalOptions[option] = preset[option];\n    }\n  }\n};\n\n/**\n * Get the currently set flavor\n * @returns {string}\n */\nshowdown.getFlavor = function () {\n  'use strict';\n  return setFlavor;\n};\n\n/**\n * Get the options of a specified flavor. Returns undefined if the flavor was not found\n * @param {string} name Name of the flavor\n * @returns {{}|undefined}\n */\nshowdown.getFlavorOptions = function (name) {\n  'use strict';\n  if (flavor.hasOwnProperty(name)) {\n    return flavor[name];\n  }\n};\n\n/**\n * Get the default options\n * @static\n * @param {boolean} [simple=true]\n * @returns {{}}\n */\nshowdown.getDefaultOptions = function (simple) {\n  'use strict';\n  return getDefaultOpts(simple);\n};\n\n/**\n * Get or set a subParser\n *\n * subParser(name)       - Get a registered subParser\n * subParser(name, func) - Register a subParser\n * @static\n * @param {string} name\n * @param {function} [func]\n * @returns {*}\n */\nshowdown.subParser = function (name, func) {\n  'use strict';\n  if (showdown.helper.isString(name)) {\n    if (typeof func !== 'undefined') {\n      parsers[name] = func;\n    } else {\n      if (parsers.hasOwnProperty(name)) {\n        return parsers[name];\n      } else {\n        throw Error('SubParser named ' + name + ' not registered!');\n      }\n    }\n  }\n};\n\n/**\n * Gets or registers an extension\n * @static\n * @param {string} name\n * @param {object|function=} ext\n * @returns {*}\n */\nshowdown.extension = function (name, ext) {\n  'use strict';\n\n  if (!showdown.helper.isString(name)) {\n    throw Error('Extension \\'name\\' must be a string');\n  }\n\n  name = showdown.helper.stdExtName(name);\n\n  // Getter\n  if (showdown.helper.isUndefined(ext)) {\n    if (!extensions.hasOwnProperty(name)) {\n      throw Error('Extension named ' + name + ' is not registered!');\n    }\n    return extensions[name];\n\n    // Setter\n  } else {\n    // Expand extension if it's wrapped in a function\n    if (typeof ext === 'function') {\n      ext = ext();\n    }\n\n    // Ensure extension is an array\n    if (!showdown.helper.isArray(ext)) {\n      ext = [ext];\n    }\n\n    var validExtension = validate(ext, name);\n\n    if (validExtension.valid) {\n      extensions[name] = ext;\n    } else {\n      throw Error(validExtension.error);\n    }\n  }\n};\n\n/**\n * Gets all extensions registered\n * @returns {{}}\n */\nshowdown.getAllExtensions = function () {\n  'use strict';\n  return extensions;\n};\n\n/**\n * Remove an extension\n * @param {string} name\n */\nshowdown.removeExtension = function (name) {\n  'use strict';\n  delete extensions[name];\n};\n\n/**\n * Removes all extensions\n */\nshowdown.resetExtensions = function () {\n  'use strict';\n  extensions = {};\n};\n\n/**\n * Validate extension\n * @param {array} extension\n * @param {string} name\n * @returns {{valid: boolean, error: string}}\n */\nfunction validate (extension, name) {\n  'use strict';\n\n  var errMsg = (name) ? 'Error in ' + name + ' extension->' : 'Error in unnamed extension',\n      ret = {\n        valid: true,\n        error: ''\n      };\n\n  if (!showdown.helper.isArray(extension)) {\n    extension = [extension];\n  }\n\n  for (var i = 0; i < extension.length; ++i) {\n    var baseMsg = errMsg + ' sub-extension ' + i + ': ',\n        ext = extension[i];\n    if (typeof ext !== 'object') {\n      ret.valid = false;\n      ret.error = baseMsg + 'must be an object, but ' + typeof ext + ' given';\n      return ret;\n    }\n\n    if (!showdown.helper.isString(ext.type)) {\n      ret.valid = false;\n      ret.error = baseMsg + 'property \"type\" must be a string, but ' + typeof ext.type + ' given';\n      return ret;\n    }\n\n    var type = ext.type = ext.type.toLowerCase();\n\n    // normalize extension type\n    if (type === 'language') {\n      type = ext.type = 'lang';\n    }\n\n    if (type === 'html') {\n      type = ext.type = 'output';\n    }\n\n    if (type !== 'lang' && type !== 'output' && type !== 'listener') {\n      ret.valid = false;\n      ret.error = baseMsg + 'type ' + type + ' is not recognized. Valid values: \"lang/language\", \"output/html\" or \"listener\"';\n      return ret;\n    }\n\n    if (type === 'listener') {\n      if (showdown.helper.isUndefined(ext.listeners)) {\n        ret.valid = false;\n        ret.error = baseMsg + '. Extensions of type \"listener\" must have a property called \"listeners\"';\n        return ret;\n      }\n    } else {\n      if (showdown.helper.isUndefined(ext.filter) && showdown.helper.isUndefined(ext.regex)) {\n        ret.valid = false;\n        ret.error = baseMsg + type + ' extensions must define either a \"regex\" property or a \"filter\" method';\n        return ret;\n      }\n    }\n\n    if (ext.listeners) {\n      if (typeof ext.listeners !== 'object') {\n        ret.valid = false;\n        ret.error = baseMsg + '\"listeners\" property must be an object but ' + typeof ext.listeners + ' given';\n        return ret;\n      }\n      for (var ln in ext.listeners) {\n        if (ext.listeners.hasOwnProperty(ln)) {\n          if (typeof ext.listeners[ln] !== 'function') {\n            ret.valid = false;\n            ret.error = baseMsg + '\"listeners\" property must be an hash of [event name]: [callback]. listeners.' + ln +\n              ' must be a function but ' + typeof ext.listeners[ln] + ' given';\n            return ret;\n          }\n        }\n      }\n    }\n\n    if (ext.filter) {\n      if (typeof ext.filter !== 'function') {\n        ret.valid = false;\n        ret.error = baseMsg + '\"filter\" must be a function, but ' + typeof ext.filter + ' given';\n        return ret;\n      }\n    } else if (ext.regex) {\n      if (showdown.helper.isString(ext.regex)) {\n        ext.regex = new RegExp(ext.regex, 'g');\n      }\n      if (!(ext.regex instanceof RegExp)) {\n        ret.valid = false;\n        ret.error = baseMsg + '\"regex\" property must either be a string or a RegExp object, but ' + typeof ext.regex + ' given';\n        return ret;\n      }\n      if (showdown.helper.isUndefined(ext.replace)) {\n        ret.valid = false;\n        ret.error = baseMsg + '\"regex\" extensions must implement a replace string or function';\n        return ret;\n      }\n    }\n  }\n  return ret;\n}\n\n/**\n * Validate extension\n * @param {object} ext\n * @returns {boolean}\n */\nshowdown.validateExtension = function (ext) {\n  'use strict';\n\n  var validateExtension = validate(ext, null);\n  if (!validateExtension.valid) {\n    console.warn(validateExtension.error);\n    return false;\n  }\n  return true;\n};\n\r\n/**\n * showdownjs helper functions\n */\n\nif (!showdown.hasOwnProperty('helper')) {\n  showdown.helper = {};\n}\n\n/**\n * Check if var is string\n * @static\n * @param {string} a\n * @returns {boolean}\n */\nshowdown.helper.isString = function (a) {\n  'use strict';\n  return (typeof a === 'string' || a instanceof String);\n};\n\n/**\n * Check if var is a function\n * @static\n * @param {*} a\n * @returns {boolean}\n */\nshowdown.helper.isFunction = function (a) {\n  'use strict';\n  var getType = {};\n  return a && getType.toString.call(a) === '[object Function]';\n};\n\n/**\n * isArray helper function\n * @static\n * @param {*} a\n * @returns {boolean}\n */\nshowdown.helper.isArray = function (a) {\n  'use strict';\n  return Array.isArray(a);\n};\n\n/**\n * Check if value is undefined\n * @static\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n */\nshowdown.helper.isUndefined = function (value) {\n  'use strict';\n  return typeof value === 'undefined';\n};\n\n/**\n * ForEach helper function\n * Iterates over Arrays and Objects (own properties only)\n * @static\n * @param {*} obj\n * @param {function} callback Accepts 3 params: 1. value, 2. key, 3. the original array/object\n */\nshowdown.helper.forEach = function (obj, callback) {\n  'use strict';\n  // check if obj is defined\n  if (showdown.helper.isUndefined(obj)) {\n    throw new Error('obj param is required');\n  }\n\n  if (showdown.helper.isUndefined(callback)) {\n    throw new Error('callback param is required');\n  }\n\n  if (!showdown.helper.isFunction(callback)) {\n    throw new Error('callback param must be a function/closure');\n  }\n\n  if (typeof obj.forEach === 'function') {\n    obj.forEach(callback);\n  } else if (showdown.helper.isArray(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      callback(obj[i], i, obj);\n    }\n  } else if (typeof (obj) === 'object') {\n    for (var prop in obj) {\n      if (obj.hasOwnProperty(prop)) {\n        callback(obj[prop], prop, obj);\n      }\n    }\n  } else {\n    throw new Error('obj does not seem to be an array or an iterable object');\n  }\n};\n\n/**\n * Standardidize extension name\n * @static\n * @param {string} s extension name\n * @returns {string}\n */\nshowdown.helper.stdExtName = function (s) {\n  'use strict';\n  return s.replace(/[_?*+\\/\\\\.^-]/g, '').replace(/\\s/g, '').toLowerCase();\n};\n\nfunction escapeCharactersCallback (wholeMatch, m1) {\n  'use strict';\n  var charCodeToEscape = m1.charCodeAt(0);\n  return '¨E' + charCodeToEscape + 'E';\n}\n\n/**\n * Callback used to escape characters when passing through String.replace\n * @static\n * @param {string} wholeMatch\n * @param {string} m1\n * @returns {string}\n */\nshowdown.helper.escapeCharactersCallback = escapeCharactersCallback;\n\n/**\n * Escape characters in a string\n * @static\n * @param {string} text\n * @param {string} charsToEscape\n * @param {boolean} afterBackslash\n * @returns {XML|string|void|*}\n */\nshowdown.helper.escapeCharacters = function (text, charsToEscape, afterBackslash) {\n  'use strict';\n  // First we have to escape the escape characters so that\n  // we can build a character class out of them\n  var regexString = '([' + charsToEscape.replace(/([\\[\\]\\\\])/g, '\\\\$1') + '])';\n\n  if (afterBackslash) {\n    regexString = '\\\\\\\\' + regexString;\n  }\n\n  var regex = new RegExp(regexString, 'g');\n  text = text.replace(regex, escapeCharactersCallback);\n\n  return text;\n};\n\n/**\n * Unescape HTML entities\n * @param txt\n * @returns {string}\n */\nshowdown.helper.unescapeHTMLEntities = function (txt) {\n  'use strict';\n\n  return txt\n    .replace(/&quot;/g, '\"')\n    .replace(/&lt;/g, '<')\n    .replace(/&gt;/g, '>')\n    .replace(/&amp;/g, '&');\n};\n\nvar rgxFindMatchPos = function (str, left, right, flags) {\n  'use strict';\n  var f = flags || '',\n      g = f.indexOf('g') > -1,\n      x = new RegExp(left + '|' + right, 'g' + f.replace(/g/g, '')),\n      l = new RegExp(left, f.replace(/g/g, '')),\n      pos = [],\n      t, s, m, start, end;\n\n  do {\n    t = 0;\n    while ((m = x.exec(str))) {\n      if (l.test(m[0])) {\n        if (!(t++)) {\n          s = x.lastIndex;\n          start = s - m[0].length;\n        }\n      } else if (t) {\n        if (!--t) {\n          end = m.index + m[0].length;\n          var obj = {\n            left: {start: start, end: s},\n            match: {start: s, end: m.index},\n            right: {start: m.index, end: end},\n            wholeMatch: {start: start, end: end}\n          };\n          pos.push(obj);\n          if (!g) {\n            return pos;\n          }\n        }\n      }\n    }\n  } while (t && (x.lastIndex = s));\n\n  return pos;\n};\n\n/**\n * matchRecursiveRegExp\n *\n * (c) 2007 Steven Levithan <stevenlevithan.com>\n * MIT License\n *\n * Accepts a string to search, a left and right format delimiter\n * as regex patterns, and optional regex flags. Returns an array\n * of matches, allowing nested instances of left/right delimiters.\n * Use the \"g\" flag to return all matches, otherwise only the\n * first is returned. Be careful to ensure that the left and\n * right format delimiters produce mutually exclusive matches.\n * Backreferences are not supported within the right delimiter\n * due to how it is internally combined with the left delimiter.\n * When matching strings whose format delimiters are unbalanced\n * to the left or right, the output is intentionally as a\n * conventional regex library with recursion support would\n * produce, e.g. \"<<x>\" and \"<x>>\" both produce [\"x\"] when using\n * \"<\" and \">\" as the delimiters (both strings contain a single,\n * balanced instance of \"<x>\").\n *\n * examples:\n * matchRecursiveRegExp(\"test\", \"\\\\(\", \"\\\\)\")\n * returns: []\n * matchRecursiveRegExp(\"<t<<e>><s>>t<>\", \"<\", \">\", \"g\")\n * returns: [\"t<<e>><s>\", \"\"]\n * matchRecursiveRegExp(\"<div id=\\\"x\\\">test</div>\", \"<div\\\\b[^>]*>\", \"</div>\", \"gi\")\n * returns: [\"test\"]\n */\nshowdown.helper.matchRecursiveRegExp = function (str, left, right, flags) {\n  'use strict';\n\n  var matchPos = rgxFindMatchPos (str, left, right, flags),\n      results = [];\n\n  for (var i = 0; i < matchPos.length; ++i) {\n    results.push([\n      str.slice(matchPos[i].wholeMatch.start, matchPos[i].wholeMatch.end),\n      str.slice(matchPos[i].match.start, matchPos[i].match.end),\n      str.slice(matchPos[i].left.start, matchPos[i].left.end),\n      str.slice(matchPos[i].right.start, matchPos[i].right.end)\n    ]);\n  }\n  return results;\n};\n\n/**\n *\n * @param {string} str\n * @param {string|function} replacement\n * @param {string} left\n * @param {string} right\n * @param {string} flags\n * @returns {string}\n */\nshowdown.helper.replaceRecursiveRegExp = function (str, replacement, left, right, flags) {\n  'use strict';\n\n  if (!showdown.helper.isFunction(replacement)) {\n    var repStr = replacement;\n    replacement = function () {\n      return repStr;\n    };\n  }\n\n  var matchPos = rgxFindMatchPos(str, left, right, flags),\n      finalStr = str,\n      lng = matchPos.length;\n\n  if (lng > 0) {\n    var bits = [];\n    if (matchPos[0].wholeMatch.start !== 0) {\n      bits.push(str.slice(0, matchPos[0].wholeMatch.start));\n    }\n    for (var i = 0; i < lng; ++i) {\n      bits.push(\n        replacement(\n          str.slice(matchPos[i].wholeMatch.start, matchPos[i].wholeMatch.end),\n          str.slice(matchPos[i].match.start, matchPos[i].match.end),\n          str.slice(matchPos[i].left.start, matchPos[i].left.end),\n          str.slice(matchPos[i].right.start, matchPos[i].right.end)\n        )\n      );\n      if (i < lng - 1) {\n        bits.push(str.slice(matchPos[i].wholeMatch.end, matchPos[i + 1].wholeMatch.start));\n      }\n    }\n    if (matchPos[lng - 1].wholeMatch.end < str.length) {\n      bits.push(str.slice(matchPos[lng - 1].wholeMatch.end));\n    }\n    finalStr = bits.join('');\n  }\n  return finalStr;\n};\n\n/**\n * Returns the index within the passed String object of the first occurrence of the specified regex,\n * starting the search at fromIndex. Returns -1 if the value is not found.\n *\n * @param {string} str string to search\n * @param {RegExp} regex Regular expression to search\n * @param {int} [fromIndex = 0] Index to start the search\n * @returns {Number}\n * @throws InvalidArgumentError\n */\nshowdown.helper.regexIndexOf = function (str, regex, fromIndex) {\n  'use strict';\n  if (!showdown.helper.isString(str)) {\n    throw 'InvalidArgumentError: first parameter of showdown.helper.regexIndexOf function must be a string';\n  }\n  if (regex instanceof RegExp === false) {\n    throw 'InvalidArgumentError: second parameter of showdown.helper.regexIndexOf function must be an instance of RegExp';\n  }\n  var indexOf = str.substring(fromIndex || 0).search(regex);\n  return (indexOf >= 0) ? (indexOf + (fromIndex || 0)) : indexOf;\n};\n\n/**\n * Splits the passed string object at the defined index, and returns an array composed of the two substrings\n * @param {string} str string to split\n * @param {int} index index to split string at\n * @returns {[string,string]}\n * @throws InvalidArgumentError\n */\nshowdown.helper.splitAtIndex = function (str, index) {\n  'use strict';\n  if (!showdown.helper.isString(str)) {\n    throw 'InvalidArgumentError: first parameter of showdown.helper.regexIndexOf function must be a string';\n  }\n  return [str.substring(0, index), str.substring(index)];\n};\n\n/**\n * Obfuscate an e-mail address through the use of Character Entities,\n * transforming ASCII characters into their equivalent decimal or hex entities.\n *\n * Since it has a random component, subsequent calls to this function produce different results\n *\n * @param {string} mail\n * @returns {string}\n */\nshowdown.helper.encodeEmailAddress = function (mail) {\n  'use strict';\n  var encode = [\n    function (ch) {\n      return '&#' + ch.charCodeAt(0) + ';';\n    },\n    function (ch) {\n      return '&#x' + ch.charCodeAt(0).toString(16) + ';';\n    },\n    function (ch) {\n      return ch;\n    }\n  ];\n\n  mail = mail.replace(/./g, function (ch) {\n    if (ch === '@') {\n      // this *must* be encoded. I insist.\n      ch = encode[Math.floor(Math.random() * 2)](ch);\n    } else {\n      var r = Math.random();\n      // roughly 10% raw, 45% hex, 45% dec\n      ch = (\n        r > 0.9 ? encode[2](ch) : r > 0.45 ? encode[1](ch) : encode[0](ch)\n      );\n    }\n    return ch;\n  });\n\n  return mail;\n};\n\n/**\n *\n * @param str\n * @param targetLength\n * @param padString\n * @returns {string}\n */\nshowdown.helper.padEnd = function padEnd (str, targetLength, padString) {\n  'use strict';\n  /*jshint bitwise: false*/\n  // eslint-disable-next-line space-infix-ops\n  targetLength = targetLength>>0; //floor if number or convert non-number to 0;\n  /*jshint bitwise: true*/\n  padString = String(padString || ' ');\n  if (str.length > targetLength) {\n    return String(str);\n  } else {\n    targetLength = targetLength - str.length;\n    if (targetLength > padString.length) {\n      padString += padString.repeat(targetLength / padString.length); //append to original to ensure we are longer than needed\n    }\n    return String(str) + padString.slice(0,targetLength);\n  }\n};\n\n/**\n * POLYFILLS\n */\n// use this instead of builtin is undefined for IE8 compatibility\nif (typeof(console) === 'undefined') {\n  console = {\n    warn: function (msg) {\n      'use strict';\n      alert(msg);\n    },\n    log: function (msg) {\n      'use strict';\n      alert(msg);\n    },\n    error: function (msg) {\n      'use strict';\n      throw msg;\n    }\n  };\n}\n\n/**\n * Common regexes.\n * We declare some common regexes to improve performance\n */\nshowdown.helper.regexes = {\n  asteriskDashAndColon: /([*_:~])/g\n};\n\n/**\n * EMOJIS LIST\n */\nshowdown.helper.emojis = {\n  '+1':'\\ud83d\\udc4d',\n  '-1':'\\ud83d\\udc4e',\n  '100':'\\ud83d\\udcaf',\n  '1234':'\\ud83d\\udd22',\n  '1st_place_medal':'\\ud83e\\udd47',\n  '2nd_place_medal':'\\ud83e\\udd48',\n  '3rd_place_medal':'\\ud83e\\udd49',\n  '8ball':'\\ud83c\\udfb1',\n  'a':'\\ud83c\\udd70\\ufe0f',\n  'ab':'\\ud83c\\udd8e',\n  'abc':'\\ud83d\\udd24',\n  'abcd':'\\ud83d\\udd21',\n  'accept':'\\ud83c\\ude51',\n  'aerial_tramway':'\\ud83d\\udea1',\n  'airplane':'\\u2708\\ufe0f',\n  'alarm_clock':'\\u23f0',\n  'alembic':'\\u2697\\ufe0f',\n  'alien':'\\ud83d\\udc7d',\n  'ambulance':'\\ud83d\\ude91',\n  'amphora':'\\ud83c\\udffa',\n  'anchor':'\\u2693\\ufe0f',\n  'angel':'\\ud83d\\udc7c',\n  'anger':'\\ud83d\\udca2',\n  'angry':'\\ud83d\\ude20',\n  'anguished':'\\ud83d\\ude27',\n  'ant':'\\ud83d\\udc1c',\n  'apple':'\\ud83c\\udf4e',\n  'aquarius':'\\u2652\\ufe0f',\n  'aries':'\\u2648\\ufe0f',\n  'arrow_backward':'\\u25c0\\ufe0f',\n  'arrow_double_down':'\\u23ec',\n  'arrow_double_up':'\\u23eb',\n  'arrow_down':'\\u2b07\\ufe0f',\n  'arrow_down_small':'\\ud83d\\udd3d',\n  'arrow_forward':'\\u25b6\\ufe0f',\n  'arrow_heading_down':'\\u2935\\ufe0f',\n  'arrow_heading_up':'\\u2934\\ufe0f',\n  'arrow_left':'\\u2b05\\ufe0f',\n  'arrow_lower_left':'\\u2199\\ufe0f',\n  'arrow_lower_right':'\\u2198\\ufe0f',\n  'arrow_right':'\\u27a1\\ufe0f',\n  'arrow_right_hook':'\\u21aa\\ufe0f',\n  'arrow_up':'\\u2b06\\ufe0f',\n  'arrow_up_down':'\\u2195\\ufe0f',\n  'arrow_up_small':'\\ud83d\\udd3c',\n  'arrow_upper_left':'\\u2196\\ufe0f',\n  'arrow_upper_right':'\\u2197\\ufe0f',\n  'arrows_clockwise':'\\ud83d\\udd03',\n  'arrows_counterclockwise':'\\ud83d\\udd04',\n  'art':'\\ud83c\\udfa8',\n  'articulated_lorry':'\\ud83d\\ude9b',\n  'artificial_satellite':'\\ud83d\\udef0',\n  'astonished':'\\ud83d\\ude32',\n  'athletic_shoe':'\\ud83d\\udc5f',\n  'atm':'\\ud83c\\udfe7',\n  'atom_symbol':'\\u269b\\ufe0f',\n  'avocado':'\\ud83e\\udd51',\n  'b':'\\ud83c\\udd71\\ufe0f',\n  'baby':'\\ud83d\\udc76',\n  'baby_bottle':'\\ud83c\\udf7c',\n  'baby_chick':'\\ud83d\\udc24',\n  'baby_symbol':'\\ud83d\\udebc',\n  'back':'\\ud83d\\udd19',\n  'bacon':'\\ud83e\\udd53',\n  'badminton':'\\ud83c\\udff8',\n  'baggage_claim':'\\ud83d\\udec4',\n  'baguette_bread':'\\ud83e\\udd56',\n  'balance_scale':'\\u2696\\ufe0f',\n  'balloon':'\\ud83c\\udf88',\n  'ballot_box':'\\ud83d\\uddf3',\n  'ballot_box_with_check':'\\u2611\\ufe0f',\n  'bamboo':'\\ud83c\\udf8d',\n  'banana':'\\ud83c\\udf4c',\n  'bangbang':'\\u203c\\ufe0f',\n  'bank':'\\ud83c\\udfe6',\n  'bar_chart':'\\ud83d\\udcca',\n  'barber':'\\ud83d\\udc88',\n  'baseball':'\\u26be\\ufe0f',\n  'basketball':'\\ud83c\\udfc0',\n  'basketball_man':'\\u26f9\\ufe0f',\n  'basketball_woman':'\\u26f9\\ufe0f&zwj;\\u2640\\ufe0f',\n  'bat':'\\ud83e\\udd87',\n  'bath':'\\ud83d\\udec0',\n  'bathtub':'\\ud83d\\udec1',\n  'battery':'\\ud83d\\udd0b',\n  'beach_umbrella':'\\ud83c\\udfd6',\n  'bear':'\\ud83d\\udc3b',\n  'bed':'\\ud83d\\udecf',\n  'bee':'\\ud83d\\udc1d',\n  'beer':'\\ud83c\\udf7a',\n  'beers':'\\ud83c\\udf7b',\n  'beetle':'\\ud83d\\udc1e',\n  'beginner':'\\ud83d\\udd30',\n  'bell':'\\ud83d\\udd14',\n  'bellhop_bell':'\\ud83d\\udece',\n  'bento':'\\ud83c\\udf71',\n  'biking_man':'\\ud83d\\udeb4',\n  'bike':'\\ud83d\\udeb2',\n  'biking_woman':'\\ud83d\\udeb4&zwj;\\u2640\\ufe0f',\n  'bikini':'\\ud83d\\udc59',\n  'biohazard':'\\u2623\\ufe0f',\n  'bird':'\\ud83d\\udc26',\n  'birthday':'\\ud83c\\udf82',\n  'black_circle':'\\u26ab\\ufe0f',\n  'black_flag':'\\ud83c\\udff4',\n  'black_heart':'\\ud83d\\udda4',\n  'black_joker':'\\ud83c\\udccf',\n  'black_large_square':'\\u2b1b\\ufe0f',\n  'black_medium_small_square':'\\u25fe\\ufe0f',\n  'black_medium_square':'\\u25fc\\ufe0f',\n  'black_nib':'\\u2712\\ufe0f',\n  'black_small_square':'\\u25aa\\ufe0f',\n  'black_square_button':'\\ud83d\\udd32',\n  'blonde_man':'\\ud83d\\udc71',\n  'blonde_woman':'\\ud83d\\udc71&zwj;\\u2640\\ufe0f',\n  'blossom':'\\ud83c\\udf3c',\n  'blowfish':'\\ud83d\\udc21',\n  'blue_book':'\\ud83d\\udcd8',\n  'blue_car':'\\ud83d\\ude99',\n  'blue_heart':'\\ud83d\\udc99',\n  'blush':'\\ud83d\\ude0a',\n  'boar':'\\ud83d\\udc17',\n  'boat':'\\u26f5\\ufe0f',\n  'bomb':'\\ud83d\\udca3',\n  'book':'\\ud83d\\udcd6',\n  'bookmark':'\\ud83d\\udd16',\n  'bookmark_tabs':'\\ud83d\\udcd1',\n  'books':'\\ud83d\\udcda',\n  'boom':'\\ud83d\\udca5',\n  'boot':'\\ud83d\\udc62',\n  'bouquet':'\\ud83d\\udc90',\n  'bowing_man':'\\ud83d\\ude47',\n  'bow_and_arrow':'\\ud83c\\udff9',\n  'bowing_woman':'\\ud83d\\ude47&zwj;\\u2640\\ufe0f',\n  'bowling':'\\ud83c\\udfb3',\n  'boxing_glove':'\\ud83e\\udd4a',\n  'boy':'\\ud83d\\udc66',\n  'bread':'\\ud83c\\udf5e',\n  'bride_with_veil':'\\ud83d\\udc70',\n  'bridge_at_night':'\\ud83c\\udf09',\n  'briefcase':'\\ud83d\\udcbc',\n  'broken_heart':'\\ud83d\\udc94',\n  'bug':'\\ud83d\\udc1b',\n  'building_construction':'\\ud83c\\udfd7',\n  'bulb':'\\ud83d\\udca1',\n  'bullettrain_front':'\\ud83d\\ude85',\n  'bullettrain_side':'\\ud83d\\ude84',\n  'burrito':'\\ud83c\\udf2f',\n  'bus':'\\ud83d\\ude8c',\n  'business_suit_levitating':'\\ud83d\\udd74',\n  'busstop':'\\ud83d\\ude8f',\n  'bust_in_silhouette':'\\ud83d\\udc64',\n  'busts_in_silhouette':'\\ud83d\\udc65',\n  'butterfly':'\\ud83e\\udd8b',\n  'cactus':'\\ud83c\\udf35',\n  'cake':'\\ud83c\\udf70',\n  'calendar':'\\ud83d\\udcc6',\n  'call_me_hand':'\\ud83e\\udd19',\n  'calling':'\\ud83d\\udcf2',\n  'camel':'\\ud83d\\udc2b',\n  'camera':'\\ud83d\\udcf7',\n  'camera_flash':'\\ud83d\\udcf8',\n  'camping':'\\ud83c\\udfd5',\n  'cancer':'\\u264b\\ufe0f',\n  'candle':'\\ud83d\\udd6f',\n  'candy':'\\ud83c\\udf6c',\n  'canoe':'\\ud83d\\udef6',\n  'capital_abcd':'\\ud83d\\udd20',\n  'capricorn':'\\u2651\\ufe0f',\n  'car':'\\ud83d\\ude97',\n  'card_file_box':'\\ud83d\\uddc3',\n  'card_index':'\\ud83d\\udcc7',\n  'card_index_dividers':'\\ud83d\\uddc2',\n  'carousel_horse':'\\ud83c\\udfa0',\n  'carrot':'\\ud83e\\udd55',\n  'cat':'\\ud83d\\udc31',\n  'cat2':'\\ud83d\\udc08',\n  'cd':'\\ud83d\\udcbf',\n  'chains':'\\u26d3',\n  'champagne':'\\ud83c\\udf7e',\n  'chart':'\\ud83d\\udcb9',\n  'chart_with_downwards_trend':'\\ud83d\\udcc9',\n  'chart_with_upwards_trend':'\\ud83d\\udcc8',\n  'checkered_flag':'\\ud83c\\udfc1',\n  'cheese':'\\ud83e\\uddc0',\n  'cherries':'\\ud83c\\udf52',\n  'cherry_blossom':'\\ud83c\\udf38',\n  'chestnut':'\\ud83c\\udf30',\n  'chicken':'\\ud83d\\udc14',\n  'children_crossing':'\\ud83d\\udeb8',\n  'chipmunk':'\\ud83d\\udc3f',\n  'chocolate_bar':'\\ud83c\\udf6b',\n  'christmas_tree':'\\ud83c\\udf84',\n  'church':'\\u26ea\\ufe0f',\n  'cinema':'\\ud83c\\udfa6',\n  'circus_tent':'\\ud83c\\udfaa',\n  'city_sunrise':'\\ud83c\\udf07',\n  'city_sunset':'\\ud83c\\udf06',\n  'cityscape':'\\ud83c\\udfd9',\n  'cl':'\\ud83c\\udd91',\n  'clamp':'\\ud83d\\udddc',\n  'clap':'\\ud83d\\udc4f',\n  'clapper':'\\ud83c\\udfac',\n  'classical_building':'\\ud83c\\udfdb',\n  'clinking_glasses':'\\ud83e\\udd42',\n  'clipboard':'\\ud83d\\udccb',\n  'clock1':'\\ud83d\\udd50',\n  'clock10':'\\ud83d\\udd59',\n  'clock1030':'\\ud83d\\udd65',\n  'clock11':'\\ud83d\\udd5a',\n  'clock1130':'\\ud83d\\udd66',\n  'clock12':'\\ud83d\\udd5b',\n  'clock1230':'\\ud83d\\udd67',\n  'clock130':'\\ud83d\\udd5c',\n  'clock2':'\\ud83d\\udd51',\n  'clock230':'\\ud83d\\udd5d',\n  'clock3':'\\ud83d\\udd52',\n  'clock330':'\\ud83d\\udd5e',\n  'clock4':'\\ud83d\\udd53',\n  'clock430':'\\ud83d\\udd5f',\n  'clock5':'\\ud83d\\udd54',\n  'clock530':'\\ud83d\\udd60',\n  'clock6':'\\ud83d\\udd55',\n  'clock630':'\\ud83d\\udd61',\n  'clock7':'\\ud83d\\udd56',\n  'clock730':'\\ud83d\\udd62',\n  'clock8':'\\ud83d\\udd57',\n  'clock830':'\\ud83d\\udd63',\n  'clock9':'\\ud83d\\udd58',\n  'clock930':'\\ud83d\\udd64',\n  'closed_book':'\\ud83d\\udcd5',\n  'closed_lock_with_key':'\\ud83d\\udd10',\n  'closed_umbrella':'\\ud83c\\udf02',\n  'cloud':'\\u2601\\ufe0f',\n  'cloud_with_lightning':'\\ud83c\\udf29',\n  'cloud_with_lightning_and_rain':'\\u26c8',\n  'cloud_with_rain':'\\ud83c\\udf27',\n  'cloud_with_snow':'\\ud83c\\udf28',\n  'clown_face':'\\ud83e\\udd21',\n  'clubs':'\\u2663\\ufe0f',\n  'cocktail':'\\ud83c\\udf78',\n  'coffee':'\\u2615\\ufe0f',\n  'coffin':'\\u26b0\\ufe0f',\n  'cold_sweat':'\\ud83d\\ude30',\n  'comet':'\\u2604\\ufe0f',\n  'computer':'\\ud83d\\udcbb',\n  'computer_mouse':'\\ud83d\\uddb1',\n  'confetti_ball':'\\ud83c\\udf8a',\n  'confounded':'\\ud83d\\ude16',\n  'confused':'\\ud83d\\ude15',\n  'congratulations':'\\u3297\\ufe0f',\n  'construction':'\\ud83d\\udea7',\n  'construction_worker_man':'\\ud83d\\udc77',\n  'construction_worker_woman':'\\ud83d\\udc77&zwj;\\u2640\\ufe0f',\n  'control_knobs':'\\ud83c\\udf9b',\n  'convenience_store':'\\ud83c\\udfea',\n  'cookie':'\\ud83c\\udf6a',\n  'cool':'\\ud83c\\udd92',\n  'policeman':'\\ud83d\\udc6e',\n  'copyright':'\\u00a9\\ufe0f',\n  'corn':'\\ud83c\\udf3d',\n  'couch_and_lamp':'\\ud83d\\udecb',\n  'couple':'\\ud83d\\udc6b',\n  'couple_with_heart_woman_man':'\\ud83d\\udc91',\n  'couple_with_heart_man_man':'\\ud83d\\udc68&zwj;\\u2764\\ufe0f&zwj;\\ud83d\\udc68',\n  'couple_with_heart_woman_woman':'\\ud83d\\udc69&zwj;\\u2764\\ufe0f&zwj;\\ud83d\\udc69',\n  'couplekiss_man_man':'\\ud83d\\udc68&zwj;\\u2764\\ufe0f&zwj;\\ud83d\\udc8b&zwj;\\ud83d\\udc68',\n  'couplekiss_man_woman':'\\ud83d\\udc8f',\n  'couplekiss_woman_woman':'\\ud83d\\udc69&zwj;\\u2764\\ufe0f&zwj;\\ud83d\\udc8b&zwj;\\ud83d\\udc69',\n  'cow':'\\ud83d\\udc2e',\n  'cow2':'\\ud83d\\udc04',\n  'cowboy_hat_face':'\\ud83e\\udd20',\n  'crab':'\\ud83e\\udd80',\n  'crayon':'\\ud83d\\udd8d',\n  'credit_card':'\\ud83d\\udcb3',\n  'crescent_moon':'\\ud83c\\udf19',\n  'cricket':'\\ud83c\\udfcf',\n  'crocodile':'\\ud83d\\udc0a',\n  'croissant':'\\ud83e\\udd50',\n  'crossed_fingers':'\\ud83e\\udd1e',\n  'crossed_flags':'\\ud83c\\udf8c',\n  'crossed_swords':'\\u2694\\ufe0f',\n  'crown':'\\ud83d\\udc51',\n  'cry':'\\ud83d\\ude22',\n  'crying_cat_face':'\\ud83d\\ude3f',\n  'crystal_ball':'\\ud83d\\udd2e',\n  'cucumber':'\\ud83e\\udd52',\n  'cupid':'\\ud83d\\udc98',\n  'curly_loop':'\\u27b0',\n  'currency_exchange':'\\ud83d\\udcb1',\n  'curry':'\\ud83c\\udf5b',\n  'custard':'\\ud83c\\udf6e',\n  'customs':'\\ud83d\\udec3',\n  'cyclone':'\\ud83c\\udf00',\n  'dagger':'\\ud83d\\udde1',\n  'dancer':'\\ud83d\\udc83',\n  'dancing_women':'\\ud83d\\udc6f',\n  'dancing_men':'\\ud83d\\udc6f&zwj;\\u2642\\ufe0f',\n  'dango':'\\ud83c\\udf61',\n  'dark_sunglasses':'\\ud83d\\udd76',\n  'dart':'\\ud83c\\udfaf',\n  'dash':'\\ud83d\\udca8',\n  'date':'\\ud83d\\udcc5',\n  'deciduous_tree':'\\ud83c\\udf33',\n  'deer':'\\ud83e\\udd8c',\n  'department_store':'\\ud83c\\udfec',\n  'derelict_house':'\\ud83c\\udfda',\n  'desert':'\\ud83c\\udfdc',\n  'desert_island':'\\ud83c\\udfdd',\n  'desktop_computer':'\\ud83d\\udda5',\n  'male_detective':'\\ud83d\\udd75\\ufe0f',\n  'diamond_shape_with_a_dot_inside':'\\ud83d\\udca0',\n  'diamonds':'\\u2666\\ufe0f',\n  'disappointed':'\\ud83d\\ude1e',\n  'disappointed_relieved':'\\ud83d\\ude25',\n  'dizzy':'\\ud83d\\udcab',\n  'dizzy_face':'\\ud83d\\ude35',\n  'do_not_litter':'\\ud83d\\udeaf',\n  'dog':'\\ud83d\\udc36',\n  'dog2':'\\ud83d\\udc15',\n  'dollar':'\\ud83d\\udcb5',\n  'dolls':'\\ud83c\\udf8e',\n  'dolphin':'\\ud83d\\udc2c',\n  'door':'\\ud83d\\udeaa',\n  'doughnut':'\\ud83c\\udf69',\n  'dove':'\\ud83d\\udd4a',\n  'dragon':'\\ud83d\\udc09',\n  'dragon_face':'\\ud83d\\udc32',\n  'dress':'\\ud83d\\udc57',\n  'dromedary_camel':'\\ud83d\\udc2a',\n  'drooling_face':'\\ud83e\\udd24',\n  'droplet':'\\ud83d\\udca7',\n  'drum':'\\ud83e\\udd41',\n  'duck':'\\ud83e\\udd86',\n  'dvd':'\\ud83d\\udcc0',\n  'e-mail':'\\ud83d\\udce7',\n  'eagle':'\\ud83e\\udd85',\n  'ear':'\\ud83d\\udc42',\n  'ear_of_rice':'\\ud83c\\udf3e',\n  'earth_africa':'\\ud83c\\udf0d',\n  'earth_americas':'\\ud83c\\udf0e',\n  'earth_asia':'\\ud83c\\udf0f',\n  'egg':'\\ud83e\\udd5a',\n  'eggplant':'\\ud83c\\udf46',\n  'eight_pointed_black_star':'\\u2734\\ufe0f',\n  'eight_spoked_asterisk':'\\u2733\\ufe0f',\n  'electric_plug':'\\ud83d\\udd0c',\n  'elephant':'\\ud83d\\udc18',\n  'email':'\\u2709\\ufe0f',\n  'end':'\\ud83d\\udd1a',\n  'envelope_with_arrow':'\\ud83d\\udce9',\n  'euro':'\\ud83d\\udcb6',\n  'european_castle':'\\ud83c\\udff0',\n  'european_post_office':'\\ud83c\\udfe4',\n  'evergreen_tree':'\\ud83c\\udf32',\n  'exclamation':'\\u2757\\ufe0f',\n  'expressionless':'\\ud83d\\ude11',\n  'eye':'\\ud83d\\udc41',\n  'eye_speech_bubble':'\\ud83d\\udc41&zwj;\\ud83d\\udde8',\n  'eyeglasses':'\\ud83d\\udc53',\n  'eyes':'\\ud83d\\udc40',\n  'face_with_head_bandage':'\\ud83e\\udd15',\n  'face_with_thermometer':'\\ud83e\\udd12',\n  'fist_oncoming':'\\ud83d\\udc4a',\n  'factory':'\\ud83c\\udfed',\n  'fallen_leaf':'\\ud83c\\udf42',\n  'family_man_woman_boy':'\\ud83d\\udc6a',\n  'family_man_boy':'\\ud83d\\udc68&zwj;\\ud83d\\udc66',\n  'family_man_boy_boy':'\\ud83d\\udc68&zwj;\\ud83d\\udc66&zwj;\\ud83d\\udc66',\n  'family_man_girl':'\\ud83d\\udc68&zwj;\\ud83d\\udc67',\n  'family_man_girl_boy':'\\ud83d\\udc68&zwj;\\ud83d\\udc67&zwj;\\ud83d\\udc66',\n  'family_man_girl_girl':'\\ud83d\\udc68&zwj;\\ud83d\\udc67&zwj;\\ud83d\\udc67',\n  'family_man_man_boy':'\\ud83d\\udc68&zwj;\\ud83d\\udc68&zwj;\\ud83d\\udc66',\n  'family_man_man_boy_boy':'\\ud83d\\udc68&zwj;\\ud83d\\udc68&zwj;\\ud83d\\udc66&zwj;\\ud83d\\udc66',\n  'family_man_man_girl':'\\ud83d\\udc68&zwj;\\ud83d\\udc68&zwj;\\ud83d\\udc67',\n  'family_man_man_girl_boy':'\\ud83d\\udc68&zwj;\\ud83d\\udc68&zwj;\\ud83d\\udc67&zwj;\\ud83d\\udc66',\n  'family_man_man_girl_girl':'\\ud83d\\udc68&zwj;\\ud83d\\udc68&zwj;\\ud83d\\udc67&zwj;\\ud83d\\udc67',\n  'family_man_woman_boy_boy':'\\ud83d\\udc68&zwj;\\ud83d\\udc69&zwj;\\ud83d\\udc66&zwj;\\ud83d\\udc66',\n  'family_man_woman_girl':'\\ud83d\\udc68&zwj;\\ud83d\\udc69&zwj;\\ud83d\\udc67',\n  'family_man_woman_girl_boy':'\\ud83d\\udc68&zwj;\\ud83d\\udc69&zwj;\\ud83d\\udc67&zwj;\\ud83d\\udc66',\n  'family_man_woman_girl_girl':'\\ud83d\\udc68&zwj;\\ud83d\\udc69&zwj;\\ud83d\\udc67&zwj;\\ud83d\\udc67',\n  'family_woman_boy':'\\ud83d\\udc69&zwj;\\ud83d\\udc66',\n  'family_woman_boy_boy':'\\ud83d\\udc69&zwj;\\ud83d\\udc66&zwj;\\ud83d\\udc66',\n  'family_woman_girl':'\\ud83d\\udc69&zwj;\\ud83d\\udc67',\n  'family_woman_girl_boy':'\\ud83d\\udc69&zwj;\\ud83d\\udc67&zwj;\\ud83d\\udc66',\n  'family_woman_girl_girl':'\\ud83d\\udc69&zwj;\\ud83d\\udc67&zwj;\\ud83d\\udc67',\n  'family_woman_woman_boy':'\\ud83d\\udc69&zwj;\\ud83d\\udc69&zwj;\\ud83d\\udc66',\n  'family_woman_woman_boy_boy':'\\ud83d\\udc69&zwj;\\ud83d\\udc69&zwj;\\ud83d\\udc66&zwj;\\ud83d\\udc66',\n  'family_woman_woman_girl':'\\ud83d\\udc69&zwj;\\ud83d\\udc69&zwj;\\ud83d\\udc67',\n  'family_woman_woman_girl_boy':'\\ud83d\\udc69&zwj;\\ud83d\\udc69&zwj;\\ud83d\\udc67&zwj;\\ud83d\\udc66',\n  'family_woman_woman_girl_girl':'\\ud83d\\udc69&zwj;\\ud83d\\udc69&zwj;\\ud83d\\udc67&zwj;\\ud83d\\udc67',\n  'fast_forward':'\\u23e9',\n  'fax':'\\ud83d\\udce0',\n  'fearful':'\\ud83d\\ude28',\n  'feet':'\\ud83d\\udc3e',\n  'female_detective':'\\ud83d\\udd75\\ufe0f&zwj;\\u2640\\ufe0f',\n  'ferris_wheel':'\\ud83c\\udfa1',\n  'ferry':'\\u26f4',\n  'field_hockey':'\\ud83c\\udfd1',\n  'file_cabinet':'\\ud83d\\uddc4',\n  'file_folder':'\\ud83d\\udcc1',\n  'film_projector':'\\ud83d\\udcfd',\n  'film_strip':'\\ud83c\\udf9e',\n  'fire':'\\ud83d\\udd25',\n  'fire_engine':'\\ud83d\\ude92',\n  'fireworks':'\\ud83c\\udf86',\n  'first_quarter_moon':'\\ud83c\\udf13',\n  'first_quarter_moon_with_face':'\\ud83c\\udf1b',\n  'fish':'\\ud83d\\udc1f',\n  'fish_cake':'\\ud83c\\udf65',\n  'fishing_pole_and_fish':'\\ud83c\\udfa3',\n  'fist_raised':'\\u270a',\n  'fist_left':'\\ud83e\\udd1b',\n  'fist_right':'\\ud83e\\udd1c',\n  'flags':'\\ud83c\\udf8f',\n  'flashlight':'\\ud83d\\udd26',\n  'fleur_de_lis':'\\u269c\\ufe0f',\n  'flight_arrival':'\\ud83d\\udeec',\n  'flight_departure':'\\ud83d\\udeeb',\n  'floppy_disk':'\\ud83d\\udcbe',\n  'flower_playing_cards':'\\ud83c\\udfb4',\n  'flushed':'\\ud83d\\ude33',\n  'fog':'\\ud83c\\udf2b',\n  'foggy':'\\ud83c\\udf01',\n  'football':'\\ud83c\\udfc8',\n  'footprints':'\\ud83d\\udc63',\n  'fork_and_knife':'\\ud83c\\udf74',\n  'fountain':'\\u26f2\\ufe0f',\n  'fountain_pen':'\\ud83d\\udd8b',\n  'four_leaf_clover':'\\ud83c\\udf40',\n  'fox_face':'\\ud83e\\udd8a',\n  'framed_picture':'\\ud83d\\uddbc',\n  'free':'\\ud83c\\udd93',\n  'fried_egg':'\\ud83c\\udf73',\n  'fried_shrimp':'\\ud83c\\udf64',\n  'fries':'\\ud83c\\udf5f',\n  'frog':'\\ud83d\\udc38',\n  'frowning':'\\ud83d\\ude26',\n  'frowning_face':'\\u2639\\ufe0f',\n  'frowning_man':'\\ud83d\\ude4d&zwj;\\u2642\\ufe0f',\n  'frowning_woman':'\\ud83d\\ude4d',\n  'middle_finger':'\\ud83d\\udd95',\n  'fuelpump':'\\u26fd\\ufe0f',\n  'full_moon':'\\ud83c\\udf15',\n  'full_moon_with_face':'\\ud83c\\udf1d',\n  'funeral_urn':'\\u26b1\\ufe0f',\n  'game_die':'\\ud83c\\udfb2',\n  'gear':'\\u2699\\ufe0f',\n  'gem':'\\ud83d\\udc8e',\n  'gemini':'\\u264a\\ufe0f',\n  'ghost':'\\ud83d\\udc7b',\n  'gift':'\\ud83c\\udf81',\n  'gift_heart':'\\ud83d\\udc9d',\n  'girl':'\\ud83d\\udc67',\n  'globe_with_meridians':'\\ud83c\\udf10',\n  'goal_net':'\\ud83e\\udd45',\n  'goat':'\\ud83d\\udc10',\n  'golf':'\\u26f3\\ufe0f',\n  'golfing_man':'\\ud83c\\udfcc\\ufe0f',\n  'golfing_woman':'\\ud83c\\udfcc\\ufe0f&zwj;\\u2640\\ufe0f',\n  'gorilla':'\\ud83e\\udd8d',\n  'grapes':'\\ud83c\\udf47',\n  'green_apple':'\\ud83c\\udf4f',\n  'green_book':'\\ud83d\\udcd7',\n  'green_heart':'\\ud83d\\udc9a',\n  'green_salad':'\\ud83e\\udd57',\n  'grey_exclamation':'\\u2755',\n  'grey_question':'\\u2754',\n  'grimacing':'\\ud83d\\ude2c',\n  'grin':'\\ud83d\\ude01',\n  'grinning':'\\ud83d\\ude00',\n  'guardsman':'\\ud83d\\udc82',\n  'guardswoman':'\\ud83d\\udc82&zwj;\\u2640\\ufe0f',\n  'guitar':'\\ud83c\\udfb8',\n  'gun':'\\ud83d\\udd2b',\n  'haircut_woman':'\\ud83d\\udc87',\n  'haircut_man':'\\ud83d\\udc87&zwj;\\u2642\\ufe0f',\n  'hamburger':'\\ud83c\\udf54',\n  'hammer':'\\ud83d\\udd28',\n  'hammer_and_pick':'\\u2692',\n  'hammer_and_wrench':'\\ud83d\\udee0',\n  'hamster':'\\ud83d\\udc39',\n  'hand':'\\u270b',\n  'handbag':'\\ud83d\\udc5c',\n  'handshake':'\\ud83e\\udd1d',\n  'hankey':'\\ud83d\\udca9',\n  'hatched_chick':'\\ud83d\\udc25',\n  'hatching_chick':'\\ud83d\\udc23',\n  'headphones':'\\ud83c\\udfa7',\n  'hear_no_evil':'\\ud83d\\ude49',\n  'heart':'\\u2764\\ufe0f',\n  'heart_decoration':'\\ud83d\\udc9f',\n  'heart_eyes':'\\ud83d\\ude0d',\n  'heart_eyes_cat':'\\ud83d\\ude3b',\n  'heartbeat':'\\ud83d\\udc93',\n  'heartpulse':'\\ud83d\\udc97',\n  'hearts':'\\u2665\\ufe0f',\n  'heavy_check_mark':'\\u2714\\ufe0f',\n  'heavy_division_sign':'\\u2797',\n  'heavy_dollar_sign':'\\ud83d\\udcb2',\n  'heavy_heart_exclamation':'\\u2763\\ufe0f',\n  'heavy_minus_sign':'\\u2796',\n  'heavy_multiplication_x':'\\u2716\\ufe0f',\n  'heavy_plus_sign':'\\u2795',\n  'helicopter':'\\ud83d\\ude81',\n  'herb':'\\ud83c\\udf3f',\n  'hibiscus':'\\ud83c\\udf3a',\n  'high_brightness':'\\ud83d\\udd06',\n  'high_heel':'\\ud83d\\udc60',\n  'hocho':'\\ud83d\\udd2a',\n  'hole':'\\ud83d\\udd73',\n  'honey_pot':'\\ud83c\\udf6f',\n  'horse':'\\ud83d\\udc34',\n  'horse_racing':'\\ud83c\\udfc7',\n  'hospital':'\\ud83c\\udfe5',\n  'hot_pepper':'\\ud83c\\udf36',\n  'hotdog':'\\ud83c\\udf2d',\n  'hotel':'\\ud83c\\udfe8',\n  'hotsprings':'\\u2668\\ufe0f',\n  'hourglass':'\\u231b\\ufe0f',\n  'hourglass_flowing_sand':'\\u23f3',\n  'house':'\\ud83c\\udfe0',\n  'house_with_garden':'\\ud83c\\udfe1',\n  'houses':'\\ud83c\\udfd8',\n  'hugs':'\\ud83e\\udd17',\n  'hushed':'\\ud83d\\ude2f',\n  'ice_cream':'\\ud83c\\udf68',\n  'ice_hockey':'\\ud83c\\udfd2',\n  'ice_skate':'\\u26f8',\n  'icecream':'\\ud83c\\udf66',\n  'id':'\\ud83c\\udd94',\n  'ideograph_advantage':'\\ud83c\\ude50',\n  'imp':'\\ud83d\\udc7f',\n  'inbox_tray':'\\ud83d\\udce5',\n  'incoming_envelope':'\\ud83d\\udce8',\n  'tipping_hand_woman':'\\ud83d\\udc81',\n  'information_source':'\\u2139\\ufe0f',\n  'innocent':'\\ud83d\\ude07',\n  'interrobang':'\\u2049\\ufe0f',\n  'iphone':'\\ud83d\\udcf1',\n  'izakaya_lantern':'\\ud83c\\udfee',\n  'jack_o_lantern':'\\ud83c\\udf83',\n  'japan':'\\ud83d\\uddfe',\n  'japanese_castle':'\\ud83c\\udfef',\n  'japanese_goblin':'\\ud83d\\udc7a',\n  'japanese_ogre':'\\ud83d\\udc79',\n  'jeans':'\\ud83d\\udc56',\n  'joy':'\\ud83d\\ude02',\n  'joy_cat':'\\ud83d\\ude39',\n  'joystick':'\\ud83d\\udd79',\n  'kaaba':'\\ud83d\\udd4b',\n  'key':'\\ud83d\\udd11',\n  'keyboard':'\\u2328\\ufe0f',\n  'keycap_ten':'\\ud83d\\udd1f',\n  'kick_scooter':'\\ud83d\\udef4',\n  'kimono':'\\ud83d\\udc58',\n  'kiss':'\\ud83d\\udc8b',\n  'kissing':'\\ud83d\\ude17',\n  'kissing_cat':'\\ud83d\\ude3d',\n  'kissing_closed_eyes':'\\ud83d\\ude1a',\n  'kissing_heart':'\\ud83d\\ude18',\n  'kissing_smiling_eyes':'\\ud83d\\ude19',\n  'kiwi_fruit':'\\ud83e\\udd5d',\n  'koala':'\\ud83d\\udc28',\n  'koko':'\\ud83c\\ude01',\n  'label':'\\ud83c\\udff7',\n  'large_blue_circle':'\\ud83d\\udd35',\n  'large_blue_diamond':'\\ud83d\\udd37',\n  'large_orange_diamond':'\\ud83d\\udd36',\n  'last_quarter_moon':'\\ud83c\\udf17',\n  'last_quarter_moon_with_face':'\\ud83c\\udf1c',\n  'latin_cross':'\\u271d\\ufe0f',\n  'laughing':'\\ud83d\\ude06',\n  'leaves':'\\ud83c\\udf43',\n  'ledger':'\\ud83d\\udcd2',\n  'left_luggage':'\\ud83d\\udec5',\n  'left_right_arrow':'\\u2194\\ufe0f',\n  'leftwards_arrow_with_hook':'\\u21a9\\ufe0f',\n  'lemon':'\\ud83c\\udf4b',\n  'leo':'\\u264c\\ufe0f',\n  'leopard':'\\ud83d\\udc06',\n  'level_slider':'\\ud83c\\udf9a',\n  'libra':'\\u264e\\ufe0f',\n  'light_rail':'\\ud83d\\ude88',\n  'link':'\\ud83d\\udd17',\n  'lion':'\\ud83e\\udd81',\n  'lips':'\\ud83d\\udc44',\n  'lipstick':'\\ud83d\\udc84',\n  'lizard':'\\ud83e\\udd8e',\n  'lock':'\\ud83d\\udd12',\n  'lock_with_ink_pen':'\\ud83d\\udd0f',\n  'lollipop':'\\ud83c\\udf6d',\n  'loop':'\\u27bf',\n  'loud_sound':'\\ud83d\\udd0a',\n  'loudspeaker':'\\ud83d\\udce2',\n  'love_hotel':'\\ud83c\\udfe9',\n  'love_letter':'\\ud83d\\udc8c',\n  'low_brightness':'\\ud83d\\udd05',\n  'lying_face':'\\ud83e\\udd25',\n  'm':'\\u24c2\\ufe0f',\n  'mag':'\\ud83d\\udd0d',\n  'mag_right':'\\ud83d\\udd0e',\n  'mahjong':'\\ud83c\\udc04\\ufe0f',\n  'mailbox':'\\ud83d\\udceb',\n  'mailbox_closed':'\\ud83d\\udcea',\n  'mailbox_with_mail':'\\ud83d\\udcec',\n  'mailbox_with_no_mail':'\\ud83d\\udced',\n  'man':'\\ud83d\\udc68',\n  'man_artist':'\\ud83d\\udc68&zwj;\\ud83c\\udfa8',\n  'man_astronaut':'\\ud83d\\udc68&zwj;\\ud83d\\ude80',\n  'man_cartwheeling':'\\ud83e\\udd38&zwj;\\u2642\\ufe0f',\n  'man_cook':'\\ud83d\\udc68&zwj;\\ud83c\\udf73',\n  'man_dancing':'\\ud83d\\udd7a',\n  'man_facepalming':'\\ud83e\\udd26&zwj;\\u2642\\ufe0f',\n  'man_factory_worker':'\\ud83d\\udc68&zwj;\\ud83c\\udfed',\n  'man_farmer':'\\ud83d\\udc68&zwj;\\ud83c\\udf3e',\n  'man_firefighter':'\\ud83d\\udc68&zwj;\\ud83d\\ude92',\n  'man_health_worker':'\\ud83d\\udc68&zwj;\\u2695\\ufe0f',\n  'man_in_tuxedo':'\\ud83e\\udd35',\n  'man_judge':'\\ud83d\\udc68&zwj;\\u2696\\ufe0f',\n  'man_juggling':'\\ud83e\\udd39&zwj;\\u2642\\ufe0f',\n  'man_mechanic':'\\ud83d\\udc68&zwj;\\ud83d\\udd27',\n  'man_office_worker':'\\ud83d\\udc68&zwj;\\ud83d\\udcbc',\n  'man_pilot':'\\ud83d\\udc68&zwj;\\u2708\\ufe0f',\n  'man_playing_handball':'\\ud83e\\udd3e&zwj;\\u2642\\ufe0f',\n  'man_playing_water_polo':'\\ud83e\\udd3d&zwj;\\u2642\\ufe0f',\n  'man_scientist':'\\ud83d\\udc68&zwj;\\ud83d\\udd2c',\n  'man_shrugging':'\\ud83e\\udd37&zwj;\\u2642\\ufe0f',\n  'man_singer':'\\ud83d\\udc68&zwj;\\ud83c\\udfa4',\n  'man_student':'\\ud83d\\udc68&zwj;\\ud83c\\udf93',\n  'man_teacher':'\\ud83d\\udc68&zwj;\\ud83c\\udfeb',\n  'man_technologist':'\\ud83d\\udc68&zwj;\\ud83d\\udcbb',\n  'man_with_gua_pi_mao':'\\ud83d\\udc72',\n  'man_with_turban':'\\ud83d\\udc73',\n  'tangerine':'\\ud83c\\udf4a',\n  'mans_shoe':'\\ud83d\\udc5e',\n  'mantelpiece_clock':'\\ud83d\\udd70',\n  'maple_leaf':'\\ud83c\\udf41',\n  'martial_arts_uniform':'\\ud83e\\udd4b',\n  'mask':'\\ud83d\\ude37',\n  'massage_woman':'\\ud83d\\udc86',\n  'massage_man':'\\ud83d\\udc86&zwj;\\u2642\\ufe0f',\n  'meat_on_bone':'\\ud83c\\udf56',\n  'medal_military':'\\ud83c\\udf96',\n  'medal_sports':'\\ud83c\\udfc5',\n  'mega':'\\ud83d\\udce3',\n  'melon':'\\ud83c\\udf48',\n  'memo':'\\ud83d\\udcdd',\n  'men_wrestling':'\\ud83e\\udd3c&zwj;\\u2642\\ufe0f',\n  'menorah':'\\ud83d\\udd4e',\n  'mens':'\\ud83d\\udeb9',\n  'metal':'\\ud83e\\udd18',\n  'metro':'\\ud83d\\ude87',\n  'microphone':'\\ud83c\\udfa4',\n  'microscope':'\\ud83d\\udd2c',\n  'milk_glass':'\\ud83e\\udd5b',\n  'milky_way':'\\ud83c\\udf0c',\n  'minibus':'\\ud83d\\ude90',\n  'minidisc':'\\ud83d\\udcbd',\n  'mobile_phone_off':'\\ud83d\\udcf4',\n  'money_mouth_face':'\\ud83e\\udd11',\n  'money_with_wings':'\\ud83d\\udcb8',\n  'moneybag':'\\ud83d\\udcb0',\n  'monkey':'\\ud83d\\udc12',\n  'monkey_face':'\\ud83d\\udc35',\n  'monorail':'\\ud83d\\ude9d',\n  'moon':'\\ud83c\\udf14',\n  'mortar_board':'\\ud83c\\udf93',\n  'mosque':'\\ud83d\\udd4c',\n  'motor_boat':'\\ud83d\\udee5',\n  'motor_scooter':'\\ud83d\\udef5',\n  'motorcycle':'\\ud83c\\udfcd',\n  'motorway':'\\ud83d\\udee3',\n  'mount_fuji':'\\ud83d\\uddfb',\n  'mountain':'\\u26f0',\n  'mountain_biking_man':'\\ud83d\\udeb5',\n  'mountain_biking_woman':'\\ud83d\\udeb5&zwj;\\u2640\\ufe0f',\n  'mountain_cableway':'\\ud83d\\udea0',\n  'mountain_railway':'\\ud83d\\ude9e',\n  'mountain_snow':'\\ud83c\\udfd4',\n  'mouse':'\\ud83d\\udc2d',\n  'mouse2':'\\ud83d\\udc01',\n  'movie_camera':'\\ud83c\\udfa5',\n  'moyai':'\\ud83d\\uddff',\n  'mrs_claus':'\\ud83e\\udd36',\n  'muscle':'\\ud83d\\udcaa',\n  'mushroom':'\\ud83c\\udf44',\n  'musical_keyboard':'\\ud83c\\udfb9',\n  'musical_note':'\\ud83c\\udfb5',\n  'musical_score':'\\ud83c\\udfbc',\n  'mute':'\\ud83d\\udd07',\n  'nail_care':'\\ud83d\\udc85',\n  'name_badge':'\\ud83d\\udcdb',\n  'national_park':'\\ud83c\\udfde',\n  'nauseated_face':'\\ud83e\\udd22',\n  'necktie':'\\ud83d\\udc54',\n  'negative_squared_cross_mark':'\\u274e',\n  'nerd_face':'\\ud83e\\udd13',\n  'neutral_face':'\\ud83d\\ude10',\n  'new':'\\ud83c\\udd95',\n  'new_moon':'\\ud83c\\udf11',\n  'new_moon_with_face':'\\ud83c\\udf1a',\n  'newspaper':'\\ud83d\\udcf0',\n  'newspaper_roll':'\\ud83d\\uddde',\n  'next_track_button':'\\u23ed',\n  'ng':'\\ud83c\\udd96',\n  'no_good_man':'\\ud83d\\ude45&zwj;\\u2642\\ufe0f',\n  'no_good_woman':'\\ud83d\\ude45',\n  'night_with_stars':'\\ud83c\\udf03',\n  'no_bell':'\\ud83d\\udd15',\n  'no_bicycles':'\\ud83d\\udeb3',\n  'no_entry':'\\u26d4\\ufe0f',\n  'no_entry_sign':'\\ud83d\\udeab',\n  'no_mobile_phones':'\\ud83d\\udcf5',\n  'no_mouth':'\\ud83d\\ude36',\n  'no_pedestrians':'\\ud83d\\udeb7',\n  'no_smoking':'\\ud83d\\udead',\n  'non-potable_water':'\\ud83d\\udeb1',\n  'nose':'\\ud83d\\udc43',\n  'notebook':'\\ud83d\\udcd3',\n  'notebook_with_decorative_cover':'\\ud83d\\udcd4',\n  'notes':'\\ud83c\\udfb6',\n  'nut_and_bolt':'\\ud83d\\udd29',\n  'o':'\\u2b55\\ufe0f',\n  'o2':'\\ud83c\\udd7e\\ufe0f',\n  'ocean':'\\ud83c\\udf0a',\n  'octopus':'\\ud83d\\udc19',\n  'oden':'\\ud83c\\udf62',\n  'office':'\\ud83c\\udfe2',\n  'oil_drum':'\\ud83d\\udee2',\n  'ok':'\\ud83c\\udd97',\n  'ok_hand':'\\ud83d\\udc4c',\n  'ok_man':'\\ud83d\\ude46&zwj;\\u2642\\ufe0f',\n  'ok_woman':'\\ud83d\\ude46',\n  'old_key':'\\ud83d\\udddd',\n  'older_man':'\\ud83d\\udc74',\n  'older_woman':'\\ud83d\\udc75',\n  'om':'\\ud83d\\udd49',\n  'on':'\\ud83d\\udd1b',\n  'oncoming_automobile':'\\ud83d\\ude98',\n  'oncoming_bus':'\\ud83d\\ude8d',\n  'oncoming_police_car':'\\ud83d\\ude94',\n  'oncoming_taxi':'\\ud83d\\ude96',\n  'open_file_folder':'\\ud83d\\udcc2',\n  'open_hands':'\\ud83d\\udc50',\n  'open_mouth':'\\ud83d\\ude2e',\n  'open_umbrella':'\\u2602\\ufe0f',\n  'ophiuchus':'\\u26ce',\n  'orange_book':'\\ud83d\\udcd9',\n  'orthodox_cross':'\\u2626\\ufe0f',\n  'outbox_tray':'\\ud83d\\udce4',\n  'owl':'\\ud83e\\udd89',\n  'ox':'\\ud83d\\udc02',\n  'package':'\\ud83d\\udce6',\n  'page_facing_up':'\\ud83d\\udcc4',\n  'page_with_curl':'\\ud83d\\udcc3',\n  'pager':'\\ud83d\\udcdf',\n  'paintbrush':'\\ud83d\\udd8c',\n  'palm_tree':'\\ud83c\\udf34',\n  'pancakes':'\\ud83e\\udd5e',\n  'panda_face':'\\ud83d\\udc3c',\n  'paperclip':'\\ud83d\\udcce',\n  'paperclips':'\\ud83d\\udd87',\n  'parasol_on_ground':'\\u26f1',\n  'parking':'\\ud83c\\udd7f\\ufe0f',\n  'part_alternation_mark':'\\u303d\\ufe0f',\n  'partly_sunny':'\\u26c5\\ufe0f',\n  'passenger_ship':'\\ud83d\\udef3',\n  'passport_control':'\\ud83d\\udec2',\n  'pause_button':'\\u23f8',\n  'peace_symbol':'\\u262e\\ufe0f',\n  'peach':'\\ud83c\\udf51',\n  'peanuts':'\\ud83e\\udd5c',\n  'pear':'\\ud83c\\udf50',\n  'pen':'\\ud83d\\udd8a',\n  'pencil2':'\\u270f\\ufe0f',\n  'penguin':'\\ud83d\\udc27',\n  'pensive':'\\ud83d\\ude14',\n  'performing_arts':'\\ud83c\\udfad',\n  'persevere':'\\ud83d\\ude23',\n  'person_fencing':'\\ud83e\\udd3a',\n  'pouting_woman':'\\ud83d\\ude4e',\n  'phone':'\\u260e\\ufe0f',\n  'pick':'\\u26cf',\n  'pig':'\\ud83d\\udc37',\n  'pig2':'\\ud83d\\udc16',\n  'pig_nose':'\\ud83d\\udc3d',\n  'pill':'\\ud83d\\udc8a',\n  'pineapple':'\\ud83c\\udf4d',\n  'ping_pong':'\\ud83c\\udfd3',\n  'pisces':'\\u2653\\ufe0f',\n  'pizza':'\\ud83c\\udf55',\n  'place_of_worship':'\\ud83d\\uded0',\n  'plate_with_cutlery':'\\ud83c\\udf7d',\n  'play_or_pause_button':'\\u23ef',\n  'point_down':'\\ud83d\\udc47',\n  'point_left':'\\ud83d\\udc48',\n  'point_right':'\\ud83d\\udc49',\n  'point_up':'\\u261d\\ufe0f',\n  'point_up_2':'\\ud83d\\udc46',\n  'police_car':'\\ud83d\\ude93',\n  'policewoman':'\\ud83d\\udc6e&zwj;\\u2640\\ufe0f',\n  'poodle':'\\ud83d\\udc29',\n  'popcorn':'\\ud83c\\udf7f',\n  'post_office':'\\ud83c\\udfe3',\n  'postal_horn':'\\ud83d\\udcef',\n  'postbox':'\\ud83d\\udcee',\n  'potable_water':'\\ud83d\\udeb0',\n  'potato':'\\ud83e\\udd54',\n  'pouch':'\\ud83d\\udc5d',\n  'poultry_leg':'\\ud83c\\udf57',\n  'pound':'\\ud83d\\udcb7',\n  'rage':'\\ud83d\\ude21',\n  'pouting_cat':'\\ud83d\\ude3e',\n  'pouting_man':'\\ud83d\\ude4e&zwj;\\u2642\\ufe0f',\n  'pray':'\\ud83d\\ude4f',\n  'prayer_beads':'\\ud83d\\udcff',\n  'pregnant_woman':'\\ud83e\\udd30',\n  'previous_track_button':'\\u23ee',\n  'prince':'\\ud83e\\udd34',\n  'princess':'\\ud83d\\udc78',\n  'printer':'\\ud83d\\udda8',\n  'purple_heart':'\\ud83d\\udc9c',\n  'purse':'\\ud83d\\udc5b',\n  'pushpin':'\\ud83d\\udccc',\n  'put_litter_in_its_place':'\\ud83d\\udeae',\n  'question':'\\u2753',\n  'rabbit':'\\ud83d\\udc30',\n  'rabbit2':'\\ud83d\\udc07',\n  'racehorse':'\\ud83d\\udc0e',\n  'racing_car':'\\ud83c\\udfce',\n  'radio':'\\ud83d\\udcfb',\n  'radio_button':'\\ud83d\\udd18',\n  'radioactive':'\\u2622\\ufe0f',\n  'railway_car':'\\ud83d\\ude83',\n  'railway_track':'\\ud83d\\udee4',\n  'rainbow':'\\ud83c\\udf08',\n  'rainbow_flag':'\\ud83c\\udff3\\ufe0f&zwj;\\ud83c\\udf08',\n  'raised_back_of_hand':'\\ud83e\\udd1a',\n  'raised_hand_with_fingers_splayed':'\\ud83d\\udd90',\n  'raised_hands':'\\ud83d\\ude4c',\n  'raising_hand_woman':'\\ud83d\\ude4b',\n  'raising_hand_man':'\\ud83d\\ude4b&zwj;\\u2642\\ufe0f',\n  'ram':'\\ud83d\\udc0f',\n  'ramen':'\\ud83c\\udf5c',\n  'rat':'\\ud83d\\udc00',\n  'record_button':'\\u23fa',\n  'recycle':'\\u267b\\ufe0f',\n  'red_circle':'\\ud83d\\udd34',\n  'registered':'\\u00ae\\ufe0f',\n  'relaxed':'\\u263a\\ufe0f',\n  'relieved':'\\ud83d\\ude0c',\n  'reminder_ribbon':'\\ud83c\\udf97',\n  'repeat':'\\ud83d\\udd01',\n  'repeat_one':'\\ud83d\\udd02',\n  'rescue_worker_helmet':'\\u26d1',\n  'restroom':'\\ud83d\\udebb',\n  'revolving_hearts':'\\ud83d\\udc9e',\n  'rewind':'\\u23ea',\n  'rhinoceros':'\\ud83e\\udd8f',\n  'ribbon':'\\ud83c\\udf80',\n  'rice':'\\ud83c\\udf5a',\n  'rice_ball':'\\ud83c\\udf59',\n  'rice_cracker':'\\ud83c\\udf58',\n  'rice_scene':'\\ud83c\\udf91',\n  'right_anger_bubble':'\\ud83d\\uddef',\n  'ring':'\\ud83d\\udc8d',\n  'robot':'\\ud83e\\udd16',\n  'rocket':'\\ud83d\\ude80',\n  'rofl':'\\ud83e\\udd23',\n  'roll_eyes':'\\ud83d\\ude44',\n  'roller_coaster':'\\ud83c\\udfa2',\n  'rooster':'\\ud83d\\udc13',\n  'rose':'\\ud83c\\udf39',\n  'rosette':'\\ud83c\\udff5',\n  'rotating_light':'\\ud83d\\udea8',\n  'round_pushpin':'\\ud83d\\udccd',\n  'rowing_man':'\\ud83d\\udea3',\n  'rowing_woman':'\\ud83d\\udea3&zwj;\\u2640\\ufe0f',\n  'rugby_football':'\\ud83c\\udfc9',\n  'running_man':'\\ud83c\\udfc3',\n  'running_shirt_with_sash':'\\ud83c\\udfbd',\n  'running_woman':'\\ud83c\\udfc3&zwj;\\u2640\\ufe0f',\n  'sa':'\\ud83c\\ude02\\ufe0f',\n  'sagittarius':'\\u2650\\ufe0f',\n  'sake':'\\ud83c\\udf76',\n  'sandal':'\\ud83d\\udc61',\n  'santa':'\\ud83c\\udf85',\n  'satellite':'\\ud83d\\udce1',\n  'saxophone':'\\ud83c\\udfb7',\n  'school':'\\ud83c\\udfeb',\n  'school_satchel':'\\ud83c\\udf92',\n  'scissors':'\\u2702\\ufe0f',\n  'scorpion':'\\ud83e\\udd82',\n  'scorpius':'\\u264f\\ufe0f',\n  'scream':'\\ud83d\\ude31',\n  'scream_cat':'\\ud83d\\ude40',\n  'scroll':'\\ud83d\\udcdc',\n  'seat':'\\ud83d\\udcba',\n  'secret':'\\u3299\\ufe0f',\n  'see_no_evil':'\\ud83d\\ude48',\n  'seedling':'\\ud83c\\udf31',\n  'selfie':'\\ud83e\\udd33',\n  'shallow_pan_of_food':'\\ud83e\\udd58',\n  'shamrock':'\\u2618\\ufe0f',\n  'shark':'\\ud83e\\udd88',\n  'shaved_ice':'\\ud83c\\udf67',\n  'sheep':'\\ud83d\\udc11',\n  'shell':'\\ud83d\\udc1a',\n  'shield':'\\ud83d\\udee1',\n  'shinto_shrine':'\\u26e9',\n  'ship':'\\ud83d\\udea2',\n  'shirt':'\\ud83d\\udc55',\n  'shopping':'\\ud83d\\udecd',\n  'shopping_cart':'\\ud83d\\uded2',\n  'shower':'\\ud83d\\udebf',\n  'shrimp':'\\ud83e\\udd90',\n  'signal_strength':'\\ud83d\\udcf6',\n  'six_pointed_star':'\\ud83d\\udd2f',\n  'ski':'\\ud83c\\udfbf',\n  'skier':'\\u26f7',\n  'skull':'\\ud83d\\udc80',\n  'skull_and_crossbones':'\\u2620\\ufe0f',\n  'sleeping':'\\ud83d\\ude34',\n  'sleeping_bed':'\\ud83d\\udecc',\n  'sleepy':'\\ud83d\\ude2a',\n  'slightly_frowning_face':'\\ud83d\\ude41',\n  'slightly_smiling_face':'\\ud83d\\ude42',\n  'slot_machine':'\\ud83c\\udfb0',\n  'small_airplane':'\\ud83d\\udee9',\n  'small_blue_diamond':'\\ud83d\\udd39',\n  'small_orange_diamond':'\\ud83d\\udd38',\n  'small_red_triangle':'\\ud83d\\udd3a',\n  'small_red_triangle_down':'\\ud83d\\udd3b',\n  'smile':'\\ud83d\\ude04',\n  'smile_cat':'\\ud83d\\ude38',\n  'smiley':'\\ud83d\\ude03',\n  'smiley_cat':'\\ud83d\\ude3a',\n  'smiling_imp':'\\ud83d\\ude08',\n  'smirk':'\\ud83d\\ude0f',\n  'smirk_cat':'\\ud83d\\ude3c',\n  'smoking':'\\ud83d\\udeac',\n  'snail':'\\ud83d\\udc0c',\n  'snake':'\\ud83d\\udc0d',\n  'sneezing_face':'\\ud83e\\udd27',\n  'snowboarder':'\\ud83c\\udfc2',\n  'snowflake':'\\u2744\\ufe0f',\n  'snowman':'\\u26c4\\ufe0f',\n  'snowman_with_snow':'\\u2603\\ufe0f',\n  'sob':'\\ud83d\\ude2d',\n  'soccer':'\\u26bd\\ufe0f',\n  'soon':'\\ud83d\\udd1c',\n  'sos':'\\ud83c\\udd98',\n  'sound':'\\ud83d\\udd09',\n  'space_invader':'\\ud83d\\udc7e',\n  'spades':'\\u2660\\ufe0f',\n  'spaghetti':'\\ud83c\\udf5d',\n  'sparkle':'\\u2747\\ufe0f',\n  'sparkler':'\\ud83c\\udf87',\n  'sparkles':'\\u2728',\n  'sparkling_heart':'\\ud83d\\udc96',\n  'speak_no_evil':'\\ud83d\\ude4a',\n  'speaker':'\\ud83d\\udd08',\n  'speaking_head':'\\ud83d\\udde3',\n  'speech_balloon':'\\ud83d\\udcac',\n  'speedboat':'\\ud83d\\udea4',\n  'spider':'\\ud83d\\udd77',\n  'spider_web':'\\ud83d\\udd78',\n  'spiral_calendar':'\\ud83d\\uddd3',\n  'spiral_notepad':'\\ud83d\\uddd2',\n  'spoon':'\\ud83e\\udd44',\n  'squid':'\\ud83e\\udd91',\n  'stadium':'\\ud83c\\udfdf',\n  'star':'\\u2b50\\ufe0f',\n  'star2':'\\ud83c\\udf1f',\n  'star_and_crescent':'\\u262a\\ufe0f',\n  'star_of_david':'\\u2721\\ufe0f',\n  'stars':'\\ud83c\\udf20',\n  'station':'\\ud83d\\ude89',\n  'statue_of_liberty':'\\ud83d\\uddfd',\n  'steam_locomotive':'\\ud83d\\ude82',\n  'stew':'\\ud83c\\udf72',\n  'stop_button':'\\u23f9',\n  'stop_sign':'\\ud83d\\uded1',\n  'stopwatch':'\\u23f1',\n  'straight_ruler':'\\ud83d\\udccf',\n  'strawberry':'\\ud83c\\udf53',\n  'stuck_out_tongue':'\\ud83d\\ude1b',\n  'stuck_out_tongue_closed_eyes':'\\ud83d\\ude1d',\n  'stuck_out_tongue_winking_eye':'\\ud83d\\ude1c',\n  'studio_microphone':'\\ud83c\\udf99',\n  'stuffed_flatbread':'\\ud83e\\udd59',\n  'sun_behind_large_cloud':'\\ud83c\\udf25',\n  'sun_behind_rain_cloud':'\\ud83c\\udf26',\n  'sun_behind_small_cloud':'\\ud83c\\udf24',\n  'sun_with_face':'\\ud83c\\udf1e',\n  'sunflower':'\\ud83c\\udf3b',\n  'sunglasses':'\\ud83d\\ude0e',\n  'sunny':'\\u2600\\ufe0f',\n  'sunrise':'\\ud83c\\udf05',\n  'sunrise_over_mountains':'\\ud83c\\udf04',\n  'surfing_man':'\\ud83c\\udfc4',\n  'surfing_woman':'\\ud83c\\udfc4&zwj;\\u2640\\ufe0f',\n  'sushi':'\\ud83c\\udf63',\n  'suspension_railway':'\\ud83d\\ude9f',\n  'sweat':'\\ud83d\\ude13',\n  'sweat_drops':'\\ud83d\\udca6',\n  'sweat_smile':'\\ud83d\\ude05',\n  'sweet_potato':'\\ud83c\\udf60',\n  'swimming_man':'\\ud83c\\udfca',\n  'swimming_woman':'\\ud83c\\udfca&zwj;\\u2640\\ufe0f',\n  'symbols':'\\ud83d\\udd23',\n  'synagogue':'\\ud83d\\udd4d',\n  'syringe':'\\ud83d\\udc89',\n  'taco':'\\ud83c\\udf2e',\n  'tada':'\\ud83c\\udf89',\n  'tanabata_tree':'\\ud83c\\udf8b',\n  'taurus':'\\u2649\\ufe0f',\n  'taxi':'\\ud83d\\ude95',\n  'tea':'\\ud83c\\udf75',\n  'telephone_receiver':'\\ud83d\\udcde',\n  'telescope':'\\ud83d\\udd2d',\n  'tennis':'\\ud83c\\udfbe',\n  'tent':'\\u26fa\\ufe0f',\n  'thermometer':'\\ud83c\\udf21',\n  'thinking':'\\ud83e\\udd14',\n  'thought_balloon':'\\ud83d\\udcad',\n  'ticket':'\\ud83c\\udfab',\n  'tickets':'\\ud83c\\udf9f',\n  'tiger':'\\ud83d\\udc2f',\n  'tiger2':'\\ud83d\\udc05',\n  'timer_clock':'\\u23f2',\n  'tipping_hand_man':'\\ud83d\\udc81&zwj;\\u2642\\ufe0f',\n  'tired_face':'\\ud83d\\ude2b',\n  'tm':'\\u2122\\ufe0f',\n  'toilet':'\\ud83d\\udebd',\n  'tokyo_tower':'\\ud83d\\uddfc',\n  'tomato':'\\ud83c\\udf45',\n  'tongue':'\\ud83d\\udc45',\n  'top':'\\ud83d\\udd1d',\n  'tophat':'\\ud83c\\udfa9',\n  'tornado':'\\ud83c\\udf2a',\n  'trackball':'\\ud83d\\uddb2',\n  'tractor':'\\ud83d\\ude9c',\n  'traffic_light':'\\ud83d\\udea5',\n  'train':'\\ud83d\\ude8b',\n  'train2':'\\ud83d\\ude86',\n  'tram':'\\ud83d\\ude8a',\n  'triangular_flag_on_post':'\\ud83d\\udea9',\n  'triangular_ruler':'\\ud83d\\udcd0',\n  'trident':'\\ud83d\\udd31',\n  'triumph':'\\ud83d\\ude24',\n  'trolleybus':'\\ud83d\\ude8e',\n  'trophy':'\\ud83c\\udfc6',\n  'tropical_drink':'\\ud83c\\udf79',\n  'tropical_fish':'\\ud83d\\udc20',\n  'truck':'\\ud83d\\ude9a',\n  'trumpet':'\\ud83c\\udfba',\n  'tulip':'\\ud83c\\udf37',\n  'tumbler_glass':'\\ud83e\\udd43',\n  'turkey':'\\ud83e\\udd83',\n  'turtle':'\\ud83d\\udc22',\n  'tv':'\\ud83d\\udcfa',\n  'twisted_rightwards_arrows':'\\ud83d\\udd00',\n  'two_hearts':'\\ud83d\\udc95',\n  'two_men_holding_hands':'\\ud83d\\udc6c',\n  'two_women_holding_hands':'\\ud83d\\udc6d',\n  'u5272':'\\ud83c\\ude39',\n  'u5408':'\\ud83c\\ude34',\n  'u55b6':'\\ud83c\\ude3a',\n  'u6307':'\\ud83c\\ude2f\\ufe0f',\n  'u6708':'\\ud83c\\ude37\\ufe0f',\n  'u6709':'\\ud83c\\ude36',\n  'u6e80':'\\ud83c\\ude35',\n  'u7121':'\\ud83c\\ude1a\\ufe0f',\n  'u7533':'\\ud83c\\ude38',\n  'u7981':'\\ud83c\\ude32',\n  'u7a7a':'\\ud83c\\ude33',\n  'umbrella':'\\u2614\\ufe0f',\n  'unamused':'\\ud83d\\ude12',\n  'underage':'\\ud83d\\udd1e',\n  'unicorn':'\\ud83e\\udd84',\n  'unlock':'\\ud83d\\udd13',\n  'up':'\\ud83c\\udd99',\n  'upside_down_face':'\\ud83d\\ude43',\n  'v':'\\u270c\\ufe0f',\n  'vertical_traffic_light':'\\ud83d\\udea6',\n  'vhs':'\\ud83d\\udcfc',\n  'vibration_mode':'\\ud83d\\udcf3',\n  'video_camera':'\\ud83d\\udcf9',\n  'video_game':'\\ud83c\\udfae',\n  'violin':'\\ud83c\\udfbb',\n  'virgo':'\\u264d\\ufe0f',\n  'volcano':'\\ud83c\\udf0b',\n  'volleyball':'\\ud83c\\udfd0',\n  'vs':'\\ud83c\\udd9a',\n  'vulcan_salute':'\\ud83d\\udd96',\n  'walking_man':'\\ud83d\\udeb6',\n  'walking_woman':'\\ud83d\\udeb6&zwj;\\u2640\\ufe0f',\n  'waning_crescent_moon':'\\ud83c\\udf18',\n  'waning_gibbous_moon':'\\ud83c\\udf16',\n  'warning':'\\u26a0\\ufe0f',\n  'wastebasket':'\\ud83d\\uddd1',\n  'watch':'\\u231a\\ufe0f',\n  'water_buffalo':'\\ud83d\\udc03',\n  'watermelon':'\\ud83c\\udf49',\n  'wave':'\\ud83d\\udc4b',\n  'wavy_dash':'\\u3030\\ufe0f',\n  'waxing_crescent_moon':'\\ud83c\\udf12',\n  'wc':'\\ud83d\\udebe',\n  'weary':'\\ud83d\\ude29',\n  'wedding':'\\ud83d\\udc92',\n  'weight_lifting_man':'\\ud83c\\udfcb\\ufe0f',\n  'weight_lifting_woman':'\\ud83c\\udfcb\\ufe0f&zwj;\\u2640\\ufe0f',\n  'whale':'\\ud83d\\udc33',\n  'whale2':'\\ud83d\\udc0b',\n  'wheel_of_dharma':'\\u2638\\ufe0f',\n  'wheelchair':'\\u267f\\ufe0f',\n  'white_check_mark':'\\u2705',\n  'white_circle':'\\u26aa\\ufe0f',\n  'white_flag':'\\ud83c\\udff3\\ufe0f',\n  'white_flower':'\\ud83d\\udcae',\n  'white_large_square':'\\u2b1c\\ufe0f',\n  'white_medium_small_square':'\\u25fd\\ufe0f',\n  'white_medium_square':'\\u25fb\\ufe0f',\n  'white_small_square':'\\u25ab\\ufe0f',\n  'white_square_button':'\\ud83d\\udd33',\n  'wilted_flower':'\\ud83e\\udd40',\n  'wind_chime':'\\ud83c\\udf90',\n  'wind_face':'\\ud83c\\udf2c',\n  'wine_glass':'\\ud83c\\udf77',\n  'wink':'\\ud83d\\ude09',\n  'wolf':'\\ud83d\\udc3a',\n  'woman':'\\ud83d\\udc69',\n  'woman_artist':'\\ud83d\\udc69&zwj;\\ud83c\\udfa8',\n  'woman_astronaut':'\\ud83d\\udc69&zwj;\\ud83d\\ude80',\n  'woman_cartwheeling':'\\ud83e\\udd38&zwj;\\u2640\\ufe0f',\n  'woman_cook':'\\ud83d\\udc69&zwj;\\ud83c\\udf73',\n  'woman_facepalming':'\\ud83e\\udd26&zwj;\\u2640\\ufe0f',\n  'woman_factory_worker':'\\ud83d\\udc69&zwj;\\ud83c\\udfed',\n  'woman_farmer':'\\ud83d\\udc69&zwj;\\ud83c\\udf3e',\n  'woman_firefighter':'\\ud83d\\udc69&zwj;\\ud83d\\ude92',\n  'woman_health_worker':'\\ud83d\\udc69&zwj;\\u2695\\ufe0f',\n  'woman_judge':'\\ud83d\\udc69&zwj;\\u2696\\ufe0f',\n  'woman_juggling':'\\ud83e\\udd39&zwj;\\u2640\\ufe0f',\n  'woman_mechanic':'\\ud83d\\udc69&zwj;\\ud83d\\udd27',\n  'woman_office_worker':'\\ud83d\\udc69&zwj;\\ud83d\\udcbc',\n  'woman_pilot':'\\ud83d\\udc69&zwj;\\u2708\\ufe0f',\n  'woman_playing_handball':'\\ud83e\\udd3e&zwj;\\u2640\\ufe0f',\n  'woman_playing_water_polo':'\\ud83e\\udd3d&zwj;\\u2640\\ufe0f',\n  'woman_scientist':'\\ud83d\\udc69&zwj;\\ud83d\\udd2c',\n  'woman_shrugging':'\\ud83e\\udd37&zwj;\\u2640\\ufe0f',\n  'woman_singer':'\\ud83d\\udc69&zwj;\\ud83c\\udfa4',\n  'woman_student':'\\ud83d\\udc69&zwj;\\ud83c\\udf93',\n  'woman_teacher':'\\ud83d\\udc69&zwj;\\ud83c\\udfeb',\n  'woman_technologist':'\\ud83d\\udc69&zwj;\\ud83d\\udcbb',\n  'woman_with_turban':'\\ud83d\\udc73&zwj;\\u2640\\ufe0f',\n  'womans_clothes':'\\ud83d\\udc5a',\n  'womans_hat':'\\ud83d\\udc52',\n  'women_wrestling':'\\ud83e\\udd3c&zwj;\\u2640\\ufe0f',\n  'womens':'\\ud83d\\udeba',\n  'world_map':'\\ud83d\\uddfa',\n  'worried':'\\ud83d\\ude1f',\n  'wrench':'\\ud83d\\udd27',\n  'writing_hand':'\\u270d\\ufe0f',\n  'x':'\\u274c',\n  'yellow_heart':'\\ud83d\\udc9b',\n  'yen':'\\ud83d\\udcb4',\n  'yin_yang':'\\u262f\\ufe0f',\n  'yum':'\\ud83d\\ude0b',\n  'zap':'\\u26a1\\ufe0f',\n  'zipper_mouth_face':'\\ud83e\\udd10',\n  'zzz':'\\ud83d\\udca4',\n\n  /* special emojis :P */\n  'octocat':  '<img alt=\":octocat:\" height=\"20\" width=\"20\" align=\"absmiddle\" src=\"https://assets-cdn.github.com/images/icons/emoji/octocat.png\">',\n  'showdown': '<span style=\"font-family: \\'Anonymous Pro\\', monospace; text-decoration: underline; text-decoration-style: dashed; text-decoration-color: #3e8b8a;text-underline-position: under;\">S</span>'\n};\n\r\n/**\n * Created by Estevao on 31-05-2015.\n */\n\n/**\n * Showdown Converter class\n * @class\n * @param {object} [converterOptions]\n * @returns {Converter}\n */\nshowdown.Converter = function (converterOptions) {\n  'use strict';\n\n  var\n      /**\n       * Options used by this converter\n       * @private\n       * @type {{}}\n       */\n      options = {},\n\n      /**\n       * Language extensions used by this converter\n       * @private\n       * @type {Array}\n       */\n      langExtensions = [],\n\n      /**\n       * Output modifiers extensions used by this converter\n       * @private\n       * @type {Array}\n       */\n      outputModifiers = [],\n\n      /**\n       * Event listeners\n       * @private\n       * @type {{}}\n       */\n      listeners = {},\n\n      /**\n       * The flavor set in this converter\n       */\n      setConvFlavor = setFlavor,\n\n    /**\n     * Metadata of the document\n     * @type {{parsed: {}, raw: string, format: string}}\n     */\n      metadata = {\n        parsed: {},\n        raw: '',\n        format: ''\n      };\n\n  _constructor();\n\n  /**\n   * Converter constructor\n   * @private\n   */\n  function _constructor () {\n    converterOptions = converterOptions || {};\n\n    for (var gOpt in globalOptions) {\n      if (globalOptions.hasOwnProperty(gOpt)) {\n        options[gOpt] = globalOptions[gOpt];\n      }\n    }\n\n    // Merge options\n    if (typeof converterOptions === 'object') {\n      for (var opt in converterOptions) {\n        if (converterOptions.hasOwnProperty(opt)) {\n          options[opt] = converterOptions[opt];\n        }\n      }\n    } else {\n      throw Error('Converter expects the passed parameter to be an object, but ' + typeof converterOptions +\n      ' was passed instead.');\n    }\n\n    if (options.extensions) {\n      showdown.helper.forEach(options.extensions, _parseExtension);\n    }\n  }\n\n  /**\n   * Parse extension\n   * @param {*} ext\n   * @param {string} [name='']\n   * @private\n   */\n  function _parseExtension (ext, name) {\n\n    name = name || null;\n    // If it's a string, the extension was previously loaded\n    if (showdown.helper.isString(ext)) {\n      ext = showdown.helper.stdExtName(ext);\n      name = ext;\n\n      // LEGACY_SUPPORT CODE\n      if (showdown.extensions[ext]) {\n        console.warn('DEPRECATION WARNING: ' + ext + ' is an old extension that uses a deprecated loading method.' +\n          'Please inform the developer that the extension should be updated!');\n        legacyExtensionLoading(showdown.extensions[ext], ext);\n        return;\n      // END LEGACY SUPPORT CODE\n\n      } else if (!showdown.helper.isUndefined(extensions[ext])) {\n        ext = extensions[ext];\n\n      } else {\n        throw Error('Extension \"' + ext + '\" could not be loaded. It was either not found or is not a valid extension.');\n      }\n    }\n\n    if (typeof ext === 'function') {\n      ext = ext();\n    }\n\n    if (!showdown.helper.isArray(ext)) {\n      ext = [ext];\n    }\n\n    var validExt = validate(ext, name);\n    if (!validExt.valid) {\n      throw Error(validExt.error);\n    }\n\n    for (var i = 0; i < ext.length; ++i) {\n      switch (ext[i].type) {\n\n        case 'lang':\n          langExtensions.push(ext[i]);\n          break;\n\n        case 'output':\n          outputModifiers.push(ext[i]);\n          break;\n      }\n      if (ext[i].hasOwnProperty('listeners')) {\n        for (var ln in ext[i].listeners) {\n          if (ext[i].listeners.hasOwnProperty(ln)) {\n            listen(ln, ext[i].listeners[ln]);\n          }\n        }\n      }\n    }\n\n  }\n\n  /**\n   * LEGACY_SUPPORT\n   * @param {*} ext\n   * @param {string} name\n   */\n  function legacyExtensionLoading (ext, name) {\n    if (typeof ext === 'function') {\n      ext = ext(new showdown.Converter());\n    }\n    if (!showdown.helper.isArray(ext)) {\n      ext = [ext];\n    }\n    var valid = validate(ext, name);\n\n    if (!valid.valid) {\n      throw Error(valid.error);\n    }\n\n    for (var i = 0; i < ext.length; ++i) {\n      switch (ext[i].type) {\n        case 'lang':\n          langExtensions.push(ext[i]);\n          break;\n        case 'output':\n          outputModifiers.push(ext[i]);\n          break;\n        default:// should never reach here\n          throw Error('Extension loader error: Type unrecognized!!!');\n      }\n    }\n  }\n\n  /**\n   * Listen to an event\n   * @param {string} name\n   * @param {function} callback\n   */\n  function listen (name, callback) {\n    if (!showdown.helper.isString(name)) {\n      throw Error('Invalid argument in converter.listen() method: name must be a string, but ' + typeof name + ' given');\n    }\n\n    if (typeof callback !== 'function') {\n      throw Error('Invalid argument in converter.listen() method: callback must be a function, but ' + typeof callback + ' given');\n    }\n\n    if (!listeners.hasOwnProperty(name)) {\n      listeners[name] = [];\n    }\n    listeners[name].push(callback);\n  }\n\n  function rTrimInputText (text) {\n    var rsp = text.match(/^\\s*/)[0].length,\n        rgx = new RegExp('^\\\\s{0,' + rsp + '}', 'gm');\n    return text.replace(rgx, '');\n  }\n\n  /**\n   * Dispatch an event\n   * @private\n   * @param {string} evtName Event name\n   * @param {string} text Text\n   * @param {{}} options Converter Options\n   * @param {{}} globals\n   * @returns {string}\n   */\n  this._dispatch = function dispatch (evtName, text, options, globals) {\n    if (listeners.hasOwnProperty(evtName)) {\n      for (var ei = 0; ei < listeners[evtName].length; ++ei) {\n        var nText = listeners[evtName][ei](evtName, text, this, options, globals);\n        if (nText && typeof nText !== 'undefined') {\n          text = nText;\n        }\n      }\n    }\n    return text;\n  };\n\n  /**\n   * Listen to an event\n   * @param {string} name\n   * @param {function} callback\n   * @returns {showdown.Converter}\n   */\n  this.listen = function (name, callback) {\n    listen(name, callback);\n    return this;\n  };\n\n  /**\n   * Converts a markdown string into HTML\n   * @param {string} text\n   * @returns {*}\n   */\n  this.makeHtml = function (text) {\n    //check if text is not falsy\n    if (!text) {\n      return text;\n    }\n\n    var globals = {\n      gHtmlBlocks:     [],\n      gHtmlMdBlocks:   [],\n      gHtmlSpans:      [],\n      gUrls:           {},\n      gTitles:         {},\n      gDimensions:     {},\n      gListLevel:      0,\n      hashLinkCounts:  {},\n      langExtensions:  langExtensions,\n      outputModifiers: outputModifiers,\n      converter:       this,\n      ghCodeBlocks:    [],\n      metadata: {\n        parsed: {},\n        raw: '',\n        format: ''\n      }\n    };\n\n    // This lets us use ¨ trema as an escape char to avoid md5 hashes\n    // The choice of character is arbitrary; anything that isn't\n    // magic in Markdown will work.\n    text = text.replace(/¨/g, '¨T');\n\n    // Replace $ with ¨D\n    // RegExp interprets $ as a special character\n    // when it's in a replacement string\n    text = text.replace(/\\$/g, '¨D');\n\n    // Standardize line endings\n    text = text.replace(/\\r\\n/g, '\\n'); // DOS to Unix\n    text = text.replace(/\\r/g, '\\n'); // Mac to Unix\n\n    // Stardardize line spaces\n    text = text.replace(/\\u00A0/g, '&nbsp;');\n\n    if (options.smartIndentationFix) {\n      text = rTrimInputText(text);\n    }\n\n    // Make sure text begins and ends with a couple of newlines:\n    text = '\\n\\n' + text + '\\n\\n';\n\n    // detab\n    text = showdown.subParser('detab')(text, options, globals);\n\n    /**\n     * Strip any lines consisting only of spaces and tabs.\n     * This makes subsequent regexs easier to write, because we can\n     * match consecutive blank lines with /\\n+/ instead of something\n     * contorted like /[ \\t]*\\n+/\n     */\n    text = text.replace(/^[ \\t]+$/mg, '');\n\n    //run languageExtensions\n    showdown.helper.forEach(langExtensions, function (ext) {\n      text = showdown.subParser('runExtension')(ext, text, options, globals);\n    });\n\n    // run the sub parsers\n    text = showdown.subParser('metadata')(text, options, globals);\n    text = showdown.subParser('hashPreCodeTags')(text, options, globals);\n    text = showdown.subParser('githubCodeBlocks')(text, options, globals);\n    text = showdown.subParser('hashHTMLBlocks')(text, options, globals);\n    text = showdown.subParser('hashCodeTags')(text, options, globals);\n    text = showdown.subParser('stripLinkDefinitions')(text, options, globals);\n    text = showdown.subParser('blockGamut')(text, options, globals);\n    text = showdown.subParser('unhashHTMLSpans')(text, options, globals);\n    text = showdown.subParser('unescapeSpecialChars')(text, options, globals);\n\n    // attacklab: Restore dollar signs\n    text = text.replace(/¨D/g, '$$');\n\n    // attacklab: Restore tremas\n    text = text.replace(/¨T/g, '¨');\n\n    // render a complete html document instead of a partial if the option is enabled\n    text = showdown.subParser('completeHTMLDocument')(text, options, globals);\n\n    // Run output modifiers\n    showdown.helper.forEach(outputModifiers, function (ext) {\n      text = showdown.subParser('runExtension')(ext, text, options, globals);\n    });\n\n    // update metadata\n    metadata = globals.metadata;\n    return text;\n  };\n\n  /**\n   * Converts an HTML string into a markdown string\n   * @param src\n   * @param [HTMLParser] A WHATWG DOM and HTML parser, such as JSDOM. If none is supplied, window.document will be used.\n   * @returns {string}\n   */\n  this.makeMarkdown = this.makeMd = function (src, HTMLParser) {\n\n    // replace \\r\\n with \\n\n    src = src.replace(/\\r\\n/g, '\\n');\n    src = src.replace(/\\r/g, '\\n'); // old macs\n\n    // due to an edge case, we need to find this: > <\n    // to prevent removing of non silent white spaces\n    // ex: <em>this is</em> <strong>sparta</strong>\n    src = src.replace(/>[ \\t]+</, '>¨NBSP;<');\n\n    if (!HTMLParser) {\n      if (window && window.document) {\n        HTMLParser = window.document;\n      } else {\n        throw new Error('HTMLParser is undefined. If in a webworker or nodejs environment, you need to provide a WHATWG DOM and HTML such as JSDOM');\n      }\n    }\n\n    var doc = HTMLParser.createElement('div');\n    doc.innerHTML = src;\n\n    var globals = {\n      preList: substitutePreCodeTags(doc)\n    };\n\n    // remove all newlines and collapse spaces\n    clean(doc);\n\n    // some stuff, like accidental reference links must now be escaped\n    // TODO\n    // doc.innerHTML = doc.innerHTML.replace(/\\[[\\S\\t ]]/);\n\n    var nodes = doc.childNodes,\n        mdDoc = '';\n\n    for (var i = 0; i < nodes.length; i++) {\n      mdDoc += showdown.subParser('makeMarkdown.node')(nodes[i], globals);\n    }\n\n    function clean (node) {\n      for (var n = 0; n < node.childNodes.length; ++n) {\n        var child = node.childNodes[n];\n        if (child.nodeType === 3) {\n          if (!/\\S/.test(child.nodeValue)) {\n            node.removeChild(child);\n            --n;\n          } else {\n            child.nodeValue = child.nodeValue.split('\\n').join(' ');\n            child.nodeValue = child.nodeValue.replace(/(\\s)+/g, '$1');\n          }\n        } else if (child.nodeType === 1) {\n          clean(child);\n        }\n      }\n    }\n\n    // find all pre tags and replace contents with placeholder\n    // we need this so that we can remove all indentation from html\n    // to ease up parsing\n    function substitutePreCodeTags (doc) {\n\n      var pres = doc.querySelectorAll('pre'),\n          presPH = [];\n\n      for (var i = 0; i < pres.length; ++i) {\n\n        if (pres[i].childElementCount === 1 && pres[i].firstChild.tagName.toLowerCase() === 'code') {\n          var content = pres[i].firstChild.innerHTML.trim(),\n              language = pres[i].firstChild.getAttribute('data-language') || '';\n\n          // if data-language attribute is not defined, then we look for class language-*\n          if (language === '') {\n            var classes = pres[i].firstChild.className.split(' ');\n            for (var c = 0; c < classes.length; ++c) {\n              var matches = classes[c].match(/^language-(.+)$/);\n              if (matches !== null) {\n                language = matches[1];\n                break;\n              }\n            }\n          }\n\n          // unescape html entities in content\n          content = showdown.helper.unescapeHTMLEntities(content);\n\n          presPH.push(content);\n          pres[i].outerHTML = '<precode language=\"' + language + '\" precodenum=\"' + i.toString() + '\"></precode>';\n        } else {\n          presPH.push(pres[i].innerHTML);\n          pres[i].innerHTML = '';\n          pres[i].setAttribute('prenum', i.toString());\n        }\n      }\n      return presPH;\n    }\n\n    return mdDoc;\n  };\n\n  /**\n   * Set an option of this Converter instance\n   * @param {string} key\n   * @param {*} value\n   */\n  this.setOption = function (key, value) {\n    options[key] = value;\n  };\n\n  /**\n   * Get the option of this Converter instance\n   * @param {string} key\n   * @returns {*}\n   */\n  this.getOption = function (key) {\n    return options[key];\n  };\n\n  /**\n   * Get the options of this Converter instance\n   * @returns {{}}\n   */\n  this.getOptions = function () {\n    return options;\n  };\n\n  /**\n   * Add extension to THIS converter\n   * @param {{}} extension\n   * @param {string} [name=null]\n   */\n  this.addExtension = function (extension, name) {\n    name = name || null;\n    _parseExtension(extension, name);\n  };\n\n  /**\n   * Use a global registered extension with THIS converter\n   * @param {string} extensionName Name of the previously registered extension\n   */\n  this.useExtension = function (extensionName) {\n    _parseExtension(extensionName);\n  };\n\n  /**\n   * Set the flavor THIS converter should use\n   * @param {string} name\n   */\n  this.setFlavor = function (name) {\n    if (!flavor.hasOwnProperty(name)) {\n      throw Error(name + ' flavor was not found');\n    }\n    var preset = flavor[name];\n    setConvFlavor = name;\n    for (var option in preset) {\n      if (preset.hasOwnProperty(option)) {\n        options[option] = preset[option];\n      }\n    }\n  };\n\n  /**\n   * Get the currently set flavor of this converter\n   * @returns {string}\n   */\n  this.getFlavor = function () {\n    return setConvFlavor;\n  };\n\n  /**\n   * Remove an extension from THIS converter.\n   * Note: This is a costly operation. It's better to initialize a new converter\n   * and specify the extensions you wish to use\n   * @param {Array} extension\n   */\n  this.removeExtension = function (extension) {\n    if (!showdown.helper.isArray(extension)) {\n      extension = [extension];\n    }\n    for (var a = 0; a < extension.length; ++a) {\n      var ext = extension[a];\n      for (var i = 0; i < langExtensions.length; ++i) {\n        if (langExtensions[i] === ext) {\n          langExtensions[i].splice(i, 1);\n        }\n      }\n      for (var ii = 0; ii < outputModifiers.length; ++i) {\n        if (outputModifiers[ii] === ext) {\n          outputModifiers[ii].splice(i, 1);\n        }\n      }\n    }\n  };\n\n  /**\n   * Get all extension of THIS converter\n   * @returns {{language: Array, output: Array}}\n   */\n  this.getAllExtensions = function () {\n    return {\n      language: langExtensions,\n      output: outputModifiers\n    };\n  };\n\n  /**\n   * Get the metadata of the previously parsed document\n   * @param raw\n   * @returns {string|{}}\n   */\n  this.getMetadata = function (raw) {\n    if (raw) {\n      return metadata.raw;\n    } else {\n      return metadata.parsed;\n    }\n  };\n\n  /**\n   * Get the metadata format of the previously parsed document\n   * @returns {string}\n   */\n  this.getMetadataFormat = function () {\n    return metadata.format;\n  };\n\n  /**\n   * Private: set a single key, value metadata pair\n   * @param {string} key\n   * @param {string} value\n   */\n  this._setMetadataPair = function (key, value) {\n    metadata.parsed[key] = value;\n  };\n\n  /**\n   * Private: set metadata format\n   * @param {string} format\n   */\n  this._setMetadataFormat = function (format) {\n    metadata.format = format;\n  };\n\n  /**\n   * Private: set metadata raw text\n   * @param {string} raw\n   */\n  this._setMetadataRaw = function (raw) {\n    metadata.raw = raw;\n  };\n};\n\r\n/**\n * Turn Markdown link shortcuts into XHTML <a> tags.\n */\nshowdown.subParser('anchors', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('anchors.before', text, options, globals);\n\n  var writeAnchorTag = function (wholeMatch, linkText, linkId, url, m5, m6, title) {\n    if (showdown.helper.isUndefined(title)) {\n      title = '';\n    }\n    linkId = linkId.toLowerCase();\n\n    // Special case for explicit empty url\n    if (wholeMatch.search(/\\(<?\\s*>? ?(['\"].*['\"])?\\)$/m) > -1) {\n      url = '';\n    } else if (!url) {\n      if (!linkId) {\n        // lower-case and turn embedded newlines into spaces\n        linkId = linkText.toLowerCase().replace(/ ?\\n/g, ' ');\n      }\n      url = '#' + linkId;\n\n      if (!showdown.helper.isUndefined(globals.gUrls[linkId])) {\n        url = globals.gUrls[linkId];\n        if (!showdown.helper.isUndefined(globals.gTitles[linkId])) {\n          title = globals.gTitles[linkId];\n        }\n      } else {\n        return wholeMatch;\n      }\n    }\n\n    //url = showdown.helper.escapeCharacters(url, '*_', false); // replaced line to improve performance\n    url = url.replace(showdown.helper.regexes.asteriskDashAndColon, showdown.helper.escapeCharactersCallback);\n\n    var result = '<a href=\"' + url + '\"';\n\n    if (title !== '' && title !== null) {\n      title = title.replace(/\"/g, '&quot;');\n      //title = showdown.helper.escapeCharacters(title, '*_', false); // replaced line to improve performance\n      title = title.replace(showdown.helper.regexes.asteriskDashAndColon, showdown.helper.escapeCharactersCallback);\n      result += ' title=\"' + title + '\"';\n    }\n\n    // optionLinksInNewWindow only applies\n    // to external links. Hash links (#) open in same page\n    if (options.openLinksInNewWindow && !/^#/.test(url)) {\n      // escaped _\n      result += ' target=\"¨E95Eblank\"';\n    }\n\n    result += '>' + linkText + '</a>';\n\n    return result;\n  };\n\n  // First, handle reference-style links: [link text] [id]\n  text = text.replace(/\\[((?:\\[[^\\]]*]|[^\\[\\]])*)] ?(?:\\n *)?\\[(.*?)]()()()()/g, writeAnchorTag);\n\n  // Next, inline-style links: [link text](url \"optional title\")\n  // cases with crazy urls like ./image/cat1).png\n  text = text.replace(/\\[((?:\\[[^\\]]*]|[^\\[\\]])*)]()[ \\t]*\\([ \\t]?<([^>]*)>(?:[ \\t]*(([\"'])([^\"]*?)\\5))?[ \\t]?\\)/g,\n    writeAnchorTag);\n\n  // normal cases\n  text = text.replace(/\\[((?:\\[[^\\]]*]|[^\\[\\]])*)]()[ \\t]*\\([ \\t]?<?([\\S]+?(?:\\([\\S]*?\\)[\\S]*?)?)>?(?:[ \\t]*(([\"'])([^\"]*?)\\5))?[ \\t]?\\)/g,\n                      writeAnchorTag);\n\n  // handle reference-style shortcuts: [link text]\n  // These must come last in case you've also got [link test][1]\n  // or [link test](/foo)\n  text = text.replace(/\\[([^\\[\\]]+)]()()()()()/g, writeAnchorTag);\n\n  // Lastly handle GithubMentions if option is enabled\n  if (options.ghMentions) {\n    text = text.replace(/(^|\\s)(\\\\)?(@([a-z\\d]+(?:[a-z\\d.-]+?[a-z\\d]+)*))/gmi, function (wm, st, escape, mentions, username) {\n      if (escape === '\\\\') {\n        return st + mentions;\n      }\n\n      //check if options.ghMentionsLink is a string\n      if (!showdown.helper.isString(options.ghMentionsLink)) {\n        throw new Error('ghMentionsLink option must be a string');\n      }\n      var lnk = options.ghMentionsLink.replace(/\\{u}/g, username),\n          target = '';\n      if (options.openLinksInNewWindow) {\n        target = ' target=\"¨E95Eblank\"';\n      }\n      return st + '<a href=\"' + lnk + '\"' + target + '>' + mentions + '</a>';\n    });\n  }\n\n  text = globals.converter._dispatch('anchors.after', text, options, globals);\n  return text;\n});\n\r\n// url allowed chars [a-z\\d_.~:/?#[]@!$&'()*+,;=-]\n\nvar simpleURLRegex  = /([*~_]+|\\b)(((https?|ftp|dict):\\/\\/|www\\.)[^'\">\\s]+?\\.[^'\">\\s]+?)()(\\1)?(?=\\s|$)(?![\"<>])/gi,\n    simpleURLRegex2 = /([*~_]+|\\b)(((https?|ftp|dict):\\/\\/|www\\.)[^'\">\\s]+\\.[^'\">\\s]+?)([.!?,()\\[\\]])?(\\1)?(?=\\s|$)(?![\"<>])/gi,\n    delimUrlRegex   = /()<(((https?|ftp|dict):\\/\\/|www\\.)[^'\">\\s]+)()>()/gi,\n    simpleMailRegex = /(^|\\s)(?:mailto:)?([A-Za-z0-9!#$%&'*+-/=?^_`{|}~.]+@[-a-z0-9]+(\\.[-a-z0-9]+)*\\.[a-z]+)(?=$|\\s)/gmi,\n    delimMailRegex  = /<()(?:mailto:)?([-.\\w]+@[-a-z0-9]+(\\.[-a-z0-9]+)*\\.[a-z]+)>/gi,\n\n    replaceLink = function (options) {\n      'use strict';\n      return function (wm, leadingMagicChars, link, m2, m3, trailingPunctuation, trailingMagicChars) {\n        link = link.replace(showdown.helper.regexes.asteriskDashAndColon, showdown.helper.escapeCharactersCallback);\n        var lnkTxt = link,\n            append = '',\n            target = '',\n            lmc    = leadingMagicChars || '',\n            tmc    = trailingMagicChars || '';\n        if (/^www\\./i.test(link)) {\n          link = link.replace(/^www\\./i, 'http://www.');\n        }\n        if (options.excludeTrailingPunctuationFromURLs && trailingPunctuation) {\n          append = trailingPunctuation;\n        }\n        if (options.openLinksInNewWindow) {\n          target = ' target=\"¨E95Eblank\"';\n        }\n        return lmc + '<a href=\"' + link + '\"' + target + '>' + lnkTxt + '</a>' + append + tmc;\n      };\n    },\n\n    replaceMail = function (options, globals) {\n      'use strict';\n      return function (wholeMatch, b, mail) {\n        var href = 'mailto:';\n        b = b || '';\n        mail = showdown.subParser('unescapeSpecialChars')(mail, options, globals);\n        if (options.encodeEmails) {\n          href = showdown.helper.encodeEmailAddress(href + mail);\n          mail = showdown.helper.encodeEmailAddress(mail);\n        } else {\n          href = href + mail;\n        }\n        return b + '<a href=\"' + href + '\">' + mail + '</a>';\n      };\n    };\n\nshowdown.subParser('autoLinks', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('autoLinks.before', text, options, globals);\n\n  text = text.replace(delimUrlRegex, replaceLink(options));\n  text = text.replace(delimMailRegex, replaceMail(options, globals));\n\n  text = globals.converter._dispatch('autoLinks.after', text, options, globals);\n\n  return text;\n});\n\nshowdown.subParser('simplifiedAutoLinks', function (text, options, globals) {\n  'use strict';\n\n  if (!options.simplifiedAutoLink) {\n    return text;\n  }\n\n  text = globals.converter._dispatch('simplifiedAutoLinks.before', text, options, globals);\n\n  if (options.excludeTrailingPunctuationFromURLs) {\n    text = text.replace(simpleURLRegex2, replaceLink(options));\n  } else {\n    text = text.replace(simpleURLRegex, replaceLink(options));\n  }\n  text = text.replace(simpleMailRegex, replaceMail(options, globals));\n\n  text = globals.converter._dispatch('simplifiedAutoLinks.after', text, options, globals);\n\n  return text;\n});\n\r\n/**\n * These are all the transformations that form block-level\n * tags like paragraphs, headers, and list items.\n */\nshowdown.subParser('blockGamut', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('blockGamut.before', text, options, globals);\n\n  // we parse blockquotes first so that we can have headings and hrs\n  // inside blockquotes\n  text = showdown.subParser('blockQuotes')(text, options, globals);\n  text = showdown.subParser('headers')(text, options, globals);\n\n  // Do Horizontal Rules:\n  text = showdown.subParser('horizontalRule')(text, options, globals);\n\n  text = showdown.subParser('lists')(text, options, globals);\n  text = showdown.subParser('codeBlocks')(text, options, globals);\n  text = showdown.subParser('tables')(text, options, globals);\n\n  // We already ran _HashHTMLBlocks() before, in Markdown(), but that\n  // was to escape raw HTML in the original Markdown source. This time,\n  // we're escaping the markup we've just created, so that we don't wrap\n  // <p> tags around block-level tags.\n  text = showdown.subParser('hashHTMLBlocks')(text, options, globals);\n  text = showdown.subParser('paragraphs')(text, options, globals);\n\n  text = globals.converter._dispatch('blockGamut.after', text, options, globals);\n\n  return text;\n});\n\r\nshowdown.subParser('blockQuotes', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('blockQuotes.before', text, options, globals);\n\n  // add a couple extra lines after the text and endtext mark\n  text = text + '\\n\\n';\n\n  var rgx = /(^ {0,3}>[ \\t]?.+\\n(.+\\n)*\\n*)+/gm;\n\n  if (options.splitAdjacentBlockquotes) {\n    rgx = /^ {0,3}>[\\s\\S]*?(?:\\n\\n)/gm;\n  }\n\n  text = text.replace(rgx, function (bq) {\n    // attacklab: hack around Konqueror 3.5.4 bug:\n    // \"----------bug\".replace(/^-/g,\"\") == \"bug\"\n    bq = bq.replace(/^[ \\t]*>[ \\t]?/gm, ''); // trim one level of quoting\n\n    // attacklab: clean up hack\n    bq = bq.replace(/¨0/g, '');\n\n    bq = bq.replace(/^[ \\t]+$/gm, ''); // trim whitespace-only lines\n    bq = showdown.subParser('githubCodeBlocks')(bq, options, globals);\n    bq = showdown.subParser('blockGamut')(bq, options, globals); // recurse\n\n    bq = bq.replace(/(^|\\n)/g, '$1  ');\n    // These leading spaces screw with <pre> content, so we need to fix that:\n    bq = bq.replace(/(\\s*<pre>[^\\r]+?<\\/pre>)/gm, function (wholeMatch, m1) {\n      var pre = m1;\n      // attacklab: hack around Konqueror 3.5.4 bug:\n      pre = pre.replace(/^  /mg, '¨0');\n      pre = pre.replace(/¨0/g, '');\n      return pre;\n    });\n\n    return showdown.subParser('hashBlock')('<blockquote>\\n' + bq + '\\n</blockquote>', options, globals);\n  });\n\n  text = globals.converter._dispatch('blockQuotes.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Process Markdown `<pre><code>` blocks.\n */\nshowdown.subParser('codeBlocks', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('codeBlocks.before', text, options, globals);\n\n  // sentinel workarounds for lack of \\A and \\Z, safari\\khtml bug\n  text += '¨0';\n\n  var pattern = /(?:\\n\\n|^)((?:(?:[ ]{4}|\\t).*\\n+)+)(\\n*[ ]{0,3}[^ \\t\\n]|(?=¨0))/g;\n  text = text.replace(pattern, function (wholeMatch, m1, m2) {\n    var codeblock = m1,\n        nextChar = m2,\n        end = '\\n';\n\n    codeblock = showdown.subParser('outdent')(codeblock, options, globals);\n    codeblock = showdown.subParser('encodeCode')(codeblock, options, globals);\n    codeblock = showdown.subParser('detab')(codeblock, options, globals);\n    codeblock = codeblock.replace(/^\\n+/g, ''); // trim leading newlines\n    codeblock = codeblock.replace(/\\n+$/g, ''); // trim trailing newlines\n\n    if (options.omitExtraWLInCodeBlocks) {\n      end = '';\n    }\n\n    codeblock = '<pre><code>' + codeblock + end + '</code></pre>';\n\n    return showdown.subParser('hashBlock')(codeblock, options, globals) + nextChar;\n  });\n\n  // strip sentinel\n  text = text.replace(/¨0/, '');\n\n  text = globals.converter._dispatch('codeBlocks.after', text, options, globals);\n  return text;\n});\n\r\n/**\n *\n *   *  Backtick quotes are used for <code></code> spans.\n *\n *   *  You can use multiple backticks as the delimiters if you want to\n *     include literal backticks in the code span. So, this input:\n *\n *         Just type ``foo `bar` baz`` at the prompt.\n *\n *       Will translate to:\n *\n *         <p>Just type <code>foo `bar` baz</code> at the prompt.</p>\n *\n *    There's no arbitrary limit to the number of backticks you\n *    can use as delimters. If you need three consecutive backticks\n *    in your code, use four for delimiters, etc.\n *\n *  *  You can use spaces to get literal backticks at the edges:\n *\n *         ... type `` `bar` `` ...\n *\n *       Turns to:\n *\n *         ... type <code>`bar`</code> ...\n */\nshowdown.subParser('codeSpans', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('codeSpans.before', text, options, globals);\n\n  if (typeof(text) === 'undefined') {\n    text = '';\n  }\n  text = text.replace(/(^|[^\\\\])(`+)([^\\r]*?[^`])\\2(?!`)/gm,\n    function (wholeMatch, m1, m2, m3) {\n      var c = m3;\n      c = c.replace(/^([ \\t]*)/g, '');\t// leading whitespace\n      c = c.replace(/[ \\t]*$/g, '');\t// trailing whitespace\n      c = showdown.subParser('encodeCode')(c, options, globals);\n      c = m1 + '<code>' + c + '</code>';\n      c = showdown.subParser('hashHTMLSpans')(c, options, globals);\n      return c;\n    }\n  );\n\n  text = globals.converter._dispatch('codeSpans.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Create a full HTML document from the processed markdown\n */\nshowdown.subParser('completeHTMLDocument', function (text, options, globals) {\n  'use strict';\n\n  if (!options.completeHTMLDocument) {\n    return text;\n  }\n\n  text = globals.converter._dispatch('completeHTMLDocument.before', text, options, globals);\n\n  var doctype = 'html',\n      doctypeParsed = '<!DOCTYPE HTML>\\n',\n      title = '',\n      charset = '<meta charset=\"utf-8\">\\n',\n      lang = '',\n      metadata = '';\n\n  if (typeof globals.metadata.parsed.doctype !== 'undefined') {\n    doctypeParsed = '<!DOCTYPE ' +  globals.metadata.parsed.doctype + '>\\n';\n    doctype = globals.metadata.parsed.doctype.toString().toLowerCase();\n    if (doctype === 'html' || doctype === 'html5') {\n      charset = '<meta charset=\"utf-8\">';\n    }\n  }\n\n  for (var meta in globals.metadata.parsed) {\n    if (globals.metadata.parsed.hasOwnProperty(meta)) {\n      switch (meta.toLowerCase()) {\n        case 'doctype':\n          break;\n\n        case 'title':\n          title = '<title>' +  globals.metadata.parsed.title + '</title>\\n';\n          break;\n\n        case 'charset':\n          if (doctype === 'html' || doctype === 'html5') {\n            charset = '<meta charset=\"' + globals.metadata.parsed.charset + '\">\\n';\n          } else {\n            charset = '<meta name=\"charset\" content=\"' + globals.metadata.parsed.charset + '\">\\n';\n          }\n          break;\n\n        case 'language':\n        case 'lang':\n          lang = ' lang=\"' + globals.metadata.parsed[meta] + '\"';\n          metadata += '<meta name=\"' + meta + '\" content=\"' + globals.metadata.parsed[meta] + '\">\\n';\n          break;\n\n        default:\n          metadata += '<meta name=\"' + meta + '\" content=\"' + globals.metadata.parsed[meta] + '\">\\n';\n      }\n    }\n  }\n\n  text = doctypeParsed + '<html' + lang + '>\\n<head>\\n' + title + charset + metadata + '</head>\\n<body>\\n' + text.trim() + '\\n</body>\\n</html>';\n\n  text = globals.converter._dispatch('completeHTMLDocument.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Convert all tabs to spaces\n */\nshowdown.subParser('detab', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('detab.before', text, options, globals);\n\n  // expand first n-1 tabs\n  text = text.replace(/\\t(?=\\t)/g, '    '); // g_tab_width\n\n  // replace the nth with two sentinels\n  text = text.replace(/\\t/g, '¨A¨B');\n\n  // use the sentinel to anchor our regex so it doesn't explode\n  text = text.replace(/¨B(.+?)¨A/g, function (wholeMatch, m1) {\n    var leadingText = m1,\n        numSpaces = 4 - leadingText.length % 4;  // g_tab_width\n\n    // there *must* be a better way to do this:\n    for (var i = 0; i < numSpaces; i++) {\n      leadingText += ' ';\n    }\n\n    return leadingText;\n  });\n\n  // clean up sentinels\n  text = text.replace(/¨A/g, '    ');  // g_tab_width\n  text = text.replace(/¨B/g, '');\n\n  text = globals.converter._dispatch('detab.after', text, options, globals);\n  return text;\n});\n\r\nshowdown.subParser('ellipsis', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('ellipsis.before', text, options, globals);\n\n  text = text.replace(/\\.\\.\\./g, '…');\n\n  text = globals.converter._dispatch('ellipsis.after', text, options, globals);\n\n  return text;\n});\n\r\n/**\n * Turn emoji codes into emojis\n *\n * List of supported emojis: https://github.com/showdownjs/showdown/wiki/Emojis\n */\nshowdown.subParser('emoji', function (text, options, globals) {\n  'use strict';\n\n  if (!options.emoji) {\n    return text;\n  }\n\n  text = globals.converter._dispatch('emoji.before', text, options, globals);\n\n  var emojiRgx = /:([\\S]+?):/g;\n\n  text = text.replace(emojiRgx, function (wm, emojiCode) {\n    if (showdown.helper.emojis.hasOwnProperty(emojiCode)) {\n      return showdown.helper.emojis[emojiCode];\n    }\n    return wm;\n  });\n\n  text = globals.converter._dispatch('emoji.after', text, options, globals);\n\n  return text;\n});\n\r\n/**\n * Smart processing for ampersands and angle brackets that need to be encoded.\n */\nshowdown.subParser('encodeAmpsAndAngles', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('encodeAmpsAndAngles.before', text, options, globals);\n\n  // Ampersand-encoding based entirely on Nat Irons's Amputator MT plugin:\n  // http://bumppo.net/projects/amputator/\n  text = text.replace(/&(?!#?[xX]?(?:[0-9a-fA-F]+|\\w+);)/g, '&amp;');\n\n  // Encode naked <'s\n  text = text.replace(/<(?![a-z\\/?$!])/gi, '&lt;');\n\n  // Encode <\n  text = text.replace(/</g, '&lt;');\n\n  // Encode >\n  text = text.replace(/>/g, '&gt;');\n\n  text = globals.converter._dispatch('encodeAmpsAndAngles.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Returns the string, with after processing the following backslash escape sequences.\n *\n * attacklab: The polite way to do this is with the new escapeCharacters() function:\n *\n *    text = escapeCharacters(text,\"\\\\\",true);\n *    text = escapeCharacters(text,\"`*_{}[]()>#+-.!\",true);\n *\n * ...but we're sidestepping its use of the (slow) RegExp constructor\n * as an optimization for Firefox.  This function gets called a LOT.\n */\nshowdown.subParser('encodeBackslashEscapes', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('encodeBackslashEscapes.before', text, options, globals);\n\n  text = text.replace(/\\\\(\\\\)/g, showdown.helper.escapeCharactersCallback);\n  text = text.replace(/\\\\([`*_{}\\[\\]()>#+.!~=|-])/g, showdown.helper.escapeCharactersCallback);\n\n  text = globals.converter._dispatch('encodeBackslashEscapes.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Encode/escape certain characters inside Markdown code runs.\n * The point is that in code, these characters are literals,\n * and lose their special Markdown meanings.\n */\nshowdown.subParser('encodeCode', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('encodeCode.before', text, options, globals);\n\n  // Encode all ampersands; HTML entities are not\n  // entities within a Markdown code span.\n  text = text\n    .replace(/&/g, '&amp;')\n  // Do the angle bracket song and dance:\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n  // Now, escape characters that are magic in Markdown:\n    .replace(/([*_{}\\[\\]\\\\=~-])/g, showdown.helper.escapeCharactersCallback);\n\n  text = globals.converter._dispatch('encodeCode.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Within tags -- meaning between < and > -- encode [\\ ` * _ ~ =] so they\n * don't conflict with their use in Markdown for code, italics and strong.\n */\nshowdown.subParser('escapeSpecialCharsWithinTagAttributes', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('escapeSpecialCharsWithinTagAttributes.before', text, options, globals);\n\n  // Build a regex to find HTML tags.\n  var tags     = /<\\/?[a-z\\d_:-]+(?:[\\s]+[\\s\\S]+?)?>/gi,\n      comments = /<!(--(?:(?:[^>-]|-[^>])(?:[^-]|-[^-])*)--)>/gi;\n\n  text = text.replace(tags, function (wholeMatch) {\n    return wholeMatch\n      .replace(/(.)<\\/?code>(?=.)/g, '$1`')\n      .replace(/([\\\\`*_~=|])/g, showdown.helper.escapeCharactersCallback);\n  });\n\n  text = text.replace(comments, function (wholeMatch) {\n    return wholeMatch\n      .replace(/([\\\\`*_~=|])/g, showdown.helper.escapeCharactersCallback);\n  });\n\n  text = globals.converter._dispatch('escapeSpecialCharsWithinTagAttributes.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Handle github codeblocks prior to running HashHTML so that\n * HTML contained within the codeblock gets escaped properly\n * Example:\n * ```ruby\n *     def hello_world(x)\n *       puts \"Hello, #{x}\"\n *     end\n * ```\n */\nshowdown.subParser('githubCodeBlocks', function (text, options, globals) {\n  'use strict';\n\n  // early exit if option is not enabled\n  if (!options.ghCodeBlocks) {\n    return text;\n  }\n\n  text = globals.converter._dispatch('githubCodeBlocks.before', text, options, globals);\n\n  text += '¨0';\n\n  text = text.replace(/(?:^|\\n)(?: {0,3})(```+|~~~+)(?: *)([^\\s`~]*)\\n([\\s\\S]*?)\\n(?: {0,3})\\1/g, function (wholeMatch, delim, language, codeblock) {\n    var end = (options.omitExtraWLInCodeBlocks) ? '' : '\\n';\n\n    // First parse the github code block\n    codeblock = showdown.subParser('encodeCode')(codeblock, options, globals);\n    codeblock = showdown.subParser('detab')(codeblock, options, globals);\n    codeblock = codeblock.replace(/^\\n+/g, ''); // trim leading newlines\n    codeblock = codeblock.replace(/\\n+$/g, ''); // trim trailing whitespace\n\n    codeblock = '<pre><code' + (language ? ' class=\"' + language + ' language-' + language + '\"' : '') + '>' + codeblock + end + '</code></pre>';\n\n    codeblock = showdown.subParser('hashBlock')(codeblock, options, globals);\n\n    // Since GHCodeblocks can be false positives, we need to\n    // store the primitive text and the parsed text in a global var,\n    // and then return a token\n    return '\\n\\n¨G' + (globals.ghCodeBlocks.push({text: wholeMatch, codeblock: codeblock}) - 1) + 'G\\n\\n';\n  });\n\n  // attacklab: strip sentinel\n  text = text.replace(/¨0/, '');\n\n  return globals.converter._dispatch('githubCodeBlocks.after', text, options, globals);\n});\n\r\nshowdown.subParser('hashBlock', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('hashBlock.before', text, options, globals);\n  text = text.replace(/(^\\n+|\\n+$)/g, '');\n  text = '\\n\\n¨K' + (globals.gHtmlBlocks.push(text) - 1) + 'K\\n\\n';\n  text = globals.converter._dispatch('hashBlock.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Hash and escape <code> elements that should not be parsed as markdown\n */\nshowdown.subParser('hashCodeTags', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('hashCodeTags.before', text, options, globals);\n\n  var repFunc = function (wholeMatch, match, left, right) {\n    var codeblock = left + showdown.subParser('encodeCode')(match, options, globals) + right;\n    return '¨C' + (globals.gHtmlSpans.push(codeblock) - 1) + 'C';\n  };\n\n  // Hash naked <code>\n  text = showdown.helper.replaceRecursiveRegExp(text, repFunc, '<code\\\\b[^>]*>', '</code>', 'gim');\n\n  text = globals.converter._dispatch('hashCodeTags.after', text, options, globals);\n  return text;\n});\n\r\nshowdown.subParser('hashElement', function (text, options, globals) {\n  'use strict';\n\n  return function (wholeMatch, m1) {\n    var blockText = m1;\n\n    // Undo double lines\n    blockText = blockText.replace(/\\n\\n/g, '\\n');\n    blockText = blockText.replace(/^\\n/, '');\n\n    // strip trailing blank lines\n    blockText = blockText.replace(/\\n+$/g, '');\n\n    // Replace the element text with a marker (\"¨KxK\" where x is its key)\n    blockText = '\\n\\n¨K' + (globals.gHtmlBlocks.push(blockText) - 1) + 'K\\n\\n';\n\n    return blockText;\n  };\n});\n\r\nshowdown.subParser('hashHTMLBlocks', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('hashHTMLBlocks.before', text, options, globals);\n\n  var blockTags = [\n        'pre',\n        'div',\n        'h1',\n        'h2',\n        'h3',\n        'h4',\n        'h5',\n        'h6',\n        'blockquote',\n        'table',\n        'dl',\n        'ol',\n        'ul',\n        'script',\n        'noscript',\n        'form',\n        'fieldset',\n        'iframe',\n        'math',\n        'style',\n        'section',\n        'header',\n        'footer',\n        'nav',\n        'article',\n        'aside',\n        'address',\n        'audio',\n        'canvas',\n        'figure',\n        'hgroup',\n        'output',\n        'video',\n        'p'\n      ],\n      repFunc = function (wholeMatch, match, left, right) {\n        var txt = wholeMatch;\n        // check if this html element is marked as markdown\n        // if so, it's contents should be parsed as markdown\n        if (left.search(/\\bmarkdown\\b/) !== -1) {\n          txt = left + globals.converter.makeHtml(match) + right;\n        }\n        return '\\n\\n¨K' + (globals.gHtmlBlocks.push(txt) - 1) + 'K\\n\\n';\n      };\n\n  if (options.backslashEscapesHTMLTags) {\n    // encode backslash escaped HTML tags\n    text = text.replace(/\\\\<(\\/?[^>]+?)>/g, function (wm, inside) {\n      return '&lt;' + inside + '&gt;';\n    });\n  }\n\n  // hash HTML Blocks\n  for (var i = 0; i < blockTags.length; ++i) {\n\n    var opTagPos,\n        rgx1     = new RegExp('^ {0,3}(<' + blockTags[i] + '\\\\b[^>]*>)', 'im'),\n        patLeft  = '<' + blockTags[i] + '\\\\b[^>]*>',\n        patRight = '</' + blockTags[i] + '>';\n    // 1. Look for the first position of the first opening HTML tag in the text\n    while ((opTagPos = showdown.helper.regexIndexOf(text, rgx1)) !== -1) {\n\n      // if the HTML tag is \\ escaped, we need to escape it and break\n\n\n      //2. Split the text in that position\n      var subTexts = showdown.helper.splitAtIndex(text, opTagPos),\n      //3. Match recursively\n          newSubText1 = showdown.helper.replaceRecursiveRegExp(subTexts[1], repFunc, patLeft, patRight, 'im');\n\n      // prevent an infinite loop\n      if (newSubText1 === subTexts[1]) {\n        break;\n      }\n      text = subTexts[0].concat(newSubText1);\n    }\n  }\n  // HR SPECIAL CASE\n  text = text.replace(/(\\n {0,3}(<(hr)\\b([^<>])*?\\/?>)[ \\t]*(?=\\n{2,}))/g,\n    showdown.subParser('hashElement')(text, options, globals));\n\n  // Special case for standalone HTML comments\n  text = showdown.helper.replaceRecursiveRegExp(text, function (txt) {\n    return '\\n\\n¨K' + (globals.gHtmlBlocks.push(txt) - 1) + 'K\\n\\n';\n  }, '^ {0,3}<!--', '-->', 'gm');\n\n  // PHP and ASP-style processor instructions (<?...?> and <%...%>)\n  text = text.replace(/(?:\\n\\n)( {0,3}(?:<([?%])[^\\r]*?\\2>)[ \\t]*(?=\\n{2,}))/g,\n    showdown.subParser('hashElement')(text, options, globals));\n\n  text = globals.converter._dispatch('hashHTMLBlocks.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Hash span elements that should not be parsed as markdown\n */\nshowdown.subParser('hashHTMLSpans', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('hashHTMLSpans.before', text, options, globals);\n\n  function hashHTMLSpan (html) {\n    return '¨C' + (globals.gHtmlSpans.push(html) - 1) + 'C';\n  }\n\n  // Hash Self Closing tags\n  text = text.replace(/<[^>]+?\\/>/gi, function (wm) {\n    return hashHTMLSpan(wm);\n  });\n\n  // Hash tags without properties\n  text = text.replace(/<([^>]+?)>[\\s\\S]*?<\\/\\1>/g, function (wm) {\n    return hashHTMLSpan(wm);\n  });\n\n  // Hash tags with properties\n  text = text.replace(/<([^>]+?)\\s[^>]+?>[\\s\\S]*?<\\/\\1>/g, function (wm) {\n    return hashHTMLSpan(wm);\n  });\n\n  // Hash self closing tags without />\n  text = text.replace(/<[^>]+?>/gi, function (wm) {\n    return hashHTMLSpan(wm);\n  });\n\n  /*showdown.helper.matchRecursiveRegExp(text, '<code\\\\b[^>]*>', '</code>', 'gi');*/\n\n  text = globals.converter._dispatch('hashHTMLSpans.after', text, options, globals);\n  return text;\n});\n\n/**\n * Unhash HTML spans\n */\nshowdown.subParser('unhashHTMLSpans', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('unhashHTMLSpans.before', text, options, globals);\n\n  for (var i = 0; i < globals.gHtmlSpans.length; ++i) {\n    var repText = globals.gHtmlSpans[i],\n        // limiter to prevent infinite loop (assume 10 as limit for recurse)\n        limit = 0;\n\n    while (/¨C(\\d+)C/.test(repText)) {\n      var num = RegExp.$1;\n      repText = repText.replace('¨C' + num + 'C', globals.gHtmlSpans[num]);\n      if (limit === 10) {\n        console.error('maximum nesting of 10 spans reached!!!');\n        break;\n      }\n      ++limit;\n    }\n    text = text.replace('¨C' + i + 'C', repText);\n  }\n\n  text = globals.converter._dispatch('unhashHTMLSpans.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Hash and escape <pre><code> elements that should not be parsed as markdown\n */\nshowdown.subParser('hashPreCodeTags', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('hashPreCodeTags.before', text, options, globals);\n\n  var repFunc = function (wholeMatch, match, left, right) {\n    // encode html entities\n    var codeblock = left + showdown.subParser('encodeCode')(match, options, globals) + right;\n    return '\\n\\n¨G' + (globals.ghCodeBlocks.push({text: wholeMatch, codeblock: codeblock}) - 1) + 'G\\n\\n';\n  };\n\n  // Hash <pre><code>\n  text = showdown.helper.replaceRecursiveRegExp(text, repFunc, '^ {0,3}<pre\\\\b[^>]*>\\\\s*<code\\\\b[^>]*>', '^ {0,3}</code>\\\\s*</pre>', 'gim');\n\n  text = globals.converter._dispatch('hashPreCodeTags.after', text, options, globals);\n  return text;\n});\n\r\nshowdown.subParser('headers', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('headers.before', text, options, globals);\n\n  var headerLevelStart = (isNaN(parseInt(options.headerLevelStart))) ? 1 : parseInt(options.headerLevelStart),\n\n  // Set text-style headers:\n  //\tHeader 1\n  //\t========\n  //\n  //\tHeader 2\n  //\t--------\n  //\n      setextRegexH1 = (options.smoothLivePreview) ? /^(.+)[ \\t]*\\n={2,}[ \\t]*\\n+/gm : /^(.+)[ \\t]*\\n=+[ \\t]*\\n+/gm,\n      setextRegexH2 = (options.smoothLivePreview) ? /^(.+)[ \\t]*\\n-{2,}[ \\t]*\\n+/gm : /^(.+)[ \\t]*\\n-+[ \\t]*\\n+/gm;\n\n  text = text.replace(setextRegexH1, function (wholeMatch, m1) {\n\n    var spanGamut = showdown.subParser('spanGamut')(m1, options, globals),\n        hID = (options.noHeaderId) ? '' : ' id=\"' + headerId(m1) + '\"',\n        hLevel = headerLevelStart,\n        hashBlock = '<h' + hLevel + hID + '>' + spanGamut + '</h' + hLevel + '>';\n    return showdown.subParser('hashBlock')(hashBlock, options, globals);\n  });\n\n  text = text.replace(setextRegexH2, function (matchFound, m1) {\n    var spanGamut = showdown.subParser('spanGamut')(m1, options, globals),\n        hID = (options.noHeaderId) ? '' : ' id=\"' + headerId(m1) + '\"',\n        hLevel = headerLevelStart + 1,\n        hashBlock = '<h' + hLevel + hID + '>' + spanGamut + '</h' + hLevel + '>';\n    return showdown.subParser('hashBlock')(hashBlock, options, globals);\n  });\n\n  // atx-style headers:\n  //  # Header 1\n  //  ## Header 2\n  //  ## Header 2 with closing hashes ##\n  //  ...\n  //  ###### Header 6\n  //\n  var atxStyle = (options.requireSpaceBeforeHeadingText) ? /^(#{1,6})[ \\t]+(.+?)[ \\t]*#*\\n+/gm : /^(#{1,6})[ \\t]*(.+?)[ \\t]*#*\\n+/gm;\n\n  text = text.replace(atxStyle, function (wholeMatch, m1, m2) {\n    var hText = m2;\n    if (options.customizedHeaderId) {\n      hText = m2.replace(/\\s?\\{([^{]+?)}\\s*$/, '');\n    }\n\n    var span = showdown.subParser('spanGamut')(hText, options, globals),\n        hID = (options.noHeaderId) ? '' : ' id=\"' + headerId(m2) + '\"',\n        hLevel = headerLevelStart - 1 + m1.length,\n        header = '<h' + hLevel + hID + '>' + span + '</h' + hLevel + '>';\n\n    return showdown.subParser('hashBlock')(header, options, globals);\n  });\n\n  function headerId (m) {\n    var title,\n        prefix;\n\n    // It is separate from other options to allow combining prefix and customized\n    if (options.customizedHeaderId) {\n      var match = m.match(/\\{([^{]+?)}\\s*$/);\n      if (match && match[1]) {\n        m = match[1];\n      }\n    }\n\n    title = m;\n\n    // Prefix id to prevent causing inadvertent pre-existing style matches.\n    if (showdown.helper.isString(options.prefixHeaderId)) {\n      prefix = options.prefixHeaderId;\n    } else if (options.prefixHeaderId === true) {\n      prefix = 'section-';\n    } else {\n      prefix = '';\n    }\n\n    if (!options.rawPrefixHeaderId) {\n      title = prefix + title;\n    }\n\n    if (options.ghCompatibleHeaderId) {\n      title = title\n        .replace(/ /g, '-')\n        // replace previously escaped chars (&, ¨ and $)\n        .replace(/&amp;/g, '')\n        .replace(/¨T/g, '')\n        .replace(/¨D/g, '')\n        // replace rest of the chars (&~$ are repeated as they might have been escaped)\n        // borrowed from github's redcarpet (some they should produce similar results)\n        .replace(/[&+$,\\/:;=?@\"#{}|^¨~\\[\\]`\\\\*)(%.!'<>]/g, '')\n        .toLowerCase();\n    } else if (options.rawHeaderId) {\n      title = title\n        .replace(/ /g, '-')\n        // replace previously escaped chars (&, ¨ and $)\n        .replace(/&amp;/g, '&')\n        .replace(/¨T/g, '¨')\n        .replace(/¨D/g, '$')\n        // replace \" and '\n        .replace(/[\"']/g, '-')\n        .toLowerCase();\n    } else {\n      title = title\n        .replace(/[^\\w]/g, '')\n        .toLowerCase();\n    }\n\n    if (options.rawPrefixHeaderId) {\n      title = prefix + title;\n    }\n\n    if (globals.hashLinkCounts[title]) {\n      title = title + '-' + (globals.hashLinkCounts[title]++);\n    } else {\n      globals.hashLinkCounts[title] = 1;\n    }\n    return title;\n  }\n\n  text = globals.converter._dispatch('headers.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Turn Markdown link shortcuts into XHTML <a> tags.\n */\nshowdown.subParser('horizontalRule', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('horizontalRule.before', text, options, globals);\n\n  var key = showdown.subParser('hashBlock')('<hr />', options, globals);\n  text = text.replace(/^ {0,2}( ?-){3,}[ \\t]*$/gm, key);\n  text = text.replace(/^ {0,2}( ?\\*){3,}[ \\t]*$/gm, key);\n  text = text.replace(/^ {0,2}( ?_){3,}[ \\t]*$/gm, key);\n\n  text = globals.converter._dispatch('horizontalRule.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Turn Markdown image shortcuts into <img> tags.\n */\nshowdown.subParser('images', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('images.before', text, options, globals);\n\n  var inlineRegExp      = /!\\[([^\\]]*?)][ \\t]*()\\([ \\t]?<?([\\S]+?(?:\\([\\S]*?\\)[\\S]*?)?)>?(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*(?:([\"'])([^\"]*?)\\6)?[ \\t]?\\)/g,\n      crazyRegExp       = /!\\[([^\\]]*?)][ \\t]*()\\([ \\t]?<([^>]*)>(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*(?:(?:([\"'])([^\"]*?)\\6))?[ \\t]?\\)/g,\n      base64RegExp      = /!\\[([^\\]]*?)][ \\t]*()\\([ \\t]?<?(data:.+?\\/.+?;base64,[A-Za-z0-9+/=\\n]+?)>?(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*(?:([\"'])([^\"]*?)\\6)?[ \\t]?\\)/g,\n      referenceRegExp   = /!\\[([^\\]]*?)] ?(?:\\n *)?\\[([\\s\\S]*?)]()()()()()/g,\n      refShortcutRegExp = /!\\[([^\\[\\]]+)]()()()()()/g;\n\n  function writeImageTagBase64 (wholeMatch, altText, linkId, url, width, height, m5, title) {\n    url = url.replace(/\\s/g, '');\n    return writeImageTag (wholeMatch, altText, linkId, url, width, height, m5, title);\n  }\n\n  function writeImageTag (wholeMatch, altText, linkId, url, width, height, m5, title) {\n\n    var gUrls   = globals.gUrls,\n        gTitles = globals.gTitles,\n        gDims   = globals.gDimensions;\n\n    linkId = linkId.toLowerCase();\n\n    if (!title) {\n      title = '';\n    }\n    // Special case for explicit empty url\n    if (wholeMatch.search(/\\(<?\\s*>? ?(['\"].*['\"])?\\)$/m) > -1) {\n      url = '';\n\n    } else if (url === '' || url === null) {\n      if (linkId === '' || linkId === null) {\n        // lower-case and turn embedded newlines into spaces\n        linkId = altText.toLowerCase().replace(/ ?\\n/g, ' ');\n      }\n      url = '#' + linkId;\n\n      if (!showdown.helper.isUndefined(gUrls[linkId])) {\n        url = gUrls[linkId];\n        if (!showdown.helper.isUndefined(gTitles[linkId])) {\n          title = gTitles[linkId];\n        }\n        if (!showdown.helper.isUndefined(gDims[linkId])) {\n          width = gDims[linkId].width;\n          height = gDims[linkId].height;\n        }\n      } else {\n        return wholeMatch;\n      }\n    }\n\n    altText = altText\n      .replace(/\"/g, '&quot;')\n    //altText = showdown.helper.escapeCharacters(altText, '*_', false);\n      .replace(showdown.helper.regexes.asteriskDashAndColon, showdown.helper.escapeCharactersCallback);\n    //url = showdown.helper.escapeCharacters(url, '*_', false);\n    url = url.replace(showdown.helper.regexes.asteriskDashAndColon, showdown.helper.escapeCharactersCallback);\n    var result = '<img src=\"' + url + '\" alt=\"' + altText + '\"';\n\n    if (title && showdown.helper.isString(title)) {\n      title = title\n        .replace(/\"/g, '&quot;')\n      //title = showdown.helper.escapeCharacters(title, '*_', false);\n        .replace(showdown.helper.regexes.asteriskDashAndColon, showdown.helper.escapeCharactersCallback);\n      result += ' title=\"' + title + '\"';\n    }\n\n    if (width && height) {\n      width  = (width === '*') ? 'auto' : width;\n      height = (height === '*') ? 'auto' : height;\n\n      result += ' width=\"' + width + '\"';\n      result += ' height=\"' + height + '\"';\n    }\n\n    result += ' />';\n\n    return result;\n  }\n\n  // First, handle reference-style labeled images: ![alt text][id]\n  text = text.replace(referenceRegExp, writeImageTag);\n\n  // Next, handle inline images:  ![alt text](url =<width>x<height> \"optional title\")\n\n  // base64 encoded images\n  text = text.replace(base64RegExp, writeImageTagBase64);\n\n  // cases with crazy urls like ./image/cat1).png\n  text = text.replace(crazyRegExp, writeImageTag);\n\n  // normal cases\n  text = text.replace(inlineRegExp, writeImageTag);\n\n  // handle reference-style shortcuts: ![img text]\n  text = text.replace(refShortcutRegExp, writeImageTag);\n\n  text = globals.converter._dispatch('images.after', text, options, globals);\n  return text;\n});\n\r\nshowdown.subParser('italicsAndBold', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('italicsAndBold.before', text, options, globals);\n\n  // it's faster to have 3 separate regexes for each case than have just one\n  // because of backtracing, in some cases, it could lead to an exponential effect\n  // called \"catastrophic backtrace\". Ominous!\n\n  function parseInside (txt, left, right) {\n    /*\n    if (options.simplifiedAutoLink) {\n      txt = showdown.subParser('simplifiedAutoLinks')(txt, options, globals);\n    }\n    */\n    return left + txt + right;\n  }\n\n  // Parse underscores\n  if (options.literalMidWordUnderscores) {\n    text = text.replace(/\\b___(\\S[\\s\\S]*?)___\\b/g, function (wm, txt) {\n      return parseInside (txt, '<strong><em>', '</em></strong>');\n    });\n    text = text.replace(/\\b__(\\S[\\s\\S]*?)__\\b/g, function (wm, txt) {\n      return parseInside (txt, '<strong>', '</strong>');\n    });\n    text = text.replace(/\\b_(\\S[\\s\\S]*?)_\\b/g, function (wm, txt) {\n      return parseInside (txt, '<em>', '</em>');\n    });\n  } else {\n    text = text.replace(/___(\\S[\\s\\S]*?)___/g, function (wm, m) {\n      return (/\\S$/.test(m)) ? parseInside (m, '<strong><em>', '</em></strong>') : wm;\n    });\n    text = text.replace(/__(\\S[\\s\\S]*?)__/g, function (wm, m) {\n      return (/\\S$/.test(m)) ? parseInside (m, '<strong>', '</strong>') : wm;\n    });\n    text = text.replace(/_([^\\s_][\\s\\S]*?)_/g, function (wm, m) {\n      // !/^_[^_]/.test(m) - test if it doesn't start with __ (since it seems redundant, we removed it)\n      return (/\\S$/.test(m)) ? parseInside (m, '<em>', '</em>') : wm;\n    });\n  }\n\n  // Now parse asterisks\n  if (options.literalMidWordAsterisks) {\n    text = text.replace(/([^*]|^)\\B\\*\\*\\*(\\S[\\s\\S]*?)\\*\\*\\*\\B(?!\\*)/g, function (wm, lead, txt) {\n      return parseInside (txt, lead + '<strong><em>', '</em></strong>');\n    });\n    text = text.replace(/([^*]|^)\\B\\*\\*(\\S[\\s\\S]*?)\\*\\*\\B(?!\\*)/g, function (wm, lead, txt) {\n      return parseInside (txt, lead + '<strong>', '</strong>');\n    });\n    text = text.replace(/([^*]|^)\\B\\*(\\S[\\s\\S]*?)\\*\\B(?!\\*)/g, function (wm, lead, txt) {\n      return parseInside (txt, lead + '<em>', '</em>');\n    });\n  } else {\n    text = text.replace(/\\*\\*\\*(\\S[\\s\\S]*?)\\*\\*\\*/g, function (wm, m) {\n      return (/\\S$/.test(m)) ? parseInside (m, '<strong><em>', '</em></strong>') : wm;\n    });\n    text = text.replace(/\\*\\*(\\S[\\s\\S]*?)\\*\\*/g, function (wm, m) {\n      return (/\\S$/.test(m)) ? parseInside (m, '<strong>', '</strong>') : wm;\n    });\n    text = text.replace(/\\*([^\\s*][\\s\\S]*?)\\*/g, function (wm, m) {\n      // !/^\\*[^*]/.test(m) - test if it doesn't start with ** (since it seems redundant, we removed it)\n      return (/\\S$/.test(m)) ? parseInside (m, '<em>', '</em>') : wm;\n    });\n  }\n\n\n  text = globals.converter._dispatch('italicsAndBold.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Form HTML ordered (numbered) and unordered (bulleted) lists.\n */\nshowdown.subParser('lists', function (text, options, globals) {\n  'use strict';\n\n  /**\n   * Process the contents of a single ordered or unordered list, splitting it\n   * into individual list items.\n   * @param {string} listStr\n   * @param {boolean} trimTrailing\n   * @returns {string}\n   */\n  function processListItems (listStr, trimTrailing) {\n    // The $g_list_level global keeps track of when we're inside a list.\n    // Each time we enter a list, we increment it; when we leave a list,\n    // we decrement. If it's zero, we're not in a list anymore.\n    //\n    // We do this because when we're not inside a list, we want to treat\n    // something like this:\n    //\n    //    I recommend upgrading to version\n    //    8. Oops, now this line is treated\n    //    as a sub-list.\n    //\n    // As a single paragraph, despite the fact that the second line starts\n    // with a digit-period-space sequence.\n    //\n    // Whereas when we're inside a list (or sub-list), that line will be\n    // treated as the start of a sub-list. What a kludge, huh? This is\n    // an aspect of Markdown's syntax that's hard to parse perfectly\n    // without resorting to mind-reading. Perhaps the solution is to\n    // change the syntax rules such that sub-lists must start with a\n    // starting cardinal number; e.g. \"1.\" or \"a.\".\n    globals.gListLevel++;\n\n    // trim trailing blank lines:\n    listStr = listStr.replace(/\\n{2,}$/, '\\n');\n\n    // attacklab: add sentinel to emulate \\z\n    listStr += '¨0';\n\n    var rgx = /(\\n)?(^ {0,3})([*+-]|\\d+[.])[ \\t]+((\\[(x|X| )?])?[ \\t]*[^\\r]+?(\\n{1,2}))(?=\\n*(¨0| {0,3}([*+-]|\\d+[.])[ \\t]+))/gm,\n        isParagraphed = (/\\n[ \\t]*\\n(?!¨0)/.test(listStr));\n\n    // Since version 1.5, nesting sublists requires 4 spaces (or 1 tab) indentation,\n    // which is a syntax breaking change\n    // activating this option reverts to old behavior\n    if (options.disableForced4SpacesIndentedSublists) {\n      rgx = /(\\n)?(^ {0,3})([*+-]|\\d+[.])[ \\t]+((\\[(x|X| )?])?[ \\t]*[^\\r]+?(\\n{1,2}))(?=\\n*(¨0|\\2([*+-]|\\d+[.])[ \\t]+))/gm;\n    }\n\n    listStr = listStr.replace(rgx, function (wholeMatch, m1, m2, m3, m4, taskbtn, checked) {\n      checked = (checked && checked.trim() !== '');\n\n      var item = showdown.subParser('outdent')(m4, options, globals),\n          bulletStyle = '';\n\n      // Support for github tasklists\n      if (taskbtn && options.tasklists) {\n        bulletStyle = ' class=\"task-list-item\" style=\"list-style-type: none;\"';\n        item = item.replace(/^[ \\t]*\\[(x|X| )?]/m, function () {\n          var otp = '<input type=\"checkbox\" disabled style=\"margin: 0px 0.35em 0.25em -1.6em; vertical-align: middle;\"';\n          if (checked) {\n            otp += ' checked';\n          }\n          otp += '>';\n          return otp;\n        });\n      }\n\n      // ISSUE #312\n      // This input: - - - a\n      // causes trouble to the parser, since it interprets it as:\n      // <ul><li><li><li>a</li></li></li></ul>\n      // instead of:\n      // <ul><li>- - a</li></ul>\n      // So, to prevent it, we will put a marker (¨A)in the beginning of the line\n      // Kind of hackish/monkey patching, but seems more effective than overcomplicating the list parser\n      item = item.replace(/^([-*+]|\\d\\.)[ \\t]+[\\S\\n ]*/g, function (wm2) {\n        return '¨A' + wm2;\n      });\n\n      // m1 - Leading line or\n      // Has a double return (multi paragraph) or\n      // Has sublist\n      if (m1 || (item.search(/\\n{2,}/) > -1)) {\n        item = showdown.subParser('githubCodeBlocks')(item, options, globals);\n        item = showdown.subParser('blockGamut')(item, options, globals);\n      } else {\n        // Recursion for sub-lists:\n        item = showdown.subParser('lists')(item, options, globals);\n        item = item.replace(/\\n$/, ''); // chomp(item)\n        item = showdown.subParser('hashHTMLBlocks')(item, options, globals);\n\n        // Colapse double linebreaks\n        item = item.replace(/\\n\\n+/g, '\\n\\n');\n        if (isParagraphed) {\n          item = showdown.subParser('paragraphs')(item, options, globals);\n        } else {\n          item = showdown.subParser('spanGamut')(item, options, globals);\n        }\n      }\n\n      // now we need to remove the marker (¨A)\n      item = item.replace('¨A', '');\n      // we can finally wrap the line in list item tags\n      item =  '<li' + bulletStyle + '>' + item + '</li>\\n';\n\n      return item;\n    });\n\n    // attacklab: strip sentinel\n    listStr = listStr.replace(/¨0/g, '');\n\n    globals.gListLevel--;\n\n    if (trimTrailing) {\n      listStr = listStr.replace(/\\s+$/, '');\n    }\n\n    return listStr;\n  }\n\n  function styleStartNumber (list, listType) {\n    // check if ol and starts by a number different than 1\n    if (listType === 'ol') {\n      var res = list.match(/^ *(\\d+)\\./);\n      if (res && res[1] !== '1') {\n        return ' start=\"' + res[1] + '\"';\n      }\n    }\n    return '';\n  }\n\n  /**\n   * Check and parse consecutive lists (better fix for issue #142)\n   * @param {string} list\n   * @param {string} listType\n   * @param {boolean} trimTrailing\n   * @returns {string}\n   */\n  function parseConsecutiveLists (list, listType, trimTrailing) {\n    // check if we caught 2 or more consecutive lists by mistake\n    // we use the counterRgx, meaning if listType is UL we look for OL and vice versa\n    var olRgx = (options.disableForced4SpacesIndentedSublists) ? /^ ?\\d+\\.[ \\t]/gm : /^ {0,3}\\d+\\.[ \\t]/gm,\n        ulRgx = (options.disableForced4SpacesIndentedSublists) ? /^ ?[*+-][ \\t]/gm : /^ {0,3}[*+-][ \\t]/gm,\n        counterRxg = (listType === 'ul') ? olRgx : ulRgx,\n        result = '';\n\n    if (list.search(counterRxg) !== -1) {\n      (function parseCL (txt) {\n        var pos = txt.search(counterRxg),\n            style = styleStartNumber(list, listType);\n        if (pos !== -1) {\n          // slice\n          result += '\\n\\n<' + listType + style + '>\\n' + processListItems(txt.slice(0, pos), !!trimTrailing) + '</' + listType + '>\\n';\n\n          // invert counterType and listType\n          listType = (listType === 'ul') ? 'ol' : 'ul';\n          counterRxg = (listType === 'ul') ? olRgx : ulRgx;\n\n          //recurse\n          parseCL(txt.slice(pos));\n        } else {\n          result += '\\n\\n<' + listType + style + '>\\n' + processListItems(txt, !!trimTrailing) + '</' + listType + '>\\n';\n        }\n      })(list);\n    } else {\n      var style = styleStartNumber(list, listType);\n      result = '\\n\\n<' + listType + style + '>\\n' + processListItems(list, !!trimTrailing) + '</' + listType + '>\\n';\n    }\n\n    return result;\n  }\n\n  /** Start of list parsing **/\n  text = globals.converter._dispatch('lists.before', text, options, globals);\n  // add sentinel to hack around khtml/safari bug:\n  // http://bugs.webkit.org/show_bug.cgi?id=11231\n  text += '¨0';\n\n  if (globals.gListLevel) {\n    text = text.replace(/^(( {0,3}([*+-]|\\d+[.])[ \\t]+)[^\\r]+?(¨0|\\n{2,}(?=\\S)(?![ \\t]*(?:[*+-]|\\d+[.])[ \\t]+)))/gm,\n      function (wholeMatch, list, m2) {\n        var listType = (m2.search(/[*+-]/g) > -1) ? 'ul' : 'ol';\n        return parseConsecutiveLists(list, listType, true);\n      }\n    );\n  } else {\n    text = text.replace(/(\\n\\n|^\\n?)(( {0,3}([*+-]|\\d+[.])[ \\t]+)[^\\r]+?(¨0|\\n{2,}(?=\\S)(?![ \\t]*(?:[*+-]|\\d+[.])[ \\t]+)))/gm,\n      function (wholeMatch, m1, list, m3) {\n        var listType = (m3.search(/[*+-]/g) > -1) ? 'ul' : 'ol';\n        return parseConsecutiveLists(list, listType, false);\n      }\n    );\n  }\n\n  // strip sentinel\n  text = text.replace(/¨0/, '');\n  text = globals.converter._dispatch('lists.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Parse metadata at the top of the document\n */\nshowdown.subParser('metadata', function (text, options, globals) {\n  'use strict';\n\n  if (!options.metadata) {\n    return text;\n  }\n\n  text = globals.converter._dispatch('metadata.before', text, options, globals);\n\n  function parseMetadataContents (content) {\n    // raw is raw so it's not changed in any way\n    globals.metadata.raw = content;\n\n    // escape chars forbidden in html attributes\n    // double quotes\n    content = content\n      // ampersand first\n      .replace(/&/g, '&amp;')\n      // double quotes\n      .replace(/\"/g, '&quot;');\n\n    content = content.replace(/\\n {4}/g, ' ');\n    content.replace(/^([\\S ]+): +([\\s\\S]+?)$/gm, function (wm, key, value) {\n      globals.metadata.parsed[key] = value;\n      return '';\n    });\n  }\n\n  text = text.replace(/^\\s*«««+(\\S*?)\\n([\\s\\S]+?)\\n»»»+\\n/, function (wholematch, format, content) {\n    parseMetadataContents(content);\n    return '¨M';\n  });\n\n  text = text.replace(/^\\s*---+(\\S*?)\\n([\\s\\S]+?)\\n---+\\n/, function (wholematch, format, content) {\n    if (format) {\n      globals.metadata.format = format;\n    }\n    parseMetadataContents(content);\n    return '¨M';\n  });\n\n  text = text.replace(/¨M/g, '');\n\n  text = globals.converter._dispatch('metadata.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Remove one level of line-leading tabs or spaces\n */\nshowdown.subParser('outdent', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('outdent.before', text, options, globals);\n\n  // attacklab: hack around Konqueror 3.5.4 bug:\n  // \"----------bug\".replace(/^-/g,\"\") == \"bug\"\n  text = text.replace(/^(\\t|[ ]{1,4})/gm, '¨0'); // attacklab: g_tab_width\n\n  // attacklab: clean up hack\n  text = text.replace(/¨0/g, '');\n\n  text = globals.converter._dispatch('outdent.after', text, options, globals);\n  return text;\n});\n\r\n/**\n *\n */\nshowdown.subParser('paragraphs', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('paragraphs.before', text, options, globals);\n  // Strip leading and trailing lines:\n  text = text.replace(/^\\n+/g, '');\n  text = text.replace(/\\n+$/g, '');\n\n  var grafs = text.split(/\\n{2,}/g),\n      grafsOut = [],\n      end = grafs.length; // Wrap <p> tags\n\n  for (var i = 0; i < end; i++) {\n    var str = grafs[i];\n    // if this is an HTML marker, copy it\n    if (str.search(/¨(K|G)(\\d+)\\1/g) >= 0) {\n      grafsOut.push(str);\n\n    // test for presence of characters to prevent empty lines being parsed\n    // as paragraphs (resulting in undesired extra empty paragraphs)\n    } else if (str.search(/\\S/) >= 0) {\n      str = showdown.subParser('spanGamut')(str, options, globals);\n      str = str.replace(/^([ \\t]*)/g, '<p>');\n      str += '</p>';\n      grafsOut.push(str);\n    }\n  }\n\n  /** Unhashify HTML blocks */\n  end = grafsOut.length;\n  for (i = 0; i < end; i++) {\n    var blockText = '',\n        grafsOutIt = grafsOut[i],\n        codeFlag = false;\n    // if this is a marker for an html block...\n    // use RegExp.test instead of string.search because of QML bug\n    while (/¨(K|G)(\\d+)\\1/.test(grafsOutIt)) {\n      var delim = RegExp.$1,\n          num   = RegExp.$2;\n\n      if (delim === 'K') {\n        blockText = globals.gHtmlBlocks[num];\n      } else {\n        // we need to check if ghBlock is a false positive\n        if (codeFlag) {\n          // use encoded version of all text\n          blockText = showdown.subParser('encodeCode')(globals.ghCodeBlocks[num].text, options, globals);\n        } else {\n          blockText = globals.ghCodeBlocks[num].codeblock;\n        }\n      }\n      blockText = blockText.replace(/\\$/g, '$$$$'); // Escape any dollar signs\n\n      grafsOutIt = grafsOutIt.replace(/(\\n\\n)?¨(K|G)\\d+\\2(\\n\\n)?/, blockText);\n      // Check if grafsOutIt is a pre->code\n      if (/^<pre\\b[^>]*>\\s*<code\\b[^>]*>/.test(grafsOutIt)) {\n        codeFlag = true;\n      }\n    }\n    grafsOut[i] = grafsOutIt;\n  }\n  text = grafsOut.join('\\n');\n  // Strip leading and trailing lines:\n  text = text.replace(/^\\n+/g, '');\n  text = text.replace(/\\n+$/g, '');\n  return globals.converter._dispatch('paragraphs.after', text, options, globals);\n});\n\r\n/**\n * Run extension\n */\nshowdown.subParser('runExtension', function (ext, text, options, globals) {\n  'use strict';\n\n  if (ext.filter) {\n    text = ext.filter(text, globals.converter, options);\n\n  } else if (ext.regex) {\n    // TODO remove this when old extension loading mechanism is deprecated\n    var re = ext.regex;\n    if (!(re instanceof RegExp)) {\n      re = new RegExp(re, 'g');\n    }\n    text = text.replace(re, ext.replace);\n  }\n\n  return text;\n});\n\r\n/**\n * These are all the transformations that occur *within* block-level\n * tags like paragraphs, headers, and list items.\n */\nshowdown.subParser('spanGamut', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('spanGamut.before', text, options, globals);\n  text = showdown.subParser('codeSpans')(text, options, globals);\n  text = showdown.subParser('escapeSpecialCharsWithinTagAttributes')(text, options, globals);\n  text = showdown.subParser('encodeBackslashEscapes')(text, options, globals);\n\n  // Process anchor and image tags. Images must come first,\n  // because ![foo][f] looks like an anchor.\n  text = showdown.subParser('images')(text, options, globals);\n  text = showdown.subParser('anchors')(text, options, globals);\n\n  // Make links out of things like `<http://example.com/>`\n  // Must come after anchors, because you can use < and >\n  // delimiters in inline links like [this](<url>).\n  text = showdown.subParser('autoLinks')(text, options, globals);\n  text = showdown.subParser('simplifiedAutoLinks')(text, options, globals);\n  text = showdown.subParser('emoji')(text, options, globals);\n  text = showdown.subParser('underline')(text, options, globals);\n  text = showdown.subParser('italicsAndBold')(text, options, globals);\n  text = showdown.subParser('strikethrough')(text, options, globals);\n  text = showdown.subParser('ellipsis')(text, options, globals);\n\n  // we need to hash HTML tags inside spans\n  text = showdown.subParser('hashHTMLSpans')(text, options, globals);\n\n  // now we encode amps and angles\n  text = showdown.subParser('encodeAmpsAndAngles')(text, options, globals);\n\n  // Do hard breaks\n  if (options.simpleLineBreaks) {\n    // GFM style hard breaks\n    // only add line breaks if the text does not contain a block (special case for lists)\n    if (!/\\n\\n¨K/.test(text)) {\n      text = text.replace(/\\n+/g, '<br />\\n');\n    }\n  } else {\n    // Vanilla hard breaks\n    text = text.replace(/  +\\n/g, '<br />\\n');\n  }\n\n  text = globals.converter._dispatch('spanGamut.after', text, options, globals);\n  return text;\n});\n\r\nshowdown.subParser('strikethrough', function (text, options, globals) {\n  'use strict';\n\n  function parseInside (txt) {\n    if (options.simplifiedAutoLink) {\n      txt = showdown.subParser('simplifiedAutoLinks')(txt, options, globals);\n    }\n    return '<del>' + txt + '</del>';\n  }\n\n  if (options.strikethrough) {\n    text = globals.converter._dispatch('strikethrough.before', text, options, globals);\n    text = text.replace(/(?:~){2}([\\s\\S]+?)(?:~){2}/g, function (wm, txt) { return parseInside(txt); });\n    text = globals.converter._dispatch('strikethrough.after', text, options, globals);\n  }\n\n  return text;\n});\n\r\n/**\n * Strips link definitions from text, stores the URLs and titles in\n * hash references.\n * Link defs are in the form: ^[id]: url \"optional title\"\n */\nshowdown.subParser('stripLinkDefinitions', function (text, options, globals) {\n  'use strict';\n\n  var regex       = /^ {0,3}\\[(.+)]:[ \\t]*\\n?[ \\t]*<?([^>\\s]+)>?(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*\\n?[ \\t]*(?:(\\n*)[\"|'(](.+?)[\"|')][ \\t]*)?(?:\\n+|(?=¨0))/gm,\n      base64Regex = /^ {0,3}\\[(.+)]:[ \\t]*\\n?[ \\t]*<?(data:.+?\\/.+?;base64,[A-Za-z0-9+/=\\n]+?)>?(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*\\n?[ \\t]*(?:(\\n*)[\"|'(](.+?)[\"|')][ \\t]*)?(?:\\n\\n|(?=¨0)|(?=\\n\\[))/gm;\n\n  // attacklab: sentinel workarounds for lack of \\A and \\Z, safari\\khtml bug\n  text += '¨0';\n\n  var replaceFunc = function (wholeMatch, linkId, url, width, height, blankLines, title) {\n    linkId = linkId.toLowerCase();\n    if (url.match(/^data:.+?\\/.+?;base64,/)) {\n      // remove newlines\n      globals.gUrls[linkId] = url.replace(/\\s/g, '');\n    } else {\n      globals.gUrls[linkId] = showdown.subParser('encodeAmpsAndAngles')(url, options, globals);  // Link IDs are case-insensitive\n    }\n\n    if (blankLines) {\n      // Oops, found blank lines, so it's not a title.\n      // Put back the parenthetical statement we stole.\n      return blankLines + title;\n\n    } else {\n      if (title) {\n        globals.gTitles[linkId] = title.replace(/\"|'/g, '&quot;');\n      }\n      if (options.parseImgDimensions && width && height) {\n        globals.gDimensions[linkId] = {\n          width:  width,\n          height: height\n        };\n      }\n    }\n    // Completely remove the definition from the text\n    return '';\n  };\n\n  // first we try to find base64 link references\n  text = text.replace(base64Regex, replaceFunc);\n\n  text = text.replace(regex, replaceFunc);\n\n  // attacklab: strip sentinel\n  text = text.replace(/¨0/, '');\n\n  return text;\n});\n\r\nshowdown.subParser('tables', function (text, options, globals) {\n  'use strict';\n\n  if (!options.tables) {\n    return text;\n  }\n\n  var tableRgx       = /^ {0,3}\\|?.+\\|.+\\n {0,3}\\|?[ \\t]*:?[ \\t]*(?:[-=]){2,}[ \\t]*:?[ \\t]*\\|[ \\t]*:?[ \\t]*(?:[-=]){2,}[\\s\\S]+?(?:\\n\\n|¨0)/gm,\n    //singeColTblRgx = /^ {0,3}\\|.+\\|\\n {0,3}\\|[ \\t]*:?[ \\t]*(?:[-=]){2,}[ \\t]*:?[ \\t]*\\|[ \\t]*\\n(?: {0,3}\\|.+\\|\\n)+(?:\\n\\n|¨0)/gm;\n      singeColTblRgx = /^ {0,3}\\|.+\\|[ \\t]*\\n {0,3}\\|[ \\t]*:?[ \\t]*(?:[-=]){2,}[ \\t]*:?[ \\t]*\\|[ \\t]*\\n( {0,3}\\|.+\\|[ \\t]*\\n)*(?:\\n|¨0)/gm;\n\n  function parseStyles (sLine) {\n    if (/^:[ \\t]*--*$/.test(sLine)) {\n      return ' style=\"text-align:left;\"';\n    } else if (/^--*[ \\t]*:[ \\t]*$/.test(sLine)) {\n      return ' style=\"text-align:right;\"';\n    } else if (/^:[ \\t]*--*[ \\t]*:$/.test(sLine)) {\n      return ' style=\"text-align:center;\"';\n    } else {\n      return '';\n    }\n  }\n\n  function parseHeaders (header, style) {\n    var id = '';\n    header = header.trim();\n    // support both tablesHeaderId and tableHeaderId due to error in documentation so we don't break backwards compatibility\n    if (options.tablesHeaderId || options.tableHeaderId) {\n      id = ' id=\"' + header.replace(/ /g, '_').toLowerCase() + '\"';\n    }\n    header = showdown.subParser('spanGamut')(header, options, globals);\n\n    return '<th' + id + style + '>' + header + '</th>\\n';\n  }\n\n  function parseCells (cell, style) {\n    var subText = showdown.subParser('spanGamut')(cell, options, globals);\n    return '<td' + style + '>' + subText + '</td>\\n';\n  }\n\n  function buildTable (headers, cells) {\n    var tb = '<table>\\n<thead>\\n<tr>\\n',\n        tblLgn = headers.length;\n\n    for (var i = 0; i < tblLgn; ++i) {\n      tb += headers[i];\n    }\n    tb += '</tr>\\n</thead>\\n<tbody>\\n';\n\n    for (i = 0; i < cells.length; ++i) {\n      tb += '<tr>\\n';\n      for (var ii = 0; ii < tblLgn; ++ii) {\n        tb += cells[i][ii];\n      }\n      tb += '</tr>\\n';\n    }\n    tb += '</tbody>\\n</table>\\n';\n    return tb;\n  }\n\n  function parseTable (rawTable) {\n    var i, tableLines = rawTable.split('\\n');\n\n    for (i = 0; i < tableLines.length; ++i) {\n      // strip wrong first and last column if wrapped tables are used\n      if (/^ {0,3}\\|/.test(tableLines[i])) {\n        tableLines[i] = tableLines[i].replace(/^ {0,3}\\|/, '');\n      }\n      if (/\\|[ \\t]*$/.test(tableLines[i])) {\n        tableLines[i] = tableLines[i].replace(/\\|[ \\t]*$/, '');\n      }\n      // parse code spans first, but we only support one line code spans\n      tableLines[i] = showdown.subParser('codeSpans')(tableLines[i], options, globals);\n    }\n\n    var rawHeaders = tableLines[0].split('|').map(function (s) { return s.trim();}),\n        rawStyles = tableLines[1].split('|').map(function (s) { return s.trim();}),\n        rawCells = [],\n        headers = [],\n        styles = [],\n        cells = [];\n\n    tableLines.shift();\n    tableLines.shift();\n\n    for (i = 0; i < tableLines.length; ++i) {\n      if (tableLines[i].trim() === '') {\n        continue;\n      }\n      rawCells.push(\n        tableLines[i]\n          .split('|')\n          .map(function (s) {\n            return s.trim();\n          })\n      );\n    }\n\n    if (rawHeaders.length < rawStyles.length) {\n      return rawTable;\n    }\n\n    for (i = 0; i < rawStyles.length; ++i) {\n      styles.push(parseStyles(rawStyles[i]));\n    }\n\n    for (i = 0; i < rawHeaders.length; ++i) {\n      if (showdown.helper.isUndefined(styles[i])) {\n        styles[i] = '';\n      }\n      headers.push(parseHeaders(rawHeaders[i], styles[i]));\n    }\n\n    for (i = 0; i < rawCells.length; ++i) {\n      var row = [];\n      for (var ii = 0; ii < headers.length; ++ii) {\n        if (showdown.helper.isUndefined(rawCells[i][ii])) {\n\n        }\n        row.push(parseCells(rawCells[i][ii], styles[ii]));\n      }\n      cells.push(row);\n    }\n\n    return buildTable(headers, cells);\n  }\n\n  text = globals.converter._dispatch('tables.before', text, options, globals);\n\n  // find escaped pipe characters\n  text = text.replace(/\\\\(\\|)/g, showdown.helper.escapeCharactersCallback);\n\n  // parse multi column tables\n  text = text.replace(tableRgx, parseTable);\n\n  // parse one column tables\n  text = text.replace(singeColTblRgx, parseTable);\n\n  text = globals.converter._dispatch('tables.after', text, options, globals);\n\n  return text;\n});\n\r\nshowdown.subParser('underline', function (text, options, globals) {\n  'use strict';\n\n  if (!options.underline) {\n    return text;\n  }\n\n  text = globals.converter._dispatch('underline.before', text, options, globals);\n\n  if (options.literalMidWordUnderscores) {\n    text = text.replace(/\\b___(\\S[\\s\\S]*?)___\\b/g, function (wm, txt) {\n      return '<u>' + txt + '</u>';\n    });\n    text = text.replace(/\\b__(\\S[\\s\\S]*?)__\\b/g, function (wm, txt) {\n      return '<u>' + txt + '</u>';\n    });\n  } else {\n    text = text.replace(/___(\\S[\\s\\S]*?)___/g, function (wm, m) {\n      return (/\\S$/.test(m)) ? '<u>' + m + '</u>' : wm;\n    });\n    text = text.replace(/__(\\S[\\s\\S]*?)__/g, function (wm, m) {\n      return (/\\S$/.test(m)) ? '<u>' + m + '</u>' : wm;\n    });\n  }\n\n  // escape remaining underscores to prevent them being parsed by italic and bold\n  text = text.replace(/(_)/g, showdown.helper.escapeCharactersCallback);\n\n  text = globals.converter._dispatch('underline.after', text, options, globals);\n\n  return text;\n});\n\r\n/**\n * Swap back in all the special characters we've hidden.\n */\nshowdown.subParser('unescapeSpecialChars', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('unescapeSpecialChars.before', text, options, globals);\n\n  text = text.replace(/¨E(\\d+)E/g, function (wholeMatch, m1) {\n    var charCodeToReplace = parseInt(m1);\n    return String.fromCharCode(charCodeToReplace);\n  });\n\n  text = globals.converter._dispatch('unescapeSpecialChars.after', text, options, globals);\n  return text;\n});\n\r\nshowdown.subParser('makeMarkdown.blockquote', function (node, globals) {\n  'use strict';\n\n  var txt = '';\n  if (node.hasChildNodes()) {\n    var children = node.childNodes,\n        childrenLength = children.length;\n\n    for (var i = 0; i < childrenLength; ++i) {\n      var innerTxt = showdown.subParser('makeMarkdown.node')(children[i], globals);\n\n      if (innerTxt === '') {\n        continue;\n      }\n      txt += innerTxt;\n    }\n  }\n  // cleanup\n  txt = txt.trim();\n  txt = '> ' + txt.split('\\n').join('\\n> ');\n  return txt;\n});\n\r\nshowdown.subParser('makeMarkdown.codeBlock', function (node, globals) {\n  'use strict';\n\n  var lang = node.getAttribute('language'),\n      num  = node.getAttribute('precodenum');\n  return '```' + lang + '\\n' + globals.preList[num] + '\\n```';\n});\n\r\nshowdown.subParser('makeMarkdown.codeSpan', function (node) {\n  'use strict';\n\n  return '`' + node.innerHTML + '`';\n});\n\r\nshowdown.subParser('makeMarkdown.emphasis', function (node, globals) {\n  'use strict';\n\n  var txt = '';\n  if (node.hasChildNodes()) {\n    txt += '*';\n    var children = node.childNodes,\n        childrenLength = children.length;\n    for (var i = 0; i < childrenLength; ++i) {\n      txt += showdown.subParser('makeMarkdown.node')(children[i], globals);\n    }\n    txt += '*';\n  }\n  return txt;\n});\n\r\nshowdown.subParser('makeMarkdown.header', function (node, globals, headerLevel) {\n  'use strict';\n\n  var headerMark = new Array(headerLevel + 1).join('#'),\n      txt = '';\n\n  if (node.hasChildNodes()) {\n    txt = headerMark + ' ';\n    var children = node.childNodes,\n        childrenLength = children.length;\n\n    for (var i = 0; i < childrenLength; ++i) {\n      txt += showdown.subParser('makeMarkdown.node')(children[i], globals);\n    }\n  }\n  return txt;\n});\n\r\nshowdown.subParser('makeMarkdown.hr', function () {\n  'use strict';\n\n  return '---';\n});\n\r\nshowdown.subParser('makeMarkdown.image', function (node) {\n  'use strict';\n\n  var txt = '';\n  if (node.hasAttribute('src')) {\n    txt += '![' + node.getAttribute('alt') + '](';\n    txt += '<' + node.getAttribute('src') + '>';\n    if (node.hasAttribute('width') && node.hasAttribute('height')) {\n      txt += ' =' + node.getAttribute('width') + 'x' + node.getAttribute('height');\n    }\n\n    if (node.hasAttribute('title')) {\n      txt += ' \"' + node.getAttribute('title') + '\"';\n    }\n    txt += ')';\n  }\n  return txt;\n});\n\r\nshowdown.subParser('makeMarkdown.links', function (node, globals) {\n  'use strict';\n\n  var txt = '';\n  if (node.hasChildNodes() && node.hasAttribute('href')) {\n    var children = node.childNodes,\n        childrenLength = children.length;\n    txt = '[';\n    for (var i = 0; i < childrenLength; ++i) {\n      txt += showdown.subParser('makeMarkdown.node')(children[i], globals);\n    }\n    txt += '](';\n    txt += '<' + node.getAttribute('href') + '>';\n    if (node.hasAttribute('title')) {\n      txt += ' \"' + node.getAttribute('title') + '\"';\n    }\n    txt += ')';\n  }\n  return txt;\n});\n\r\nshowdown.subParser('makeMarkdown.list', function (node, globals, type) {\n  'use strict';\n\n  var txt = '';\n  if (!node.hasChildNodes()) {\n    return '';\n  }\n  var listItems       = node.childNodes,\n      listItemsLenght = listItems.length,\n      listNum = node.getAttribute('start') || 1;\n\n  for (var i = 0; i < listItemsLenght; ++i) {\n    if (typeof listItems[i].tagName === 'undefined' || listItems[i].tagName.toLowerCase() !== 'li') {\n      continue;\n    }\n\n    // define the bullet to use in list\n    var bullet = '';\n    if (type === 'ol') {\n      bullet = listNum.toString() + '. ';\n    } else {\n      bullet = '- ';\n    }\n\n    // parse list item\n    txt += bullet + showdown.subParser('makeMarkdown.listItem')(listItems[i], globals);\n    ++listNum;\n  }\n\n  // add comment at the end to prevent consecutive lists to be parsed as one\n  txt += '\\n<!-- -->\\n';\n  return txt.trim();\n});\n\r\nshowdown.subParser('makeMarkdown.listItem', function (node, globals) {\n  'use strict';\n\n  var listItemTxt = '';\n\n  var children = node.childNodes,\n      childrenLenght = children.length;\n\n  for (var i = 0; i < childrenLenght; ++i) {\n    listItemTxt += showdown.subParser('makeMarkdown.node')(children[i], globals);\n  }\n  // if it's only one liner, we need to add a newline at the end\n  if (!/\\n$/.test(listItemTxt)) {\n    listItemTxt += '\\n';\n  } else {\n    // it's multiparagraph, so we need to indent\n    listItemTxt = listItemTxt\n      .split('\\n')\n      .join('\\n    ')\n      .replace(/^ {4}$/gm, '')\n      .replace(/\\n\\n+/g, '\\n\\n');\n  }\n\n  return listItemTxt;\n});\n\r\n\n\nshowdown.subParser('makeMarkdown.node', function (node, globals, spansOnly) {\n  'use strict';\n\n  spansOnly = spansOnly || false;\n\n  var txt = '';\n\n  // edge case of text without wrapper paragraph\n  if (node.nodeType === 3) {\n    return showdown.subParser('makeMarkdown.txt')(node, globals);\n  }\n\n  // HTML comment\n  if (node.nodeType === 8) {\n    return '<!--' + node.data + '-->\\n\\n';\n  }\n\n  // process only node elements\n  if (node.nodeType !== 1) {\n    return '';\n  }\n\n  var tagName = node.tagName.toLowerCase();\n\n  switch (tagName) {\n\n    //\n    // BLOCKS\n    //\n    case 'h1':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.header')(node, globals, 1) + '\\n\\n'; }\n      break;\n    case 'h2':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.header')(node, globals, 2) + '\\n\\n'; }\n      break;\n    case 'h3':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.header')(node, globals, 3) + '\\n\\n'; }\n      break;\n    case 'h4':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.header')(node, globals, 4) + '\\n\\n'; }\n      break;\n    case 'h5':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.header')(node, globals, 5) + '\\n\\n'; }\n      break;\n    case 'h6':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.header')(node, globals, 6) + '\\n\\n'; }\n      break;\n\n    case 'p':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.paragraph')(node, globals) + '\\n\\n'; }\n      break;\n\n    case 'blockquote':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.blockquote')(node, globals) + '\\n\\n'; }\n      break;\n\n    case 'hr':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.hr')(node, globals) + '\\n\\n'; }\n      break;\n\n    case 'ol':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.list')(node, globals, 'ol') + '\\n\\n'; }\n      break;\n\n    case 'ul':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.list')(node, globals, 'ul') + '\\n\\n'; }\n      break;\n\n    case 'precode':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.codeBlock')(node, globals) + '\\n\\n'; }\n      break;\n\n    case 'pre':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.pre')(node, globals) + '\\n\\n'; }\n      break;\n\n    case 'table':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.table')(node, globals) + '\\n\\n'; }\n      break;\n\n    //\n    // SPANS\n    //\n    case 'code':\n      txt = showdown.subParser('makeMarkdown.codeSpan')(node, globals);\n      break;\n\n    case 'em':\n    case 'i':\n      txt = showdown.subParser('makeMarkdown.emphasis')(node, globals);\n      break;\n\n    case 'strong':\n    case 'b':\n      txt = showdown.subParser('makeMarkdown.strong')(node, globals);\n      break;\n\n    case 'del':\n      txt = showdown.subParser('makeMarkdown.strikethrough')(node, globals);\n      break;\n\n    case 'a':\n      txt = showdown.subParser('makeMarkdown.links')(node, globals);\n      break;\n\n    case 'img':\n      txt = showdown.subParser('makeMarkdown.image')(node, globals);\n      break;\n\n    default:\n      txt = node.outerHTML + '\\n\\n';\n  }\n\n  // common normalization\n  // TODO eventually\n\n  return txt;\n});\n\r\nshowdown.subParser('makeMarkdown.paragraph', function (node, globals) {\n  'use strict';\n\n  var txt = '';\n  if (node.hasChildNodes()) {\n    var children = node.childNodes,\n        childrenLength = children.length;\n    for (var i = 0; i < childrenLength; ++i) {\n      txt += showdown.subParser('makeMarkdown.node')(children[i], globals);\n    }\n  }\n\n  // some text normalization\n  txt = txt.trim();\n\n  return txt;\n});\n\r\nshowdown.subParser('makeMarkdown.pre', function (node, globals) {\n  'use strict';\n\n  var num  = node.getAttribute('prenum');\n  return '<pre>' + globals.preList[num] + '</pre>';\n});\n\r\nshowdown.subParser('makeMarkdown.strikethrough', function (node, globals) {\n  'use strict';\n\n  var txt = '';\n  if (node.hasChildNodes()) {\n    txt += '~~';\n    var children = node.childNodes,\n        childrenLength = children.length;\n    for (var i = 0; i < childrenLength; ++i) {\n      txt += showdown.subParser('makeMarkdown.node')(children[i], globals);\n    }\n    txt += '~~';\n  }\n  return txt;\n});\n\r\nshowdown.subParser('makeMarkdown.strong', function (node, globals) {\n  'use strict';\n\n  var txt = '';\n  if (node.hasChildNodes()) {\n    txt += '**';\n    var children = node.childNodes,\n        childrenLength = children.length;\n    for (var i = 0; i < childrenLength; ++i) {\n      txt += showdown.subParser('makeMarkdown.node')(children[i], globals);\n    }\n    txt += '**';\n  }\n  return txt;\n});\n\r\nshowdown.subParser('makeMarkdown.table', function (node, globals) {\n  'use strict';\n\n  var txt = '',\n      tableArray = [[], []],\n      headings   = node.querySelectorAll('thead>tr>th'),\n      rows       = node.querySelectorAll('tbody>tr'),\n      i, ii;\n  for (i = 0; i < headings.length; ++i) {\n    var headContent = showdown.subParser('makeMarkdown.tableCell')(headings[i], globals),\n        allign = '---';\n\n    if (headings[i].hasAttribute('style')) {\n      var style = headings[i].getAttribute('style').toLowerCase().replace(/\\s/g, '');\n      switch (style) {\n        case 'text-align:left;':\n          allign = ':---';\n          break;\n        case 'text-align:right;':\n          allign = '---:';\n          break;\n        case 'text-align:center;':\n          allign = ':---:';\n          break;\n      }\n    }\n    tableArray[0][i] = headContent.trim();\n    tableArray[1][i] = allign;\n  }\n\n  for (i = 0; i < rows.length; ++i) {\n    var r = tableArray.push([]) - 1,\n        cols = rows[i].getElementsByTagName('td');\n\n    for (ii = 0; ii < headings.length; ++ii) {\n      var cellContent = ' ';\n      if (typeof cols[ii] !== 'undefined') {\n        cellContent = showdown.subParser('makeMarkdown.tableCell')(cols[ii], globals);\n      }\n      tableArray[r].push(cellContent);\n    }\n  }\n\n  var cellSpacesCount = 3;\n  for (i = 0; i < tableArray.length; ++i) {\n    for (ii = 0; ii < tableArray[i].length; ++ii) {\n      var strLen = tableArray[i][ii].length;\n      if (strLen > cellSpacesCount) {\n        cellSpacesCount = strLen;\n      }\n    }\n  }\n\n  for (i = 0; i < tableArray.length; ++i) {\n    for (ii = 0; ii < tableArray[i].length; ++ii) {\n      if (i === 1) {\n        if (tableArray[i][ii].slice(-1) === ':') {\n          tableArray[i][ii] = showdown.helper.padEnd(tableArray[i][ii].slice(-1), cellSpacesCount - 1, '-') + ':';\n        } else {\n          tableArray[i][ii] = showdown.helper.padEnd(tableArray[i][ii], cellSpacesCount, '-');\n        }\n      } else {\n        tableArray[i][ii] = showdown.helper.padEnd(tableArray[i][ii], cellSpacesCount);\n      }\n    }\n    txt += '| ' + tableArray[i].join(' | ') + ' |\\n';\n  }\n\n  return txt.trim();\n});\n\r\nshowdown.subParser('makeMarkdown.tableCell', function (node, globals) {\n  'use strict';\n\n  var txt = '';\n  if (!node.hasChildNodes()) {\n    return '';\n  }\n  var children = node.childNodes,\n      childrenLength = children.length;\n\n  for (var i = 0; i < childrenLength; ++i) {\n    txt += showdown.subParser('makeMarkdown.node')(children[i], globals, true);\n  }\n  return txt.trim();\n});\n\r\nshowdown.subParser('makeMarkdown.txt', function (node) {\n  'use strict';\n\n  var txt = node.nodeValue;\n\n  // multiple spaces are collapsed\n  txt = txt.replace(/ +/g, ' ');\n\n  // replace the custom ¨NBSP; with a space\n  txt = txt.replace(/¨NBSP;/g, ' ');\n\n  // \", <, > and & should replace escaped html entities\n  txt = showdown.helper.unescapeHTMLEntities(txt);\n\n  // escape markdown magic characters\n  // emphasis, strong and strikethrough - can appear everywhere\n  // we also escape pipe (|) because of tables\n  // and escape ` because of code blocks and spans\n  txt = txt.replace(/([*_~|`])/g, '\\\\$1');\n\n  // escape > because of blockquotes\n  txt = txt.replace(/^(\\s*)>/g, '\\\\$1>');\n\n  // hash character, only troublesome at the beginning of a line because of headers\n  txt = txt.replace(/^#/gm, '\\\\#');\n\n  // horizontal rules\n  txt = txt.replace(/^(\\s*)([-=]{3,})(\\s*)$/, '$1\\\\$2$3');\n\n  // dot, because of ordered lists, only troublesome at the beginning of a line when preceded by an integer\n  txt = txt.replace(/^( {0,3}\\d+)\\./gm, '$1\\\\.');\n\n  // +, * and -, at the beginning of a line becomes a list, so we need to escape them also (asterisk was already escaped)\n  txt = txt.replace(/^( {0,3})([+-])/gm, '$1\\\\$2');\n\n  // images and links, ] followed by ( is problematic, so we escape it\n  txt = txt.replace(/]([\\s]*)\\(/g, '\\\\]$1\\\\(');\n\n  // reference URIs must also be escaped\n  txt = txt.replace(/^ {0,3}\\[([\\S \\t]*?)]:/gm, '\\\\[$1]:');\n\n  return txt;\n});\n\r\nvar root = this;\n\n// AMD Loader\nif (typeof define === 'function' && define.amd) {\n  define(function () {\n    'use strict';\n    return showdown;\n  });\n\n// CommonJS/nodeJS Loader\n} else if (typeof module !== 'undefined' && module.exports) {\n  module.exports = showdown;\n\n// Regular Browser loader\n} else {\n  root.showdown = showdown;\n}\n}).call(this);\r\n\n//# sourceMappingURL=showdown.js.map\r\n","/**\n * xss\n *\n * @author Zongmin Lei<leizongmin@gmail.com>\n */\n\nvar DEFAULT = require(\"./default\");\nvar parser = require(\"./parser\");\nvar FilterXSS = require(\"./xss\");\n\n/**\n * filter xss function\n *\n * @param {String} html\n * @param {Object} options { whiteList, onTag, onTagAttr, onIgnoreTag, onIgnoreTagAttr, safeAttrValue, escapeHtml }\n * @return {String}\n */\nfunction filterXSS(html, options) {\n  var xss = new FilterXSS(options);\n  return xss.process(html);\n}\n\nexports = module.exports = filterXSS;\nexports.filterXSS = filterXSS;\nexports.FilterXSS = FilterXSS;\nfor (var i in DEFAULT) exports[i] = DEFAULT[i];\nfor (var i in parser) exports[i] = parser[i];\n\n// using `xss` on the browser, output `filterXSS` to the globals\nif (typeof window !== \"undefined\") {\n  window.filterXSS = module.exports;\n}\n\n// using `xss` on the WebWorker, output `filterXSS` to the globals\nfunction isWorkerEnv() {\n  return typeof self !== 'undefined' && typeof DedicatedWorkerGlobalScope !== 'undefined' && self instanceof DedicatedWorkerGlobalScope;\n}\nif (isWorkerEnv()) {\n  self.filterXSS = module.exports;\n}\n","import showdown from 'showdown';\nimport xss from 'xss';\n\n\n// 从 webpack 诸如 markdown 文件\nconst markdownCN = markdownFileStringPlaceholderCN;\nconst markdownEN = markdownFileStringPlaceholderEN;\n\nconst converter = new showdown.Converter();\nconverter.setFlavor('github');\n\nlet html = '';\n\nconst app = document.getElementById('app');\nconst languageSelectEl = document.getElementById('language-select');\n\nfunction languageSelectChangeHandler(event){\n  switch (languageSelectEl.value) {\n    case '0': {\n      html = converter.makeHtml(markdownCN);\n      break;\n    }\n    case '1': {\n      html = converter.makeHtml(markdownEN);\n      break;\n    }\n  }\n  app.innerHTML = xss(html);\n}\n\nlanguageSelectChangeHandler();\n\nlanguageSelectEl.onchange = languageSelectChangeHandler;","/**\n * cssfilter\n *\n * @author 老雷<leizongmin@gmail.com>\n */\n\nvar DEFAULT = require('./default');\nvar parseStyle = require('./parser');\nvar _ = require('./util');\n\n\n/**\n * 返回值是否为空\n *\n * @param {Object} obj\n * @return {Boolean}\n */\nfunction isNull (obj) {\n  return (obj === undefined || obj === null);\n}\n\n/**\n * 浅拷贝对象\n *\n * @param {Object} obj\n * @return {Object}\n */\nfunction shallowCopyObject (obj) {\n  var ret = {};\n  for (var i in obj) {\n    ret[i] = obj[i];\n  }\n  return ret;\n}\n\n/**\n * 创建CSS过滤器\n *\n * @param {Object} options\n *   - {Object} whiteList\n *   - {Function} onAttr\n *   - {Function} onIgnoreAttr\n *   - {Function} safeAttrValue\n */\nfunction FilterCSS (options) {\n  options = shallowCopyObject(options || {});\n  options.whiteList = options.whiteList || DEFAULT.whiteList;\n  options.onAttr = options.onAttr || DEFAULT.onAttr;\n  options.onIgnoreAttr = options.onIgnoreAttr || DEFAULT.onIgnoreAttr;\n  options.safeAttrValue = options.safeAttrValue || DEFAULT.safeAttrValue;\n  this.options = options;\n}\n\nFilterCSS.prototype.process = function (css) {\n  // 兼容各种奇葩输入\n  css = css || '';\n  css = css.toString();\n  if (!css) return '';\n\n  var me = this;\n  var options = me.options;\n  var whiteList = options.whiteList;\n  var onAttr = options.onAttr;\n  var onIgnoreAttr = options.onIgnoreAttr;\n  var safeAttrValue = options.safeAttrValue;\n\n  var retCSS = parseStyle(css, function (sourcePosition, position, name, value, source) {\n\n    var check = whiteList[name];\n    var isWhite = false;\n    if (check === true) isWhite = check;\n    else if (typeof check === 'function') isWhite = check(value);\n    else if (check instanceof RegExp) isWhite = check.test(value);\n    if (isWhite !== true) isWhite = false;\n\n    // 如果过滤后 value 为空则直接忽略\n    value = safeAttrValue(name, value);\n    if (!value) return;\n\n    var opts = {\n      position: position,\n      sourcePosition: sourcePosition,\n      source: source,\n      isWhite: isWhite\n    };\n\n    if (isWhite) {\n\n      var ret = onAttr(name, value, opts);\n      if (isNull(ret)) {\n        return name + ':' + value;\n      } else {\n        return ret;\n      }\n\n    } else {\n\n      var ret = onIgnoreAttr(name, value, opts);\n      if (!isNull(ret)) {\n        return ret;\n      }\n\n    }\n  });\n\n  return retCSS;\n};\n\n\nmodule.exports = FilterCSS;\n","/**\n * cssfilter\n *\n * @author 老雷<leizongmin@gmail.com>\n */\n\nvar _ = require('./util');\n\n\n/**\n * 解析style\n *\n * @param {String} css\n * @param {Function} onAttr 处理属性的函数\n *   参数格式： function (sourcePosition, position, name, value, source)\n * @return {String}\n */\nfunction parseStyle (css, onAttr) {\n  css = _.trimRight(css);\n  if (css[css.length - 1] !== ';') css += ';';\n  var cssLength = css.length;\n  var isParenthesisOpen = false;\n  var lastPos = 0;\n  var i = 0;\n  var retCSS = '';\n\n  function addNewAttr () {\n    // 如果没有正常的闭合圆括号，则直接忽略当前属性\n    if (!isParenthesisOpen) {\n      var source = _.trim(css.slice(lastPos, i));\n      var j = source.indexOf(':');\n      if (j !== -1) {\n        var name = _.trim(source.slice(0, j));\n        var value = _.trim(source.slice(j + 1));\n        // 必须有属性名称\n        if (name) {\n          var ret = onAttr(lastPos, retCSS.length, name, value, source);\n          if (ret) retCSS += ret + '; ';\n        }\n      }\n    }\n    lastPos = i + 1;\n  }\n\n  for (; i < cssLength; i++) {\n    var c = css[i];\n    if (c === '/' && css[i + 1] === '*') {\n      // 备注开始\n      var j = css.indexOf('*/', i + 2);\n      // 如果没有正常的备注结束，则后面的部分全部跳过\n      if (j === -1) break;\n      // 直接将当前位置调到备注结尾，并且初始化状态\n      i = j + 1;\n      lastPos = i + 1;\n      isParenthesisOpen = false;\n    } else if (c === '(') {\n      isParenthesisOpen = true;\n    } else if (c === ')') {\n      isParenthesisOpen = false;\n    } else if (c === ';') {\n      if (isParenthesisOpen) {\n        // 在圆括号里面，忽略\n      } else {\n        addNewAttr();\n      }\n    } else if (c === '\\n') {\n      addNewAttr();\n    }\n  }\n\n  return _.trim(retCSS);\n}\n\nmodule.exports = parseStyle;\n","/**\n * filter xss\n *\n * @author Zongmin Lei<leizongmin@gmail.com>\n */\n\nvar FilterCSS = require(\"cssfilter\").FilterCSS;\nvar DEFAULT = require(\"./default\");\nvar parser = require(\"./parser\");\nvar parseTag = parser.parseTag;\nvar parseAttr = parser.parseAttr;\nvar _ = require(\"./util\");\n\n/**\n * returns `true` if the input value is `undefined` or `null`\n *\n * @param {Object} obj\n * @return {Boolean}\n */\nfunction isNull(obj) {\n  return obj === undefined || obj === null;\n}\n\n/**\n * get attributes for a tag\n *\n * @param {String} html\n * @return {Object}\n *   - {String} html\n *   - {Boolean} closing\n */\nfunction getAttrs(html) {\n  var i = _.spaceIndex(html);\n  if (i === -1) {\n    return {\n      html: \"\",\n      closing: html[html.length - 2] === \"/\"\n    };\n  }\n  html = _.trim(html.slice(i + 1, -1));\n  var isClosing = html[html.length - 1] === \"/\";\n  if (isClosing) html = _.trim(html.slice(0, -1));\n  return {\n    html: html,\n    closing: isClosing\n  };\n}\n\n/**\n * shallow copy\n *\n * @param {Object} obj\n * @return {Object}\n */\nfunction shallowCopyObject(obj) {\n  var ret = {};\n  for (var i in obj) {\n    ret[i] = obj[i];\n  }\n  return ret;\n}\n\n/**\n * FilterXSS class\n *\n * @param {Object} options\n *        whiteList, onTag, onTagAttr, onIgnoreTag,\n *        onIgnoreTagAttr, safeAttrValue, escapeHtml\n *        stripIgnoreTagBody, allowCommentTag, stripBlankChar\n *        css{whiteList, onAttr, onIgnoreAttr} `css=false` means don't use `cssfilter`\n */\nfunction FilterXSS(options) {\n  options = shallowCopyObject(options || {});\n\n  if (options.stripIgnoreTag) {\n    if (options.onIgnoreTag) {\n      console.error(\n        'Notes: cannot use these two options \"stripIgnoreTag\" and \"onIgnoreTag\" at the same time'\n      );\n    }\n    options.onIgnoreTag = DEFAULT.onIgnoreTagStripAll;\n  }\n\n  options.whiteList = options.whiteList || DEFAULT.whiteList;\n  options.onTag = options.onTag || DEFAULT.onTag;\n  options.onTagAttr = options.onTagAttr || DEFAULT.onTagAttr;\n  options.onIgnoreTag = options.onIgnoreTag || DEFAULT.onIgnoreTag;\n  options.onIgnoreTagAttr = options.onIgnoreTagAttr || DEFAULT.onIgnoreTagAttr;\n  options.safeAttrValue = options.safeAttrValue || DEFAULT.safeAttrValue;\n  options.escapeHtml = options.escapeHtml || DEFAULT.escapeHtml;\n  this.options = options;\n\n  if (options.css === false) {\n    this.cssFilter = false;\n  } else {\n    options.css = options.css || {};\n    this.cssFilter = new FilterCSS(options.css);\n  }\n}\n\n/**\n * start process and returns result\n *\n * @param {String} html\n * @return {String}\n */\nFilterXSS.prototype.process = function(html) {\n  // compatible with the input\n  html = html || \"\";\n  html = html.toString();\n  if (!html) return \"\";\n\n  var me = this;\n  var options = me.options;\n  var whiteList = options.whiteList;\n  var onTag = options.onTag;\n  var onIgnoreTag = options.onIgnoreTag;\n  var onTagAttr = options.onTagAttr;\n  var onIgnoreTagAttr = options.onIgnoreTagAttr;\n  var safeAttrValue = options.safeAttrValue;\n  var escapeHtml = options.escapeHtml;\n  var cssFilter = me.cssFilter;\n\n  // remove invisible characters\n  if (options.stripBlankChar) {\n    html = DEFAULT.stripBlankChar(html);\n  }\n\n  // remove html comments\n  if (!options.allowCommentTag) {\n    html = DEFAULT.stripCommentTag(html);\n  }\n\n  // if enable stripIgnoreTagBody\n  var stripIgnoreTagBody = false;\n  if (options.stripIgnoreTagBody) {\n    var stripIgnoreTagBody = DEFAULT.StripTagBody(\n      options.stripIgnoreTagBody,\n      onIgnoreTag\n    );\n    onIgnoreTag = stripIgnoreTagBody.onIgnoreTag;\n  }\n\n  var retHtml = parseTag(\n    html,\n    function(sourcePosition, position, tag, html, isClosing) {\n      var info = {\n        sourcePosition: sourcePosition,\n        position: position,\n        isClosing: isClosing,\n        isWhite: whiteList.hasOwnProperty(tag)\n      };\n\n      // call `onTag()`\n      var ret = onTag(tag, html, info);\n      if (!isNull(ret)) return ret;\n\n      if (info.isWhite) {\n        if (info.isClosing) {\n          return \"</\" + tag + \">\";\n        }\n\n        var attrs = getAttrs(html);\n        var whiteAttrList = whiteList[tag];\n        var attrsHtml = parseAttr(attrs.html, function(name, value) {\n          // call `onTagAttr()`\n          var isWhiteAttr = _.indexOf(whiteAttrList, name) !== -1;\n          var ret = onTagAttr(tag, name, value, isWhiteAttr);\n          if (!isNull(ret)) return ret;\n\n          if (isWhiteAttr) {\n            // call `safeAttrValue()`\n            value = safeAttrValue(tag, name, value, cssFilter);\n            if (value) {\n              return name + '=\"' + value + '\"';\n            } else {\n              return name;\n            }\n          } else {\n            // call `onIgnoreTagAttr()`\n            var ret = onIgnoreTagAttr(tag, name, value, isWhiteAttr);\n            if (!isNull(ret)) return ret;\n            return;\n          }\n        });\n\n        // build new tag html\n        var html = \"<\" + tag;\n        if (attrsHtml) html += \" \" + attrsHtml;\n        if (attrs.closing) html += \" /\";\n        html += \">\";\n        return html;\n      } else {\n        // call `onIgnoreTag()`\n        var ret = onIgnoreTag(tag, html, info);\n        if (!isNull(ret)) return ret;\n        return escapeHtml(html);\n      }\n    },\n    escapeHtml\n  );\n\n  // if enable stripIgnoreTagBody\n  if (stripIgnoreTagBody) {\n    retHtml = stripIgnoreTagBody.remove(retHtml);\n  }\n\n  return retHtml;\n};\n\nmodule.exports = FilterXSS;\n"],"sourceRoot":""}